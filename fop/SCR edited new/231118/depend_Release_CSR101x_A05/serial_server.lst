
depend_Release_CSR101x_A05/serial_server.elf:     file format elf32-xap2

Disassembly of section .text:

0x00000010 <PROG_PATCH_ADDRESS>:
      10:	03AE      	ror        @(+0x3, x)
      11:	7F75      	nadd       al, @0x7F <__size_of_gattSetAdvertParams+0x3>
      12:	3000      	**prefx    0x30
      13:	06C7      	and        al, @(+0x3006, y)
      14:	EA41      	addc       ah, @0xFFEA <(scratchpad)>
      15:	CFD2      	xor        ah, @(-0x31, x)
      16:	C8C2      	and        ah, @(-0x38, x)
      17:	D830      	add        ah, #-0x28
      18:	0106      	ld         ux, @(+0x1, y)
      19:	D256      	sub        al, @(-0x2E, x)
      1A:	C2E8      	bpl        -0x3E <___libgatt_lib_db_1306+0x7FFFDC:0xFFFFDC[p]>
      1B:	30E8      	bpl        +0x30 <CS_SIZE:0x4B[p]>
      1C:	06DC      	xor        y, #0x6
      1D:	7B01      	st         flags, @(+0x7B, y)
      1E:	ECD2      	xor        ah, @(-0x14, x)
      1F:	E8C2      	and        ah, @(-0x18, x)
      20:	DE30      	add        ah, #-0x22
      21:	4106      	ld         ux, @(+0x41, y)
      22:	D289      	cmp        x, @0xFFD2 <___libgatt_lib_db_2743+0x151>
      23:	C2EE      	bmi        -0x3E, x
      24:	30E8      	bpl        +0x30 <___libgatt_lib_db_10:0x54[p]>
      25:	06C0      	and        ah, #0x6
      26:	B121      	st         ah, @0xFFB1 <___libgatt_lib_db_2743+0x130>
      27:	C8D2      	xor        ah, @(-0x38, x)
      28:	C8C2      	and        ah, @(-0x38, x)
      29:	C130      	add        ah, #-0x3F
      2A:	2106      	ld         ux, @(+0x21, y)
      2B:	D200      	**prefx    0xD2
      2C:	C2C9      	and        x, @0xD1C2 <___libgatt_lib_db_4110+0x14>
      2D:	30C8      	and        x, #0x30
      2E:	06C2      	and        ah, @(+0x6, x)
      2F:	B601      	st         flags, @(-0x4A, y)
      30:	CAD2      	xor        ah, @(-0x36, x)
      31:	C8C2      	and        ah, @(-0x38, x)
      32:	C430      	add        ah, #-0x3C
      33:	4106      	ld         ux, @(+0x41, y)
      34:	D262      	subc       ah, @(-0x2E, x)
      35:	C2CC      	and        y, #0xFFC2
      36:	30C8      	and        x, #0x30
      37:	B5C6      	and        al, @(-0x4B, x)
      38:	5E61      	subc       ah, @0x5E <___libgatt_lib_db_2586>
      39:	CED2      	xor        ah, @(-0x32, x)
      3A:	C8C2      	and        ah, @(-0x38, x)
      3B:	AD80      	cmp        ah, #-0x53
      3C:	07C2      	and        ah, @(+0x7, x)
      3D:	0190      	smult      #+0x1
      3E:	E068      	subc       x, #-0x20
      3F:	94C3      	and        ah, @(-0x6C, y)
      40:	4025      	st         al, @0x40 <___libgatt_lib_db_1038>
      41:	D218      	ld         x, #-0x2E
      42:	9007      	ld         uy, @(-0x70, y)
      43:	E800      	**prefx    0xE8
      44:	70E0      	bra        -0x1790 <___libgatt_lib_db_1306+0x7FE8B4:0xFFE8B4[p]>
      45:	9010      	ld         ah, #-0x70
      46:	3801      	st         flags, @(+0x38, y)
      47:	C2E0      	bra        -0x3E <patch_bitmap:0x9[p]>
      48:	30E4      	blt        +0x30 <___libgatt_lib_db_3936+0x1:0x78[p]>
      49:	02E3      	bra        @(+0x2, y)
      4A:	C774      	nadd       al, #-0x39
      4B:	90F0      	bne        -0x70 <___libgatt_lib_db_1306+0x7FFFDB:0xFFFFDB[p]>
      4C:	3F01      	st         flags, @(+0x3F, y)
      4D:	01F0      	bne        +0x1 <UART_RATE_19K2:0x4E[p]>
      4E:	3011      	ld         ah, @0x30 <___libgatt_lib_db_130>
      4F:	3607      	ld         uy, @(+0x36, y)
      50:	0190      	smult      #+0x1
      51:	E038      	add        x, #-0x20
      52:	C2B4      	or         al, #-0x3E
      53:	8002      	st         ux, @(-0x80, y)
      54:	B40D      	rti        @(-0x4C, y)
      55:	02C3      	and        ah, @(+0x2, y)
      56:	0880      	cmp        ah, #+0x8
      57:	C4B4      	or         al, #-0x3C
      58:	8002      	st         ux, @(-0x80, y)
      59:	B403      	st         uy, @(-0x4C, y)
      5A:	20C6      	and        al, @(+0x20, x)
      5B:	0090      	smult      #+0x0
      5C:	E0E8      	bpl        -0x20 <.LASFDE0:0x3C[p]>
      5D:	1A70      	nadd       ah, #+0x1A
      5E:	E0A3      	asl        @(-0x20, y)
      5F:	1670      	nadd       ah, #+0x16
      60:	0090      	smult      #+0x0
      61:	E060      	subc       ah, #-0x20
      62:	0260      	subc       ah, #+0x2
      63:	0224      	bge        +0x2 <___libgatt_lib_db_2508:0x65[p]>
      64:	90F8      	bcc        -0x70 <___libgatt_lib_db_1306+0x7FFFF4:0xFFFFF4[p]>
      65:	5802      	st         ux, @(+0x58, y)
      66:	28E0      	bra        +0x28 <___libgatt_lib_db_4141:0x8E[p]>
      67:	0290      	smult      #+0x2
      68:	F018      	ld         x, #-0x10
      69:	0290      	smult      #+0x2
      6A:	F01F      	ld         y, @(-0x10, y)
      6B:	1A01      	st         flags, @(+0x1A, y)
      6C:	0720      	bgt        +0x7 <___libgatt_lib_db_4382:0x73[p]>
      6D:	9045      	addc       al, @0xFF90 <___libgatt_lib_db_2743+0x10F>
      6E:	E800      	**prefx    0xE8
      6F:	B4E0      	bra        -0x184C <___libgatt_lib_db_1306+0x7FE823:0xFFE823[p]>
      70:	1606      	ld         ux, @(+0x16, y)
      71:	0290      	smult      #+0x2
      72:	EA00      	**prefx    0xEA
      73:	A3F0      	bne        -0x165D <___libgatt_lib_db_1306+0x7FEA16:0xFFEA16[p]>
      74:	F0EB      	bpl        @(-0x10, y)
      75:	E0A3      	asl        @(-0x20, y)
      76:	A3F0      	bne        -0x5D <___libgatt_lib_db_11:0x19[p]>
      77:	F0E0      	bra        -0x10 <___libgatt_lib_db_2550:0x67[p]>
      78:	E0A3      	asl        @(-0x20, y)
      79:	A3F0      	bne        -0x5D <___libgatt_lib_db_1346:0x1C[p]>
      7A:	F0A3      	asl        @(-0x10, y)
      7B:	2880      	cmp        ah, #+0x28
      7C:	0290      	smult      #+0x2
      7D:	E000      	**prefx    0xE0
      7E:	C3F8      	bcc        -0x203D <___libgatt_lib_db_1306+0x7FE041:0xFFE041[p]>
      7F:	709A      	tst        @(+0x70, x)
      80:	A306      	ld         ux, @(-0x5D, y)
      81:	F9E0      	bra        -0x7 <___libgatt_lib_db_3936+0x3:0x7A[p]>
      82:	609B      	tst        @(+0x60, y)
      83:	9019      	ld         x, @0xFF90 <___libgatt_lib_db_2743+0x10F>
      84:	D801      	st         flags, @(-0x28, y)
      85:	C3E0      	bra        -0x3D <.LEFDE0:0x48[p]>
      86:	FC9A      	tst        @(-0x4, x)
      87:	E0A3      	asl        @(-0x20, y)
      88:	FD9B      	tst        @(-0x3, y)
      89:	28EC      	bmi        +0x28 <L0:0xB1[p]>
      8A:	0190      	smult      #+0x1
      8B:	F0D8      	xor        x, #0xFFF0
      8C:	39ED      	bmi        @0x39 <___libgatt_lib_db_2812>
      8D:	F0A3      	asl        @(-0x10, y)
      8E:	0190      	smult      #+0x1
      8F:	F0DF      	xor        y, @(-0x10, y)
      90:	3E01      	st         flags, @(+0x3E, y)
      91:	0190      	smult      #+0x1
      92:	E0F0      	bne        -0x20 <___libgatt_lib_db_374:0x72[p]>
      93:	E030      	add        ah, #-0x20
      94:	9025      	st         al, @0xFF90 <___libgatt_lib_db_2743+0x10F>
      95:	D801      	st         flags, @(-0x28, y)
      96:	F8E0      	bra        -0x8 <___libgatt_lib_db_4141:0x8E[p]>
      97:	0190      	smult      #+0x1
      98:	E070      	nadd       ah, #-0x20
      99:	98C3      	and        ah, @(-0x68, y)
      9A:	1870      	nadd       ah, #+0x18
      9B:	0190      	smult      #+0x1
      9C:	E0D9      	xor        x, @0xFFE0 <register ah>
      9D:	90F8      	bcc        -0x70 <___libgatt_lib_db_2509:0x2D[p]>
      9E:	7101      	st         flags, @(+0x71, y)
      9F:	C3E0      	bra        -0x3D <___libgatt_lib_db_2558:0x62[p]>
      A0:	7098      	tst        #+0x70
      A1:	900B      	enter      #-0x70
      A2:	F802      	st         ux, @(-0x8, y)
      A3:	54E0      	bra        +0x54 <___libgatt_lib_db_4625+0x1:0xF7[p]>
      A4:	F001      	st         flags, @(-0x10, y)
      A5:	0290      	smult      #+0x2
      A6:	F0FF      	bcs        @(-0x10, y)
      A7:	0090      	smult      #+0x0
      A8:	E0E8      	bpl        -0x20 <.LEFDE6:0x88[p]>
      A9:	90F8      	bcc        -0x70 <___libgatt_lib_db_2812:0x39[p]>
      AA:	0002      	st         ux, @(0x0, y)
      AB:	FAE0      	bra        -0x6 <___libgatt_lib_db_2987:0xA5[p]>
      AC:	06B8      	or         x, #+0x6
      AD:	7403      	st         uy, @(+0x74, y)
      AE:	F002      	st         ux, @(-0x10, y)
      AF:	E0A3      	asl        @(-0x20, y)
      B0:	B8FB      	bcc        @(-0x48, y)
      B1:	0F06      	ld         ux, @(+0xF, y)
      B2:	0074      	nadd       al, #+0x0
      B3:	A3F0      	bne        -0x5D <___libgatt_lib_db_2532:0x56[p]>
      B4:	F0E0      	bra        -0x10 <.LASFDE10:0xA4[p]>
      B5:	E0A3      	asl        @(-0x20, y)
      B6:	A3F0      	bne        -0x5D <___libgatt_lib_db_2551:0x59[p]>
      B7:	F0E0      	bra        -0x10 <___libgatt_lib_db_2990:0xA7[p]>
      B8:	A3A3      	asl        @(-0x5D, y)
      B9:	90F0      	bne        -0x70 <___libgatt_lib_db_213:0x49[p]>
      BA:	F001      	st         flags, @(-0x10, y)
      BB:	30E0      	bra        +0x30 <UART_RATE_57K6:0xEB[p]>
      BC:	57E1      	bra        @0x57 <___libgatt_lib_db_2589>
      BD:	D3D2      	xor        ah, @(-0x2D, x)
      BE:	A3F0      	bne        -0x5D <___libgatt_lib_db_2556:0x61[p]>
      BF:	F0E0      	bra        -0x10 <___libgatt_lib_db_2968:0xAF[p]>
      C0:	E0A3      	asl        @(-0x20, y)
      C1:	0B54      	sub        al, #+0xB
      C2:	90F0      	bne        -0x70 <___libgatt_lib_db_122:0x52[p]>
      C3:	F701      	st         flags, @(-0x9, y)
      C4:	90F0      	bne        -0x70 <___libgatt_lib_db_10:0x54[p]>
      C5:	C002      	st         ux, @(-0x40, y)
      C6:	F8E0      	bra        -0x8 <___libgatt_lib_db_136:0xBE[p]>
      C7:	E0A3      	asl        @(-0x20, y)
      C8:	A3F9      	bcc        @0xFFA3 <___libgatt_lib_db_2743+0x122>
      C9:	30E0      	bra        +0x30 <___libgatt_lib_db_4625+0x3:0xF9[p]>
      CA:	07E6      	blt        +0x7, x
      CB:	E7D2      	xor        ah, @(-0x19, x)
      CC:	7BFA      	bcc        +0x7B, x
      CD:	80FF      	bcs        @(-0x80, y)
      CE:	C205      	ld         flags, @(-0x3E, y)
      CF:	FAE7      	blt        @(-0x6, y)
      D0:	007B      	nadd       x, @(0x0, y)
      D1:	0290      	smult      #+0x2
      D2:	E4C0      	and        ah, #0xFFE4
      D3:	A3F0      	bne        -0x5D <___libgatt_lib_db_202+0x1:0x76[p]>
      D4:	A3F0      	bne        -0x5D <___libgatt_lib_db_3936:0x77[p]>
      D5:	A3F0      	bne        -0x5D <___libgatt_lib_db_3936+0x1:0x78[p]>
      D6:	A3F0      	bne        -0x5D <___libgatt_lib_db_3936+0x2:0x79[p]>
      D7:	A3F0      	bne        -0x5D <___libgatt_lib_db_3936+0x3:0x7A[p]>
      D8:	F0A3      	asl        @(-0x10, y)
      D9:	90C3      	and        ah, @(-0x70, y)
      DA:	C001      	st         flags, @(-0x40, y)
      DB:	98E0      	bra        -0x68 <___libgatt_lib_db_4382:0x73[p]>
      DC:	A3F0      	bne        -0x5D <__size_of_gattSetAdvertParams+0x3:0x7F[p]>
      DD:	99E0      	bra        -0x67 <___libgatt_lib_db_202+0x1:0x76[p]>
      DE:	A3F0      	bne        -0x5D <___libgatt_lib_db_108:0x81[p]>
      DF:	9AE0      	bra        -0x66 <___libgatt_lib_db_3936+0x2:0x79[p]>
      E0:	A3F0      	bne        -0x5D <___libgatt_lib_db_376:0x83[p]>
      E1:	9BE0      	bra        -0x65 <__size_of_gattSetAdvertParams:0x7C[p]>
      E2:	A3F0      	bne        -0x5D <___libgatt_lib_db_4509:0x85[p]>
      E3:	9BE0      	bra        -0x65 <__size_of_gattSetAdvertParams+0x2:0x7E[p]>
      E4:	A3F0      	bne        -0x5D <___libgatt_lib_db_180:0x87[p]>
      E5:	9BE0      	bra        -0x65 <DATA_PERSIST_SIZE:0x80[p]>
      E6:	A3F0      	bne        -0x5D <___libgatt_lib_db_150:0x89[p]>
      E7:	C2F0      	bne        -0x3E <___libgatt_lib_db_2972:0xA9[p]>
      E8:	01D3      	xor        ah, @(+0x1, y)
      E9:	9035      	add        al, @0xFF90 <___libgatt_lib_db_2743+0x10F>
      EA:	D801      	st         flags, @(-0x28, y)
      EB:	F8E0      	bra        -0x8 <___libgatt_lib_db_460+0x7:0xE3[p]>
      EC:	0190      	smult      #+0x1
      ED:	E070      	nadd       ah, #-0x20
      EE:	98C3      	and        ah, @(-0x68, y)
      EF:	2570      	nadd       ah, #+0x25
      F0:	0190      	smult      #+0x1
      F1:	E0D9      	xor        x, @0xFFE0 <register ah>
      F2:	90F8      	bcc        -0x70 <___libgatt_lib_db_181:0x82[p]>
      F3:	7101      	st         flags, @(+0x71, y)
      F4:	C3E0      	bra        -0x3D <___libgatt_lib_db_4094+0x2:0xB7[p]>
      F5:	7098      	tst        #+0x70
      F6:	9018      	ld         x, #-0x70
      F7:	A001      	st         flags, @(-0x60, y)
      F8:	F0E0      	bra        -0x10 <.LEFDE14:0xE8[p]>
      F9:	E0A3      	asl        @(-0x20, y)
      FA:	A3F0      	bne        -0x5D <___libgatt_lib_db_4107+0x2:0x9D[p]>
      FB:	F0E0      	bra        -0x10 <UART_RATE_57K6:0xEB[p]>
      FC:	E0A3      	asl        @(-0x20, y)
      FD:	A3F0      	bne        -0x5D <.LEFDE8:0xA0[p]>
      FE:	F0E0      	bra        -0x10 <.LASFDE16+0x2:0xEE[p]>
      FF:	E0A3      	asl        @(-0x20, y)
     100:	90F0      	bne        -0x70 <___libgatt_lib_db_4141+0x2:0x90[p]>
     101:	2F02      	st         ux, @(+0x2F, y)
     102:	90F0      	bne        -0x70 <___libgatt_lib_db_175:0x92[p]>
     103:	2801      	st         flags, @(+0x28, y)
     104:	B4E0      	bra        -0x4C <.LEFDE10:0xB8[p]>
     105:	58CA      	and        x, @(+0x58, x)
     106:	0020      	bgt        0x0 <.LSCIE0+0x2:0x106[p]>
     107:	901C      	ld         y, #-0x70
     108:	0003      	st         uy, @(0x0, y)
     109:	60E0      	bra        +0x60 <.LECIE0+0x1:0x169[p]>
     10A:	D24F      	addc       y, @(-0x2E, y)
     10B:	F8D4      	xor        al, #0xFFF8
     10C:	F0E4      	blt        -0x10 <___libgatt_lib_db_3938:0xFC[p]>
     10D:	E0A3      	asl        @(-0x20, y)
     10E:	A3F9      	bcc        @0xFFA3 <___libgatt_lib_db_2743+0x122>
     10F:	FAE0      	bra        -0x6 <___libgatt_lib_db_4431+0x2:0x109[p]>
     110:	E0A3      	asl        @(-0x20, y)
     111:	A3FB      	bcc        @(-0x5D, y)
     112:	FCE0      	bra        -0x4 <___libgatt_lib_db_4431+0x7:0x10E[p]>
     113:	A3A3      	asl        @(-0x5D, y)
     114:	D2F0      	bne        -0x2E <ROMDATA_SIZE:0xE6[p]>
     115:	D200      	**prefx    0xD2
     116:	90D4      	xor        al, #0xD190
     117:	D801      	st         flags, @(-0x28, y)
     118:	FEE0      	bra        -0x2 <.LASFDE0+0x2:0x116[p]>
     119:	E0A3      	asl        @(-0x20, y)
     11A:	C3FF      	bcs        @(-0x3D, y)
     11B:	9EEA      	bpl        -0x62, x
     11C:	EBFD      	bcs        @0xFFEB <(scratchpad)>
     11D:	209F      	bsr        @(+0x20, y)
     11E:	28E7      	blt        @(+0x28, y)
     11F:	0260      	subc       ah, #+0x2
     120:	FF7D      	nadd       y, @0xFFFF <(scratchpad)>
     121:	0290      	smult      #+0x2
     122:	E000      	**prefx    0xE0
     123:	A3FF      	bcs        @(-0x205D, y)
     124:	60E0      	bra        +0x60 <.LASFDE2+0x8:0x184[p]>
     125:	7F02      	st         ux, @(+0x7F, y)
     126:	EFFF      	bcs        @(-0x11, y)
     127:	3060      	subc       ah, #+0x30
     128:	EDC3      	and        ah, @(-0x13, y)
     129:	409F      	bsr        @(+0x40, y)
     12A:	6005      	ld         flags, @(+0x60, y)
     12B:	EF03      	st         uy, @(-0x11, y)
     12C:	3941      	addc       ah, @0x39 <___libgatt_lib_db_2812>
     12D:	FDED      	bmi        @0xFFFD <(scratchpad)>
     12E:	9CC3      	and        ah, @(-0x64, y)
     12F:	0C40      	addc       ah, #+0xC
     130:	FDEC      	bmi        -0x3 <.LASFDE2+0x1:0x12D[p]>
     131:	0880      	cmp        ah, #+0x8
     132:	6041      	addc       ah, @0x60 <___libgatt_lib_db_2557>
     133:	00C2      	and        ah, @(0x0, x)
     134:	01D2      	xor        ah, @(+0x1, x)
     135:	007D      	nadd       y, @0x0 <L0>
     136:	0290      	smult      #+0x2
     137:	ED00      	**prefx    0xED
     138:	A3F0      	bne        -0x135D <___libgatt_lib_db_1306+0x7FEDDB:0xFFEDDB[p]>
     139:	F0E4      	blt        -0x10 <.LEFDE0+0x1:0x129[p]>
     13A:	E0A3      	asl        @(-0x20, y)
     13B:	A3F0      	bne        -0x5D <___libgatt_lib_db_460+0x2:0xDE[p]>
     13C:	F0E0      	bra        -0x10 <.LASFDE2:0x12C[p]>
     13D:	E0A3      	asl        @(-0x20, y)
     13E:	A3F0      	bne        -0x5D <___libgatt_lib_db_460+0x5:0xE1[p]>
     13F:	F0A3      	asl        @(-0x10, y)
     140:	D4C2      	and        ah, @(-0x2C, x)
     141:	2C01      	st         flags, @(+0x2C, y)
     142:	0190      	smult      #+0x1
     143:	E028      	ble        -0x20 <.LASFDE0+0xF:0x123[p]>
     144:	45B4      	or         al, #+0x45
     145:	901E      	ld         y, @(-0x70, x)
     146:	0000      	**prefx    0x0
     147:	F0E0      	bra        -0x10 <.LASFDE2+0xB:0x137[p]>
     148:	A3FF      	bcs        @(-0x5D, y)
     149:	F0E0      	bra        -0x10 <.LASFDE2+0xD:0x139[p]>
     14A:	90FE      	bcs        -0x70, x
     14B:	8000      	**prefx    0x80
     14C:	FDE0      	bra        -0x8003 <___libgatt_lib_db_1306+0x7F8149:0xFF8149[p]>
     14D:	E0A3      	asl        @(-0x20, y)
     14E:	EFFC      	bcs        -0x11 <.LASFDE2+0x11:0x13D[p]>
     14F:	9DC3      	and        ah, @(-0x63, y)
     150:	9CEE      	bmi        -0x64, x
     151:	E730      	add        ah, #-0x19
     152:	9004      	**Unknown**
     153:	8700      	**prefx    0x87
     154:	01F0      	bne        -0x78FF <___libgatt_lib_db_1306+0x7F8855:0xFF8855[p]>
     155:	3047      	addc       al, @(+0x30, y)
     156:	1601      	st         flags, @(+0x16, y)
     157:	01C2      	and        ah, @(+0x1, x)
     158:	D4D2      	xor        ah, @(-0x2C, x)
     159:	0190      	smult      #+0x1
     15A:	E0F0      	bne        -0x20 <.LASFDE2+0xE:0x13A[p]>
     15B:	F048      	addc       x, #-0x10
     15C:	E0A3      	asl        @(-0x20, y)
     15D:	A3F0      	bne        -0x5D <.LEFDE16:0x100[p]>
     15E:	F0E0      	bra        -0x10 <.LASFDE4+0xA:0x14E[p]>
     15F:	0190      	smult      #+0x1
     160:	F0F7      	beq        @(-0x10, y)
     161:	D4C2      	and        ah, @(-0x2C, x)
     162:	0090      	smult      #+0x0
     163:	E0E8      	bpl        -0x20 <.LEFDE2+0x3:0x143[p]>
     164:	E230      	add        ah, #-0x1E
     165:	903F      	add        y, @(-0x70, y)
     166:	3801      	st         flags, @(+0x38, y)
     167:	B4E0      	bra        -0x4C <.LASFDE0+0x7:0x11B[p]>
     168:	02CA      	and        x, @(+0x2, x)
     169:	1780      	cmp        ah, #+0x17
     16A:	C9B4      	or         al, #-0x37
     16B:	8002      	st         ux, @(-0x80, y)
     16C:	B412      	ld         ah, @(-0x4C, x)
     16D:	02CB      	and        x, @(+0x2, y)
     16E:	0D80      	cmp        ah, #+0xD
     16F:	CCB4      	or         al, #-0x34
     170:	8002      	st         ux, @(-0x80, y)
     171:	B408      	**Unknown**
     172:	02CD      	and        y, @0x2 <___libgatt_lib_db_1076>
     173:	0380      	cmp        ah, #+0x3
     174:	AFB4      	or         al, #-0x51
     175:	901F      	ld         y, @(-0x70, y)
     176:	F001      	st         flags, @(-0x10, y)
     177:	44E0      	bra        +0x44 <.LASFDE2+0x7:0x1BB[p]>
     178:	F004      	**Unknown**
     179:	E0A3      	asl        @(-0x20, y)
     17A:	A3F0      	bne        -0x5D <.LASFDE0+0x9:0x11D[p]>
     17B:	F0E0      	bra        -0x10 <L0:0x16B[p]>
     17C:	0190      	smult      #+0x1
     17D:	F0F7      	beq        @(-0x10, y)
     17E:	0090      	smult      #+0x0
     17F:	E0E8      	bpl        -0x20 <.LSCIE0+0x3:0x15F[p]>
     180:	E6C2      	and        ah, @(-0x1A, x)
     181:	A3F0      	bne        -0x5D <.LASFDE0+0x10:0x124[p]>
     182:	F0E0      	bra        -0x10 <.LASFDE0+0x6:0x172[p]>
     183:	0090      	smult      #+0x0
     184:	F0EF      	bmi        @(-0x10, y)
     185:	2301      	st         flags, @(+0x23, y)
     186:	7FE5      	blt        @0x7F <__size_of_gattSetAdvertParams+0x3>
     187:	3C60      	subc       ah, #+0x3C
     188:	0190      	smult      #+0x1
     189:	7428      	ble        +0x74 <.LASFDE8+0x1:0x1FD[p]>
     18A:	F04B      	addc       x, @(-0x10, y)
     18B:	0190      	smult      #+0x1
     18C:	F02F      	st         y, @(-0x10, y)
     18D:	7F75      	nadd       al, @0x7F <__size_of_gattSetAdvertParams+0x3>
     18E:	9000      	**prefx    0x90
     18F:	8002      	st         ux, @(-0x7080, y)
     190:	23E0      	bra        +0x23 <.LEFDE0+0x3:0x1B3[p]>
     191:	F823      	st         ah, @(-0x8, y)
     192:	0290      	smult      #+0x2
     193:	E040      	addc       ah, #-0x20
     194:	9048      	addc       x, #-0x70
     195:	F000      	**prefx    0xF0
     196:	90F0      	bne        -0x1070 <___libgatt_lib_db_1306+0x7FF126:0xFFF126[p]>
     197:	F700      	**prefx    0xF7
     198:	90F0      	bne        -0x970 <___libgatt_lib_db_1306+0x7FF828:0xFFF828[p]>
     199:	9802      	st         ux, @(-0x68, y)
     19A:	90E0      	bra        -0x70 <.LEFDE0+0x2:0x12A[p]>
     19B:	A801      	st         flags, @(-0x58, y)
     19C:	A3F0      	bne        -0x5D <.LASFDE2+0x13:0x13F[p]>
     19D:	F0E0      	bra        -0x10 <.LASFDE2+0x11:0x18D[p]>
     19E:	E0A3      	asl        @(-0x20, y)
     19F:	A3F0      	bne        -0x5D <.LEFDE2+0x2:0x142[p]>
     1A0:	F0E0      	bra        -0x10 <.LEFDE2:0x190[p]>
     1A1:	E0A3      	asl        @(-0x20, y)
     1A2:	A3F0      	bne        -0x5D <.LASFDE4+0x1:0x145[p]>
     1A3:	F0E0      	bra        -0x10 <.LEFDE2+0x3:0x193[p]>
     1A4:	F0A3      	asl        @(-0x10, y)
     1A5:	0801      	st         flags, @(+0x8, y)
     1A6:	0120      	bgt        +0x1 <.LASFDE0+0x3:0x1A7[p]>
     1A7:	90FB      	bcc        @(-0x70, y)
     1A8:	2801      	st         flags, @(+0x28, y)
     1A9:	B4E0      	bra        -0x4C <.LSCIE0+0x1:0x15D[p]>
     1AA:	F4CA      	and        x, @(-0xC, x)
     1AB:	0290      	smult      #+0x2
     1AC:	E049      	addc       x, @0xFFE0 <register ah>
     1AD:	21F5      	beq        @0x21 <___libgatt_lib_db_135>
     1AE:	0090      	smult      #+0x0
     1AF:	E038      	add        x, #-0x20
     1B0:	E020      	bgt        -0x20 <.LEFDE2:0x190[p]>
     1B1:	2005      	ld         flags, @(+0x20, y)
     1B2:	E40A      	st         xh, @(-0x1C, y)
     1B3:	0380      	cmp        ah, #+0x3
     1B4:	0A30      	add        ah, #+0xA
     1B5:	90DF      	xor        y, @(-0x70, y)
     1B6:	C002      	st         ux, @(-0x40, y)
     1B7:	F0E4      	blt        -0x10 <.LASFDE0+0x3:0x1A7[p]>
     1B8:	F0A3      	asl        @(-0x10, y)
     1B9:	F0A3      	asl        @(-0x10, y)
     1BA:	74A3      	asl        @(+0x74, y)
     1BB:	F0FF      	bcs        @(-0x10, y)
     1BC:	F0A3      	asl        @(-0x10, y)
     1BD:	F0A3      	asl        @(-0x10, y)
     1BE:	F0A3      	asl        @(-0x10, y)
     1BF:	CA80      	cmp        ah, #-0x36
     1C0:	0190      	smult      #+0x1
     1C1:	E038      	add        x, #-0x20
     1C2:	FE54      	sub        al, #-0x2
     1C3:	CAB4      	or         al, #-0x36
     1C4:	9045      	addc       al, @0xFF90 <___libgatt_lib_db_2743+0x10F>
     1C5:	7002      	st         ux, @(+0x70, y)
     1C6:	F9E0      	bra        -0x7 <.LASFDE2+0xB:0x1BF[p]>
     1C7:	82F5      	beq        @0xFF82 <___libgatt_lib_db_2743+0x101>
     1C8:	8375      	nadd       al, @0xFF83 <___libgatt_lib_db_2743+0x102>
     1C9:	E008      	**Unknown**
     1CA:	54F4      	beq        +0x54 <.LVL11+0x4:0x21E[p]>
     1CB:	6003      	st         uy, @(+0x60, y)
     1CC:	9035      	add        al, @0xFF90 <___libgatt_lib_db_2743+0x10F>
     1CD:	6000      	**prefx    0x60
     1CE:	60E0      	bra        +0x6060 <___libgatt_lib_db_3843+0x9B4:0x622E[p]>
     1CF:	242F      	st         y, @(+0x24, y)
     1D0:	F802      	st         ux, @(-0x8, y)
     1D1:	0290      	smult      #+0x2
     1D2:	E078      	nadd       x, #-0x20
     1D3:	2660      	subc       ah, #+0x26
     1D4:	7098      	tst        #+0x70
     1D5:	7423      	st         ah, @(+0x74, y)
     1D6:	F047      	addc       al, @(-0x10, y)
     1D7:	0190      	smult      #+0x1
     1D8:	E0F1      	bne        @0xFFE0 <register ah>
     1D9:	E620      	bgt        -0x1A <.LASFDE2+0xB:0x1BF[p]>
     1DA:	9019      	ld         x, @0xFF90 <___libgatt_lib_db_2743+0x10F>
     1DB:	2F01      	st         flags, @(+0x2F, y)
     1DC:	90F0      	bne        -0x70 <.LASFDE0:0x16C[p]>
     1DD:	4000      	**prefx    0x40
     1DE:	F0E4      	blt        +0x3FF0 <BSS_APP_SIZE+0xFC:0x41CE[p]>
     1DF:	0090      	smult      #+0x0
     1E0:	F047      	addc       al, @(-0x10, y)
     1E1:	8289      	cmp        x, @0xFF82 <___libgatt_lib_db_2743+0x101>
     1E2:	8375      	nadd       al, @0xFF83 <___libgatt_lib_db_2743+0x102>
     1E3:	E008      	**Unknown**
     1E4:	EF54      	sub        al, #-0x11
     1E5:	75F0      	bne        +0x75 <.LVL6:0x25A[p]>
     1E6:	FF7F      	nadd       y, @(-0x1, y)
     1E7:	5001      	st         flags, @(+0x50, y)

0x000001E8 <SMPairingAuthRsp>:
     1E8:	030B      	enter      #+0x3
     1E9:	8C00      	**prefx    0x8C
     1EA:	9219      	ld         x, @0x8B92 <pairing_req_instance>
     1EB:	E099      	tst        @0xFFE0 <register ah>
     1EC:	0BF4      	beq        +0xB <.LVL3:0x1F7[p]>
     1ED:	4B00      	**prefx    0x4B
     1EE:	C914      	ld         al, #+0x4AC9

0x000001EF <.LVL1>:
     1EF:	0027      	st         al, @(0x0, y)
     1F0:	E315      	ld         al, @0xFFE3 <register uxl>
     1F1:	4B00      	**prefx    0x4B
     1F2:	C911      	ld         ah, @0x4AC9 <DATA_BSS_APP_START>

0x000001F3 <.LVL2>:
     1F3:	0100      	**prefx    0x1
     1F4:	8800      	**prefx    0x88
     1F5:	389C      	bsr        +0x8838 <___libgatt_lib_db_471:0x8A2D[p]>
     1F6:	0BE0      	bra        +0xB <.LVL7+0x1:0x201[p]>

0x000001F7 <.LVL3>:
     1F7:	0014      	ld         al, #+0x0

0x000001F8 <.LVL4>:
     1F8:	0127      	st         al, @(+0x1, y)
     1F9:	0117      	ld         al, @(+0x1, y)
     1FA:	8800      	**prefx    0x88
     1FB:	5134      	add        al, #-0x77AF
     1FC:	0127      	st         al, @(+0x1, y)
     1FD:	E315      	ld         al, @0xFFE3 <register uxl>
     1FE:	0B00      	**prefx    0xB
     1FF:	0510      	ld         ah, #+0xB05

0x00000200 <.LVL7>:
     200:	019F      	bsr        @(+0x1, y)
     201:	030F      	leave      #+0x3

0x00000202 <___libgatt_lib_db_4585>:
     202:	020B      	enter      #+0x2

0x00000203 <.LCFI1>:
     203:	F925      	st         al, @0xFFF9 <(scratchpad)>
     204:	0023      	st         ah, @(0x0, y)
     205:	4B00      	**prefx    0x4B
     206:	C914      	ld         al, #+0x4AC9

0x00000207 <.LVL9>:
     207:	F825      	st         al, @0xFFF8 <(scratchpad)>
     208:	0814      	ld         al, #+0x8
     209:	F811      	ld         ah, @0xFFF8 <(scratchpad)>

0x0000020A <.LVL10>:
     20A:	001B      	ld         x, @(0x0, y)
     20B:	FD09      	bc2        
     20C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     20D:	0016      	ld         al, @(0x0, x)
     20E:	0100      	**prefx    0x1
     20F:	80B4      	or         al, #+0x80
     210:	0026      	st         al, @(0x0, x)
     211:	F919      	ld         x, @0xFFF9 <(scratchpad)>
     212:	8C00      	**prefx    0x8C
     213:	9229      	st         x, @0x8B92 <pairing_req_instance>
     214:	0B00      	**prefx    0xB
     215:	CB14      	ld         al, #+0xACB
     216:	0310      	ld         ah, #+0x3
     217:	0100      	**prefx    0x1
     218:	B500      	**prefx    0xB5
     219:	CF9C      	bsr        +0xB4CF <___libgatt_lib_db_3960:0xB6E8[p]>

0x0000021A <.LVL11>:
     21A:	E111      	ld         ah, @0xFFE1 <register al>
     21B:	001B      	ld         x, @(0x0, y)
     21C:	0016      	ld         al, @(0x0, x)
     21D:	E019      	ld         x, @0xFFE0 <register ah>
     21E:	0126      	st         al, @(+0x1, x)
     21F:	0017      	ld         al, @(0x0, y)
     220:	0226      	st         al, @(+0x2, x)
     221:	E015      	ld         al, @0xFFE0 <register ah>
     222:	0100      	**prefx    0x1
     223:	B400      	**prefx    0xB4
     224:	FC9C      	bsr        +0xB3FC <___libgatt_lib_db_3964:0xB620[p]>
     225:	020F      	leave      #+0x2

0x00000226 <___libgatt_lib_db_476>:
     226:	0014      	ld         al, #+0x0
     227:	9700      	**prefx    0x97
     228:	3625      	st         al, @0x9736 <sm_store_recall>
     229:	0014      	ld         al, #+0x0
     22A:	9700      	**prefx    0x97
     22B:	3725      	st         al, @0x9737 <sm_keys_request>
     22C:	0200      	**prefx    0x2
     22D:	7814      	ld         al, #+0x278
     22E:	9700      	**prefx    0x97
     22F:	3825      	st         al, @0x9738 <sm_div_approve_request>
     230:	0200      	**prefx    0x2
     231:	0214      	ld         al, #+0x202
     232:	8C00      	**prefx    0x8C
     233:	9425      	st         al, @0x8B94 <sm_pairing_auth_ind>
     234:	0014      	ld         al, #+0x0
     235:	8C00      	**prefx    0x8C
     236:	9325      	st         al, @0x8B93 <sm_long_term_key_ind>
     237:	00E2      	bra        0x0, x

0x00000238 <SMFeaturesReq>:
     238:	030B      	enter      #+0x3

0x00000239 <.LCFI0>:
     239:	0027      	st         al, @(0x0, y)
     23A:	0123      	st         ah, @(+0x1, y)
     23B:	EB9C      	bsr        -0x15 <___libgatt_lib_db_476:0x226[p]>

0x0000023C <.LVL1>:
     23C:	009B      	tst        @(0x0, y)
     23D:	04F0      	bne        +0x4 <.LVL1+0x5:0x241[p]>
     23E:	0014      	ld         al, #+0x0
     23F:	9700      	**prefx    0x97
     240:	3625      	st         al, @0x9736 <sm_store_recall>
     241:	019B      	tst        @(+0x1, y)
     242:	04F0      	bne        +0x4 <.LVL1+0xA:0x246[p]>
     243:	0014      	ld         al, #+0x0
     244:	9700      	**prefx    0x97
     245:	3725      	st         al, @0x9737 <sm_keys_request>
     246:	039B      	tst        @(+0x3, y)
     247:	04F0      	bne        +0x4 <.LVL2+0x3:0x24B[p]>

0x00000248 <.LVL2>:
     248:	0014      	ld         al, #+0x0
     249:	9700      	**prefx    0x97
     24A:	3825      	st         al, @0x9738 <sm_div_approve_request>
     24B:	049B      	tst        @(+0x4, y)
     24C:	04F0      	bne        +0x4 <.LVL3+0x3:0x250[p]>

0x0000024D <.LVL3>:
     24D:	0014      	ld         al, #+0x0
     24E:	8C00      	**prefx    0x8C
     24F:	9425      	st         al, @0x8B94 <sm_pairing_auth_ind>
     250:	059B      	tst        @(+0x5, y)
     251:	04F0      	bne        +0x4 <.LVL4+0x3:0x255[p]>

0x00000252 <.LVL4>:
     252:	0014      	ld         al, #+0x0
     253:	8C00      	**prefx    0x8C
     254:	9325      	st         al, @0x8B93 <sm_long_term_key_ind>
     255:	030F      	leave      #+0x3

0x00000256 <SMDistributeMasterLtk>:
     256:	E199      	tst        @0xFFE1 <register al>
     257:	06F4      	beq        +0x6 <.LVL7:0x25D[p]>
     258:	9300      	**prefx    0x93
     259:	6015      	ld         al, @0x9360 <DATA_ROMDATA_START>

0x0000025A <.LVL6>:
     25A:	0100      	**prefx    0x1
     25B:	00B4      	or         al, #+0x100
     25C:	05E0      	bra        +0x5 <.LVL8+0x2:0x261[p]>

0x0000025D <.LVL7>:
     25D:	9300      	**prefx    0x93
     25E:	6015      	ld         al, @0x9360 <DATA_ROMDATA_START>

0x0000025F <.LVL8>:
     25F:	FF00      	**prefx    0xFF
     260:	FFC4      	and        al, #0xFEFF
     261:	9300      	**prefx    0x93
     262:	6025      	st         al, @0x9360 <DATA_ROMDATA_START>
     263:	00E2      	bra        0x0, x

0x00000264 <SMDivApproval>:
     264:	020B      	enter      #+0x2
     265:	0023      	st         ah, @(0x0, y)
     266:	0100      	**prefx    0x1
     267:	AF00      	**prefx    0xAF
     268:	639C      	bsr        +0xAF63 <___libgatt_lib_db_363:0xB1CB[p]>

0x00000269 <.LVL1>:
     269:	001B      	ld         x, @(0x0, y)
     26A:	0188      	cmp        x, #+0x1
     26B:	09F0      	bne        +0x9 <.LASFDE4+0x8:0x274[p]>
     26C:	1690      	smult      #+0x16
     26D:	E119      	ld         x, @0xFFE1 <register al>
     26E:	9500      	**prefx    0x95
     26F:	2E16      	ld         al, @(-0x6AD2, x)
     270:	0100      	**prefx    0x1
     271:	CE00      	**prefx    0xCE
     272:	A49C      	bsr        +0xCDA4 <___libgatt_lib_db_4098:0xD016[p]>
     273:	04E0      	bra        +0x4 <.LASFDE4+0xB:0x277[p]>
     274:	0100      	**prefx    0x1
     275:	8700      	**prefx    0x87
     276:	0F9C      	bsr        +0x870F <___libgatt_lib_db_468:0x8985[p]>
     277:	020F      	leave      #+0x2

0x00000278 <___libgatt_lib_db_487>:
     278:	030B      	enter      #+0x3

0x00000279 <.LCFI1>:
     279:	0027      	st         al, @(0x0, y)
     27A:	0123      	st         ah, @(+0x1, y)
     27B:	0B00      	**prefx    0xB
     27C:	CA14      	ld         al, #+0xACA

0x0000027D <.LVL4>:
     27D:	0310      	ld         ah, #+0x3

0x0000027E <.LVL5>:
     27E:	0100      	**prefx    0x1
     27F:	B400      	**prefx    0xB4
     280:	689C      	bsr        +0xB468 <___libgatt_lib_db_3960:0xB6E8[p]>
     281:	E119      	ld         x, @0xFFE1 <register al>
     282:	0013      	ld         ah, @(0x0, y)
     283:	0122      	st         ah, @(+0x1, x)
     284:	0113      	ld         ah, @(+0x1, y)
     285:	0222      	st         ah, @(+0x2, x)
     286:	0100      	**prefx    0x1
     287:	B400      	**prefx    0xB4
     288:	989C      	bsr        +0xB398 <___libgatt_lib_db_3964:0xB620[p]>
     289:	030F      	leave      #+0x3

0x0000028A <___libgatt_lib_db_4591>:
     28A:	030B      	enter      #+0x3
     28B:	0617      	ld         al, @(+0x6, y)
     28C:	2CF4      	beq        +0x2C <.LVL5:0x2B8[p]>
     28D:	9400      	**prefx    0x94
     28E:	4615      	ld         al, @0x9446 <BSS_START>
     28F:	2CF0      	bne        +0x2C <.LVL5+0x3:0x2BB[p]>
     290:	4B00      	**prefx    0x4B
     291:	D315      	ld         al, @0x4AD3 <sm_security_started+0x2>
     292:	0284      	cmp        al, #+0x2
     293:	052C      	bcz        +0x5 <.LVL3:0x298[p]>
     294:	0110      	ld         ah, #+0x1

0x00000295 <.LVL2>:
     295:	4B00      	**prefx    0x4B
     296:	D321      	st         ah, @0x4AD3 <sm_security_started+0x2>
     297:	04E0      	bra        +0x4 <.LVL3+0x3:0x29B[p]>

0x00000298 <.LVL3>:
     298:	0134      	add        al, #+0x1
     299:	4B00      	**prefx    0x4B
     29A:	D325      	st         al, @0x4AD3 <sm_security_started+0x2>
     29B:	4B00      	**prefx    0x4B
     29C:	D315      	ld         al, @0x4AD3 <sm_security_started+0x2>
     29D:	0284      	cmp        al, #+0x2
     29E:	1D2C      	bcz        +0x1D <.LVL5+0x3:0x2BB[p]>
     29F:	0114      	ld         al, #+0x1
     2A0:	9400      	**prefx    0x94
     2A1:	4625      	st         al, @0x9446 <BSS_START>
     2A2:	4B00      	**prefx    0x4B
     2A3:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>
     2A4:	4B00      	**prefx    0x4B
     2A5:	D215      	ld         al, @0x4AD2 <sm_security_started+0x1>
     2A6:	E100      	**prefx    0xE1
     2A7:	E138      	add        x, #-0x1F1F
     2A8:	0110      	ld         ah, #+0x1

0x000002A9 <.LVL4>:
     2A9:	0023      	st         ah, @(0x0, y)
     2AA:	8700      	**prefx    0x87
     2AB:	6934      	add        al, #-0x7897
     2AC:	0127      	st         al, @(+0x1, y)
     2AD:	2D10      	ld         ah, #+0x2D
     2AE:	C700      	**prefx    0xC7
     2AF:	C014      	ld         al, #-0x3940
     2B0:	FF2B      	st         x, @(-0x1, y)
     2B1:	FF9F      	bsr        @(-0x1, y)
     2B2:	E199      	tst        @0xFFE1 <register al>
     2B3:	08F0      	bne        +0x8 <.LVL5+0x3:0x2BB[p]>
     2B4:	0010      	ld         ah, #+0x0
     2B5:	9400      	**prefx    0x94
     2B6:	4621      	st         ah, @0x9446 <BSS_START>
     2B7:	04E0      	bra        +0x4 <.LVL5+0x3:0x2BB[p]>

0x000002B8 <.LVL5>:
     2B8:	0014      	ld         al, #+0x0
     2B9:	4B00      	**prefx    0x4B
     2BA:	D325      	st         al, @0x4AD3 <sm_security_started+0x2>
     2BB:	8800      	**prefx    0x88
     2BC:	5010      	ld         ah, #-0x77B0

0x000002BD <.LVL6>:
     2BD:	0223      	st         ah, @(+0x2, y)
     2BE:	030F      	leave      #+0x3

0x000002BF <___libgatt_lib_db_4594>:
     2BF:	010B      	enter      #+0x1

0x000002C0 <.LCFI1>:
     2C0:	0F17      	ld         al, @(+0xF, y)

0x000002C1 <.LVL8>:
     2C1:	FB25      	st         al, @0xFFFB <(scratchpad)>
     2C2:	101B      	ld         x, @(+0x10, y)
     2C3:	F829      	st         x, @0xFFF8 <(scratchpad)>

0x000002C4 <.LVL9>:
     2C4:	1417      	ld         al, @(+0x14, y)
     2C5:	FA25      	st         al, @0xFFFA <(scratchpad)>

0x000002C6 <.LVL10>:
     2C6:	E315      	ld         al, @0xFFE3 <register uxl>
     2C7:	0100      	**prefx    0x1
     2C8:	80C4      	and        al, #0x80
     2C9:	0BF4      	beq        +0xB <.LVL13:0x2D4[p]>

0x000002CA <.LVL11>:
     2CA:	1017      	ld         al, @(+0x10, y)
     2CB:	FF00      	**prefx    0xFF
     2CC:	7FC4      	and        al, #0xFF7F
     2CD:	1027      	st         al, @(+0x10, y)
     2CE:	FA19      	ld         x, @0xFFFA <(scratchpad)>

0x000002CF <.LVL12>:
     2CF:	0016      	ld         al, @(0x0, x)
     2D0:	FF00      	**prefx    0xFF
     2D1:	7FC4      	and        al, #0xFF7F
     2D2:	0026      	st         al, @(0x0, x)
     2D3:	29E0      	bra        +0x29 <.LVL17:0x2FC[p]>

0x000002D4 <.LVL13>:
     2D4:	0188      	cmp        x, #+0x1

0x000002D5 <.LVL14>:
     2D5:	03F4      	beq        +0x3 <.LEFDE14:0x2D8[p]>
     2D6:	0B88      	cmp        x, #+0xB
     2D7:	05F0      	bne        +0x5 <.LASFDE16:0x2DC[p]>
     2D8:	4B00      	**prefx    0x4B
     2D9:	D199      	tst        @0x4AD1 <sm_security_started>
     2DA:	02F4      	beq        +0x2 <.LASFDE16:0x2DC[p]>
     2DB:	140F      	leave      #+0x14
     2DC:	FB19      	ld         x, @0xFFFB <(scratchpad)>
     2DD:	061A      	ld         x, @(+0x6, x)
     2DE:	F815      	ld         al, @0xFFF8 <(scratchpad)>
     2DF:	FF34      	add        al, #-0x1
     2E0:	F925      	st         al, @0xFFF9 <(scratchpad)>
     2E1:	0114      	ld         al, #+0x1
     2E2:	F9A1      	asl        @0xFFF9 <(scratchpad)>

0x000002E3 <.LVL15>:
     2E3:	E3C5      	and        al, @0xFFE3 <register uxl>
     2E4:	18F4      	beq        +0x18 <.LVL17:0x2FC[p]>
     2E5:	E315      	ld         al, @0xFFE3 <register uxl>
     2E6:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     2E7:	A100      	**prefx    0xA1
     2E8:	01C6      	and        al, @(-0x5EFF, x)
     2E9:	13F0      	bne        +0x13 <.LVL17:0x2FC[p]>
     2EA:	9400      	**prefx    0x94
     2EB:	4615      	ld         al, @0x9446 <BSS_START>
     2EC:	10F0      	bne        +0x10 <.LVL17:0x2FC[p]>
     2ED:	0188      	cmp        x, #+0x1
     2EE:	03F4      	beq        +0x3 <.LEFDE16+0x1:0x2F1[p]>
     2EF:	0B88      	cmp        x, #+0xB
     2F0:	0CF0      	bne        +0xC <.LVL17:0x2FC[p]>
     2F1:	0118      	ld         x, #+0x1
     2F2:	4B00      	**prefx    0x4B
     2F3:	D129      	st         x, @0x4AD1 <sm_security_started>
     2F4:	8C00      	**prefx    0x8C
     2F5:	9419      	ld         x, @0x8B94 <sm_pairing_auth_ind>
     2F6:	06F4      	beq        +0x6 <.LVL17:0x2FC[p]>
     2F7:	FB15      	ld         al, @0xFFFB <(scratchpad)>
     2F8:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
     2F9:	FF2B      	st         x, @(-0x1, y)
     2FA:	FF9F      	bsr        @(-0x1, y)

0x000002FB <.LVL16>:
     2FB:	140F      	leave      #+0x14

0x000002FC <.LVL17>:
     2FC:	010F      	leave      #+0x1

0x000002FD <.LFB6>:
     2FD:	020B      	enter      #+0x2

0x000002FE <.LCFI2>:
     2FE:	4B00      	**prefx    0x4B
     2FF:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     300:	8500      	**prefx    0x85
     301:	0130      	add        ah, #-0x7AFF
     302:	FF23      	st         ah, @(-0x1, y)
     303:	FF9F      	bsr        @(-0x1, y)

0x00000304 <.LVL19>:
     304:	0027      	st         al, @(0x0, y)
     305:	14F4      	beq        +0x14 <.LASFDE20+0xD:0x319[p]>
     306:	0014      	ld         al, #+0x0
     307:	001B      	ld         x, @(0x0, y)
     308:	2A26      	st         al, @(+0x2A, x)
     309:	4B00      	**prefx    0x4B
     30A:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     30B:	8800      	**prefx    0x88
     30C:	0630      	add        ah, #-0x77FA
     30D:	E315      	ld         al, @0xFFE3 <register uxl>
     30E:	FF23      	st         ah, @(-0x1, y)
     30F:	FF9F      	bsr        @(-0x1, y)
     310:	4B00      	**prefx    0x4B
     311:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>
     312:	8800      	**prefx    0x88
     313:	1138      	add        x, #-0x77EF
     314:	0017      	ld         al, @(0x0, y)
     315:	0C00      	**prefx    0xC
     316:	8010      	ld         ah, #+0xB80
     317:	FF2B      	st         x, @(-0x1, y)
     318:	FF9F      	bsr        @(-0x1, y)
     319:	020F      	leave      #+0x2

0x0000031A <___libgatt_lib_db_4592>:
     31A:	010B      	enter      #+0x1

0x0000031B <.LCFI3>:
     31B:	9300      	**prefx    0x93
     31C:	6615      	ld         al, @0x9366 <___libgatt_lib_db_18+0x1>

0x0000031D <.LVL22>:
     31D:	0284      	cmp        al, #+0x2
     31E:	05F4      	beq        +0x5 <.LEFDE20+0x3:0x323[p]>
     31F:	031B      	ld         x, @(+0x3, y)
     320:	0014      	ld         al, #+0x0
     321:	0526      	st         al, @(+0x5, x)
     322:	0626      	st         al, @(+0x6, x)
     323:	010F      	leave      #+0x1

0x00000324 <___libgatt_lib_db_4596>:
     324:	010B      	enter      #+0x1

0x00000325 <.LCFI4>:
     325:	0A1B      	ld         x, @(+0xA, y)
     326:	4B00      	**prefx    0x4B
     327:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>

0x00000328 <.LVL24>:
     328:	9700      	**prefx    0x97
     329:	8530      	add        ah, #-0x697B
     32A:	0516      	ld         al, @(+0x5, x)

0x0000032B <.LVL25>:
     32B:	FF23      	st         ah, @(-0x1, y)
     32C:	FF9F      	bsr        @(-0x1, y)
     32D:	0284      	cmp        al, #+0x2
     32E:	04F0      	bne        +0x4 <.LVL25+0x7:0x332[p]>
     32F:	0114      	ld         al, #+0x1
     330:	4B00      	**prefx    0x4B
     331:	D125      	st         al, @0x4AD1 <sm_security_started>
     332:	010F      	leave      #+0x1

0x00000333 <___libgatt_lib_db_4590>:
     333:	020B      	enter      #+0x2

0x00000334 <.LCFI5>:
     334:	0014      	ld         al, #+0x0

0x00000335 <.LVL27>:
     335:	4B00      	**prefx    0x4B
     336:	D125      	st         al, @0x4AD1 <sm_security_started>
     337:	0617      	ld         al, @(+0x6, y)
     338:	8C00      	**prefx    0x8C
     339:	DC84      	cmp        al, #-0x7424
     33A:	1AF0      	bne        +0x1A <.LBE11:0x354[p]>
     33B:	0517      	ld         al, @(+0x5, y)

0x0000033C <.LVL28>:
     33C:	0684      	cmp        al, #+0x6
     33D:	17F0      	bne        +0x17 <.LBE11:0x354[p]>
     33E:	041B      	ld         x, @(+0x4, y)

0x0000033F <.LVL29>:
     33F:	051A      	ld         x, @(+0x5, x)

0x00000340 <.LVL30>:
     340:	002B      	st         x, @(0x0, y)

0x00000341 <.LBB10>:
     341:	4B00      	**prefx    0x4B
     342:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>

0x00000343 <.LBE10>:
     343:	B700      	**prefx    0xB7
     344:	E838      	add        x, #-0x4918
     345:	0B00      	**prefx    0xB
     346:	D014      	ld         al, #+0xAD0

0x00000347 <.LVL31>:
     347:	0210      	ld         ah, #+0x2

0x00000348 <.LVL32>:
     348:	FF2B      	st         x, @(-0x1, y)
     349:	FF9F      	bsr        @(-0x1, y)
     34A:	E119      	ld         x, @0xFFE1 <register al>

0x0000034B <.LBB11>:
     34B:	0017      	ld         al, @(0x0, y)
     34C:	0126      	st         al, @(+0x1, x)
     34D:	4B00      	**prefx    0x4B
     34E:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     34F:	B600      	**prefx    0xB6
     350:	2030      	add        ah, #-0x49E0
     351:	E315      	ld         al, @0xFFE3 <register uxl>
     352:	FF23      	st         ah, @(-0x1, y)
     353:	FF9F      	bsr        @(-0x1, y)

0x00000354 <.LBE11>:
     354:	020F      	leave      #+0x2

0x00000355 <___libgatt_lib_db_4605>:
     355:	0F0B      	enter      #+0xF

0x00000356 <.LCFI6>:
     356:	0B27      	st         al, @(+0xB, y)
     357:	0C23      	st         ah, @(+0xC, y)
     358:	1690      	smult      #+0x16

0x00000359 <.LVL35>:
     359:	9500      	**prefx    0x95
     35A:	2E34      	add        al, #-0x6AD2
     35B:	0D27      	st         al, @(+0xD, y)
     35C:	E119      	ld         x, @0xFFE1 <register al>
     35D:	001A      	ld         x, @(0x0, x)
     35E:	092B      	st         x, @(+0x9, y)
     35F:	0810      	ld         ah, #+0x8
     360:	0023      	st         ah, @(0x0, y)
     361:	E415      	ld         al, @0xFFE4 <register uy>
     362:	0134      	add        al, #+0x1
     363:	0F13      	ld         ah, @(+0xF, y)
     364:	0100      	**prefx    0x1
     365:	8900      	**prefx    0x89
     366:	509C      	bsr        +0x8950 <MemCopyPack:0x8CB6[p]>
     367:	4B00      	**prefx    0x4B
     368:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>
     369:	8600      	**prefx    0x86
     36A:	C838      	add        x, #-0x7A38
     36B:	E415      	ld         al, @0xFFE4 <register uy>
     36C:	0134      	add        al, #+0x1
     36D:	0C13      	ld         ah, @(+0xC, y)
     36E:	FF2B      	st         x, @(-0x1, y)
     36F:	FF9F      	bsr        @(-0x1, y)
     370:	0A27      	st         al, @(+0xA, y)
     371:	0FC4      	and        al, #0xF
     372:	0684      	cmp        al, #+0x6
     373:	0BFC      	bcs        +0xB <.LVL39+0x1:0x37E[p]>

0x00000374 <.LVL38>:
     374:	4B00      	**prefx    0x4B
     375:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     376:	8600      	**prefx    0x86
     377:	8030      	add        ah, #-0x7A80
     378:	0A17      	ld         al, @(+0xA, y)
     379:	FF23      	st         ah, @(-0x1, y)
     37A:	FF9F      	bsr        @(-0x1, y)
     37B:	9300      	**prefx    0x93
     37C:	6785      	cmp        al, @0x9367 <___libgatt_lib_db_18+0x2>

0x0000037D <.LVL39>:
     37D:	09F8      	bcc        +0x9 <.LVL41:0x386[p]>
     37E:	4B00      	**prefx    0x4B
     37F:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     380:	D000      	**prefx    0xD0
     381:	1630      	add        ah, #-0x2FEA
     382:	0917      	ld         al, @(+0x9, y)

0x00000383 <.LVL40>:
     383:	FF23      	st         ah, @(-0x1, y)
     384:	FF9F      	bsr        @(-0x1, y)
     385:	23E0      	bra        +0x23 <.LVL46:0x3A8[p]>

0x00000386 <.LVL41>:
     386:	0A13      	ld         ah, @(+0xA, y)
     387:	0D1B      	ld         x, @(+0xD, y)
     388:	1522      	st         ah, @(+0x15, x)
     389:	109B      	tst        @(+0x10, y)
     38A:	03F4      	beq        +0x3 <.LVL42+0x2:0x38D[p]>

0x0000038B <.LVL42>:
     38B:	101B      	ld         x, @(+0x10, y)
     38C:	2B26      	st         al, @(+0x2B, x)
     38D:	4B00      	**prefx    0x4B
     38E:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>
     38F:	9700      	**prefx    0x97
     390:	389A      	tst        @(-0x68C8, x)
     391:	10F4      	beq        +0x10 <.LVL44:0x3A1[p]>
     392:	4B00      	**prefx    0x4B
     393:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     394:	F821      	st         ah, @0xFFF8 <(scratchpad)>
     395:	0B17      	ld         al, @(+0xB, y)

0x00000396 <.LVL43>:
     396:	1790      	smult      #+0x17
     397:	E119      	ld         x, @0xFFE1 <register al>
     398:	9700      	**prefx    0x97
     399:	D716      	ld         al, @(-0x6929, x)
     39A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     39B:	9700      	**prefx    0x97
     39C:	381A      	ld         x, @(-0x68C8, x)
     39D:	0A13      	ld         ah, @(+0xA, y)
     39E:	FF2B      	st         x, @(-0x1, y)
     39F:	FF9F      	bsr        @(-0x1, y)
     3A0:	08E0      	bra        +0x8 <.LVL46:0x3A8[p]>

0x000003A1 <.LVL44>:
     3A1:	4B00      	**prefx    0x4B
     3A2:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     3A3:	8A00      	**prefx    0x8A
     3A4:	8530      	add        ah, #-0x767B
     3A5:	0B17      	ld         al, @(+0xB, y)

0x000003A6 <.LVL45>:
     3A6:	FF23      	st         ah, @(-0x1, y)
     3A7:	FF9F      	bsr        @(-0x1, y)

0x000003A8 <.LVL46>:
     3A8:	0F0F      	leave      #+0xF

0x000003A9 <___libgatt_lib_db_4593>:
     3A9:	050B      	enter      #+0x5

0x000003AA <.LCFI7>:
     3AA:	0327      	st         al, @(+0x3, y)
     3AB:	4B00      	**prefx    0x4B
     3AC:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     3AD:	8500      	**prefx    0x85
     3AE:	4430      	add        ah, #-0x7ABC
     3AF:	E119      	ld         x, @0xFFE1 <register al>
     3B0:	0016      	ld         al, @(0x0, x)

0x000003B1 <.LVL48>:
     3B1:	FF23      	st         ah, @(-0x1, y)
     3B2:	FF9F      	bsr        @(-0x1, y)
     3B3:	0227      	st         al, @(+0x2, y)
     3B4:	9300      	**prefx    0x93
     3B5:	6799      	tst        @0x9367 <___libgatt_lib_db_18+0x2>
     3B6:	24F4      	beq        +0x24 <.LVL51+0x1:0x3DA[p]>
     3B7:	029B      	tst        @(+0x2, y)
     3B8:	18F4      	beq        +0x18 <.LEFDE36:0x3D0[p]>
     3B9:	021B      	ld         x, @(+0x2, y)
     3BA:	0616      	ld         al, @(+0x6, x)
     3BB:	1C00      	**prefx    0x1C
     3BC:	0FC4      	and        al, #0x1C0F
     3BD:	1000      	**prefx    0x10
     3BE:	0084      	cmp        al, #+0x1000
     3BF:	11F0      	bne        +0x11 <.LEFDE36:0x3D0[p]>
     3C0:	4B00      	**prefx    0x4B
     3C1:	D215      	ld         al, @0x4AD2 <sm_security_started+0x1>
     3C2:	E119      	ld         x, @0xFFE1 <register al>
     3C3:	D000      	**prefx    0xD0
     3C4:	4938      	add        x, #-0x2FB7
     3C5:	F829      	st         x, @0xFFF8 <(scratchpad)>
     3C6:	0217      	ld         al, @(+0x2, y)
     3C7:	0934      	add        al, #+0x9
     3C8:	0227      	st         al, @(+0x2, y)
     3C9:	031B      	ld         x, @(+0x3, y)
     3CA:	0016      	ld         al, @(0x0, x)
     3CB:	0213      	ld         ah, @(+0x2, y)
     3CC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     3CD:	FF2B      	st         x, @(-0x1, y)
     3CE:	FF9F      	bsr        @(-0x1, y)
     3CF:	28E0      	bra        +0x28 <.LVL56:0x3F7[p]>
     3D0:	4B00      	**prefx    0x4B
     3D1:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     3D2:	9200      	**prefx    0x92
     3D3:	3730      	add        ah, #-0x6DC9
     3D4:	031B      	ld         x, @(+0x3, y)
     3D5:	0016      	ld         al, @(0x0, x)
     3D6:	FF23      	st         ah, @(-0x1, y)
     3D7:	FF9F      	bsr        @(-0x1, y)
     3D8:	FF84      	cmp        al, #-0x1

0x000003D9 <.LVL51>:
     3D9:	0AF0      	bne        +0xA <.LVL53:0x3E3[p]>
     3DA:	4B00      	**prefx    0x4B
     3DB:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>
     3DC:	D000      	**prefx    0xD0
     3DD:	1630      	add        ah, #-0x2FEA
     3DE:	031B      	ld         x, @(+0x3, y)
     3DF:	0016      	ld         al, @(0x0, x)

0x000003E0 <.LVL52>:
     3E0:	FF23      	st         ah, @(-0x1, y)
     3E1:	FF9F      	bsr        @(-0x1, y)
     3E2:	15E0      	bra        +0x15 <.LVL56:0x3F7[p]>

0x000003E3 <.LVL53>:
     3E3:	8C00      	**prefx    0x8C
     3E4:	9319      	ld         x, @0x8B93 <sm_long_term_key_ind>
     3E5:	F829      	st         x, @0xFFF8 <(scratchpad)>
     3E6:	031B      	ld         x, @(+0x3, y)
     3E7:	0912      	ld         ah, @(+0x9, x)
     3E8:	F899      	tst        @0xFFF8 <(scratchpad)>
     3E9:	07F4      	beq        +0x7 <.LVL55:0x3F0[p]>
     3EA:	0138      	add        x, #+0x1
     3EB:	002B      	st         x, @(0x0, y)
     3EC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     3ED:	FF2B      	st         x, @(-0x1, y)
     3EE:	FF9F      	bsr        @(-0x1, y)

0x000003EF <.LVL54>:
     3EF:	08E0      	bra        +0x8 <.LVL56:0x3F7[p]>

0x000003F0 <.LVL55>:
     3F0:	031B      	ld         x, @(+0x3, y)
     3F1:	0138      	add        x, #+0x1
     3F2:	002B      	st         x, @(0x0, y)
     3F3:	021B      	ld         x, @(+0x2, y)
     3F4:	012B      	st         x, @(+0x1, y)
     3F5:	FF00      	**prefx    0xFF
     3F6:	5F9C      	bsr        -0xA1 <___libgatt_lib_db_4605:0x355[p]>

0x000003F7 <.LVL56>:
     3F7:	050F      	leave      #+0x5

0x000003F8 <___libgatt_lib_db_4595>:
     3F8:	080B      	enter      #+0x8

0x000003F9 <.LCFI8>:
     3F9:	0A17      	ld         al, @(+0xA, y)

0x000003FA <.LVL58>:
     3FA:	0627      	st         al, @(+0x6, y)
     3FB:	0B1B      	ld         x, @(+0xB, y)
     3FC:	052B      	st         x, @(+0x5, y)
     3FD:	0016      	ld         al, @(0x0, x)
     3FE:	0984      	cmp        al, #+0x9
     3FF:	2AF0      	bne        +0x2A <.LVL64:0x429[p]>
     400:	061B      	ld         x, @(+0x6, y)
     401:	0516      	ld         al, @(+0x5, x)
     402:	0010      	ld         ah, #+0x0

0x00000403 <.LVL61>:
     403:	0009      	**unsigned
     404:	0394      	udiv       #0x3
     405:	1690      	smult      #+0x16
     406:	9500      	**prefx    0x95
     407:	2F34      	add        al, #-0x6AD1
     408:	F825      	st         al, @0xFFF8 <(scratchpad)>

0x00000409 <.LVL62>:
     409:	E119      	ld         x, @0xFFE1 <register al>
     40A:	0016      	ld         al, @(0x0, x)
     40B:	0184      	cmp        al, #+0x1
     40C:	1DF0      	bne        +0x1D <.LVL64:0x429[p]>
     40D:	0416      	ld         al, @(+0x4, x)
     40E:	C000      	**prefx    0xC0
     40F:	00C4      	and        al, #0xC000
     410:	C000      	**prefx    0xC0
     411:	0084      	cmp        al, #-0x4000
     412:	17F0      	bne        +0x17 <.LVL64:0x429[p]>
     413:	0114      	ld         al, #+0x1
     414:	051B      	ld         x, @(+0x5, y)
     415:	0126      	st         al, @(+0x1, x)
     416:	4B00      	**prefx    0x4B
     417:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>
     418:	B900      	**prefx    0xB9
     419:	1738      	add        x, #-0x46E9
     41A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
     41B:	0134      	add        al, #+0x1
     41C:	E411      	ld         ah, @0xFFE4 <register uy>
     41D:	0230      	add        ah, #+0x2
     41E:	FF2B      	st         x, @(-0x1, y)
     41F:	FF9F      	bsr        @(-0x1, y)

0x00000420 <.LVL63>:
     420:	0517      	ld         al, @(+0x5, y)
     421:	0234      	add        al, #+0x2
     422:	0618      	ld         x, #+0x6
     423:	002B      	st         x, @(0x0, y)
     424:	E411      	ld         ah, @0xFFE4 <register uy>
     425:	0230      	add        ah, #+0x2
     426:	0100      	**prefx    0x1
     427:	8900      	**prefx    0x89
     428:	B89C      	bsr        +0x88B8 <MemCopyUnPack:0x8CE0[p]>

0x00000429 <.LVL64>:
     429:	4B00      	**prefx    0x4B
     42A:	D211      	ld         ah, @0x4AD2 <sm_security_started+0x1>

0x0000042B <.LVL65>:
     42B:	E000      	**prefx    0xE0
     42C:	1930      	add        ah, #-0x1FE7
     42D:	061B      	ld         x, @(+0x6, y)
     42E:	2A16      	ld         al, @(+0x2A, x)
     42F:	FF23      	st         ah, @(-0x1, y)
     430:	FF9F      	bsr        @(-0x1, y)

0x00000431 <.LVL66>:
     431:	4B00      	**prefx    0x4B
     432:	D219      	ld         x, @0x4AD2 <sm_security_started+0x1>
     433:	E100      	**prefx    0xE1
     434:	E138      	add        x, #-0x1F1F
     435:	0114      	ld         al, #+0x1
     436:	0027      	st         al, @(0x0, y)
     437:	0300      	**prefx    0x3
     438:	FD14      	ld         al, #+0x2FD
     439:	0127      	st         al, @(+0x1, y)
     43A:	0200      	**prefx    0x2
     43B:	C910      	ld         ah, #+0x1C9
     43C:	C400      	**prefx    0xC4
     43D:	8014      	ld         al, #-0x3C80
     43E:	FF2B      	st         x, @(-0x1, y)
     43F:	FF9F      	bsr        @(-0x1, y)
     440:	061B      	ld         x, @(+0x6, y)
     441:	2A26      	st         al, @(+0x2A, x)
     442:	4B00      	**prefx    0x4B
     443:	D215      	ld         al, @0x4AD2 <sm_security_started+0x1>
     444:	F825      	st         al, @0xFFF8 <(scratchpad)>
     445:	051B      	ld         x, @(+0x5, y)
     446:	0016      	ld         al, @(0x0, x)
     447:	E119      	ld         x, @0xFFE1 <register al>
     448:	A100      	**prefx    0xA1
     449:	D412      	ld         ah, @(-0x5F2C, x)
     44A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
     44B:	9600      	**prefx    0x96
     44C:	F234      	add        al, #-0x6A0E
     44D:	F825      	st         al, @0xFFF8 <(scratchpad)>
     44E:	061B      	ld         x, @(+0x6, y)
     44F:	0516      	ld         al, @(+0x5, x)
     450:	051B      	ld         x, @(+0x5, y)
     451:	002B      	st         x, @(0x0, y)
     452:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     453:	FF2B      	st         x, @(-0x1, y)
     454:	FF9F      	bsr        @(-0x1, y)
     455:	8400      	**prefx    0x84
     456:	CF14      	ld         al, #-0x7C31
     457:	0727      	st         al, @(+0x7, y)
     458:	080F      	leave      #+0x8

0x00000459 <SMRequestSecurityLevel>:
     459:	4B00      	**prefx    0x4B
     45A:	D199      	tst        @0x4AD1 <sm_security_started>
     45B:	03F4      	beq        +0x3 <.LVL2:0x45E[p]>
     45C:	0114      	ld         al, #+0x1

0x0000045D <.LVL1>:
     45D:	00E2      	bra        0x0, x

0x0000045E <.LVL2>:
     45E:	0100      	**prefx    0x1
     45F:	8300      	**prefx    0x83
     460:	DBE0      	bra        +0x82DB <SMRequestSecurityLevel_A05:0x873B[p]>

0x00000461 <___libgatt_lib_db_4607>:
     461:	010B      	enter      #+0x1
     462:	E199      	tst        @0xFFE1 <register al>
     463:	03F4      	beq        +0x3 <___libgatt_lib_db_4607+0x5:0x466[p]>
     464:	0484      	cmp        al, #+0x4
     465:	04F0      	bne        +0x4 <.LEFDE52+0x1:0x469[p]>
     466:	0018      	ld         x, #+0x0
     467:	4B00      	**prefx    0x4B
     468:	D129      	st         x, @0x4AD1 <sm_security_started>
     469:	4B00      	**prefx    0x4B
     46A:	D419      	ld         x, @0x4AD4 <sm_security_started+0x3>
     46B:	8500      	**prefx    0x85
     46C:	9C38      	add        x, #-0x7B64
     46D:	FF2B      	st         x, @(-0x1, y)
     46E:	FF9F      	bsr        @(-0x1, y)

0x0000046F <.LVL1>:
     46F:	010F      	leave      #+0x1

0x00000470 <GattGetDatabase>:
    /* 002c: Client Characteristic Configuration */
    0x6500,
};

uint16 *GattGetDatabase(uint16 *len)
{
     470:	010B      	enter      #+0x1
     471:	E119      	ld         x, @0xFFE1 <register al>
    *len = sizeof(gattDatabase);
     472:	0100      	**prefx    0x1
     473:	FB14      	ld         al, #+0xFB
     474:	0026      	st         al, @(0x0, x)
    return gattDatabase;
}
     475:	8C00      	**prefx    0x8C
     476:	9B14      	ld         al, #-0x7465
     477:	010F      	leave      #+0x1

0x00000478 <BatteryInitChipReset>:
{
    /* Initialise battery level to 0 percent so that the battery level
     * notification (if configured) is sent when the value is read for
     * the first time after power cycle.
     */
    g_batt_data.level = 0;
     478:	0014      	ld         al, #+0x0
     479:	4B00      	**prefx    0x4B
     47A:	D525      	st         al, @0x4AD5 <g_batt_data>
}
     47B:	00E2      	bra        0x0, x

0x0000047C <BatteryCheckHandleRange>:
 *
 *  RETURNS
 *      TRUE if handle belongs to the Battery Service, FALSE otherwise
 *----------------------------------------------------------------------------*/
extern bool BatteryCheckHandleRange(uint16 handle)
{
     47C:	0010      	ld         ah, #+0x0
     47D:	2884      	cmp        al, #+0x28
     47E:	022C      	bcz        +0x2 <BatteryCheckHandleRange+0x4:0x480[p]>
     47F:	0110      	ld         ah, #+0x1
    return ((handle >= HANDLE_BATTERY_SERVICE) &&
            (handle <= HANDLE_BATTERY_SERVICE_END))
            ? TRUE : FALSE;
}
     480:	E015      	ld         al, @0xFFE0 <register ah>
     481:	00E2      	bra        0x0, x

0x00000482 <BatteryDataInit>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void BatteryDataInit(void)
{
     482:	010B      	enter      #+0x1
    if(!IsDeviceBonded())
     483:	0200      	**prefx    0x2
     484:	389C      	bsr        +0x238 <IsDeviceBonded:0x6BC[p]>
     485:	E199      	tst        @0xFFE1 <register al>
     486:	03F0      	bne        +0x3 <.LEFDE0+0x1:0x489[p]>
    {
        /* Initialise battery level client configuration characteristic
         * descriptor value only if device is not bonded
         */
        g_batt_data.level_client_config = gatt_client_config_none;
     487:	4B00      	**prefx    0x4B
     488:	D625      	st         al, @0x4AD6 <g_batt_data+0x1>
    }

}
     489:	010F      	leave      #+0x1

0x0000048A <BatteryBondingNotify>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void BatteryBondingNotify(void)
{
     48A:	020B      	enter      #+0x2
    /* Write data to NVM if bond is established */
    if(IsDeviceBonded())
     48B:	0200      	**prefx    0x2
     48C:	309C      	bsr        +0x230 <IsDeviceBonded:0x6BC[p]>
     48D:	E199      	tst        @0xFFE1 <register al>
     48E:	09F4      	beq        +0x9 <.LASFDE2+0xB:0x497[p]>
    {
        /* Write to NVM the client configuration value of battery level
         * that was configured prior to bonding
         */
        Nvm_Write((uint16*)&g_batt_data.level_client_config,
     48F:	4B00      	**prefx    0x4B
     490:	D715      	ld         al, @0x4AD7 <g_batt_data+0x2>
     491:	0027      	st         al, @(0x0, y)
     492:	4B00      	**prefx    0x4B
     493:	D614      	ld         al, #+0x4AD6
     494:	0110      	ld         ah, #+0x1
     495:	0100      	**prefx    0x1
     496:	D99C      	bsr        +0xD9 <Nvm_Write:0x56F[p]>
                  sizeof(g_batt_data.level_client_config),
                  g_batt_data.nvm_offset +
                  BATTERY_NVM_LEVEL_CLIENT_CONFIG_OFFSET);
    }
}
     497:	020F      	leave      #+0x2

0x00000498 <BatteryReadDataFromNVM>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void BatteryReadDataFromNVM(uint16 *p_offset)
{
     498:	030B      	enter      #+0x3
     499:	0127      	st         al, @(+0x1, y)

    g_batt_data.nvm_offset = *p_offset;
     49A:	E119      	ld         x, @0xFFE1 <register al>
     49B:	001A      	ld         x, @(0x0, x)
     49C:	4B00      	**prefx    0x4B
     49D:	D729      	st         x, @0x4AD7 <g_batt_data+0x2>

    /* Read NVM only if devices are bonded */
    if(IsDeviceBonded())
     49E:	0200      	**prefx    0x2
     49F:	1D9C      	bsr        +0x21D <IsDeviceBonded:0x6BC[p]>
     4A0:	E199      	tst        @0xFFE1 <register al>
     4A1:	09F4      	beq        +0x9 <.LASFDE4+0x6:0x4AA[p]>
    {
        /* Read battery level client configuration descriptor */
        Nvm_Read((uint16*)&g_batt_data.level_client_config,
     4A2:	011B      	ld         x, @(+0x1, y)
     4A3:	001A      	ld         x, @(0x0, x)
     4A4:	002B      	st         x, @(0x0, y)
     4A5:	4B00      	**prefx    0x4B
     4A6:	D614      	ld         al, #+0x4AD6
     4A7:	0110      	ld         ah, #+0x1
     4A8:	0100      	**prefx    0x1
     4A9:	D49C      	bsr        +0xD4 <Nvm_Read:0x57D[p]>
    }

    /* Increment the offset by the number of words of NVM memory required
     * by the Battery Service
     */
    *p_offset += BATTERY_SERVICE_NVM_MEMORY_WORDS;
     4AA:	011B      	ld         x, @(+0x1, y)
     4AB:	0016      	ld         al, @(0x0, x)
     4AC:	0134      	add        al, #+0x1
     4AD:	0026      	st         al, @(0x0, x)

}
     4AE:	030F      	leave      #+0x3

0x000004AF <readBatteryLevel>:
 *
 *  RETURNS
 *      Battery level in percent
 *----------------------------------------------------------------------------*/
static uint8 readBatteryLevel(void)
{
     4AF:	030B      	enter      #+0x3
    uint32 bat_voltage;                 /* Battery voltage in mV */
    uint32 bat_level;                   /* Battery level in percent */

    /* Read battery voltage and level it with minimum voltage */
    bat_voltage = BatteryReadVoltage();
     4B0:	0100      	**prefx    0x1
     4B1:	F300      	**prefx    0xF3
     4B2:	659C      	bsr        +0xF365 <BatteryReadVoltage:0xF817[p]>

    /* Level the read battery voltage to the minimum value */
    if(bat_voltage < BATTERY_FLAT_BATTERY_VOLTAGE)
     4B3:	0700      	**prefx    0x7
     4B4:	0884      	cmp        al, #+0x708
     4B5:	03F8      	bcc        +0x3 <.LEFDE4:0x4B8[p]>
     4B6:	0700      	**prefx    0x7
     4B7:	0814      	ld         al, #+0x708
    }

    bat_voltage -= BATTERY_FLAT_BATTERY_VOLTAGE;

    /* Get battery level in percent */
    bat_level = (bat_voltage * 100) / (BATTERY_FULL_BATTERY_VOLTAGE -
     4B8:	0010      	ld         ah, #+0x0
     4B9:	F900      	**prefx    0xF9
     4BA:	F834      	add        al, #-0x708
     4BB:	FF40      	addc       ah, #-0x1
     4BC:	E019      	ld         x, @0xFFE0 <register ah>
     4BD:	F825      	st         al, @0xFFF8 <(scratchpad)>
     4BE:	E315      	ld         al, @0xFFE3 <register uxl>
     4BF:	6490      	smult      #+0x64
     4C0:	E119      	ld         x, @0xFFE1 <register al>
     4C1:	F815      	ld         al, @0xFFF8 <(scratchpad)>
     4C2:	0009      	**unsigned
     4C3:	6490      	umult      #0x64
     4C4:	F925      	st         al, @0xFFF9 <(scratchpad)>
     4C5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
     4C6:	F839      	add        x, @0xFFF8 <(scratchpad)>
     4C7:	0010      	ld         ah, #+0x0
     4C8:	0023      	st         ah, @(0x0, y)
     4C9:	0500      	**prefx    0x5
     4CA:	B014      	ld         al, #+0x4B0
     4CB:	0127      	st         al, @(+0x1, y)
     4CC:	F915      	ld         al, @0xFFF9 <(scratchpad)>
     4CD:	E311      	ld         ah, @0xFFE3 <register uxl>
     4CE:	0100      	**prefx    0x1
     4CF:	AF00      	**prefx    0xAF
     4D0:	219C      	bsr        +0xAF21 <__udivhi3:0xB3F1[p]>
     4D1:	E099      	tst        @0xFFE0 <register ah>
     4D2:	03F0      	bne        +0x3 <.LASFDE8+0x1:0x4D5[p]>
     4D3:	6584      	cmp        al, #+0x65
     4D4:	02FC      	bcs        +0x2 <.LASFDE8+0x2:0x4D6[p]>
     4D5:	6414      	ld         al, #+0x64
        bat_level = 100;
    }

    /* Return the battery level (as a percentage of full) */
    return (uint8)bat_level;
}
     4D6:	030F      	leave      #+0x3

0x000004D7 <BatteryUpdateLevel>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void BatteryUpdateLevel(uint16 ucid)
{
     4D7:	050B      	enter      #+0x5
     4D8:	0327      	st         al, @(+0x3, y)
    uint8 old_vbat;                     /* Previous battery level, percent */
    uint8 cur_bat_level;                /* Current battery level, percent */

    /* Read the battery level */
    cur_bat_level = readBatteryLevel();
     4D9:	D69C      	bsr        -0x2A <readBatteryLevel:0x4AF[p]>
     4DA:	E111      	ld         ah, @0xFFE1 <register al>
    old_vbat = g_batt_data.level;

    /* If the current and old battery level are not same, update the  connected
     * host if notifications are configured.
     */
    if(old_vbat != cur_bat_level)
     4DB:	4B00      	**prefx    0x4B
     4DC:	D515      	ld         al, @0x4AD5 <g_batt_data>
     4DD:	E085      	cmp        al, @0xFFE0 <register ah>
     4DE:	15F4      	beq        +0x15 <.LASFDE10+0x7:0x4F3[p]>
    {

        if((ucid != GATT_INVALID_UCID) &&
     4DF:	0317      	ld         al, @(+0x3, y)
     4E0:	FF84      	cmp        al, #-0x1
     4E1:	12F4      	beq        +0x12 <.LASFDE10+0x7:0x4F3[p]>
     4E2:	4B00      	**prefx    0x4B
     4E3:	D615      	ld         al, @0x4AD6 <g_batt_data+0x1>
     4E4:	0184      	cmp        al, #+0x1
     4E5:	0EF0      	bne        +0xE <.LASFDE10+0x7:0x4F3[p]>
{
    uint8 old_vbat;                     /* Previous battery level, percent */
    uint8 cur_bat_level;                /* Current battery level, percent */

    /* Read the battery level */
    cur_bat_level = readBatteryLevel();
     4E6:	0223      	st         ah, @(+0x2, y)

        if((ucid != GATT_INVALID_UCID) &&
           (g_batt_data.level_client_config == gatt_client_config_notification))
        {

            GattCharValueNotification(ucid,
     4E7:	0027      	st         al, @(0x0, y)
     4E8:	E415      	ld         al, @0xFFE4 <register uy>
     4E9:	0234      	add        al, #+0x2
     4EA:	0127      	st         al, @(+0x1, y)
     4EB:	0317      	ld         al, @(+0x3, y)
     4EC:	2B10      	ld         ah, #+0x2B
     4ED:	0100      	**prefx    0x1
     4EE:	AD00      	**prefx    0xAD
     4EF:	C19C      	bsr        +0xACC1 <GattCharValueNotification:0xB1B0[p]>
                                      HANDLE_BATT_LEVEL,
                                      1, &cur_bat_level);

            /* Update Battery Level characteristic in database */
            g_batt_data.level = cur_bat_level;
     4F0:	0217      	ld         al, @(+0x2, y)
     4F1:	4B00      	**prefx    0x4B
     4F2:	D525      	st         al, @0x4AD5 <g_batt_data>

        }
    }
}
     4F3:	050F      	leave      #+0x5

0x000004F4 <BatteryHandleAccessWrite>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void BatteryHandleAccessWrite(GATT_ACCESS_IND_T *p_ind)
{
     4F4:	070B      	enter      #+0x7
     4F5:	0527      	st         al, @(+0x5, y)
    uint8 *p_value = p_ind->value;      /* New attribute value */
     4F6:	E119      	ld         x, @0xFFE1 <register al>
     4F7:	061A      	ld         x, @(+0x6, x)
     4F8:	032B      	st         x, @(+0x3, y)
    uint16 client_config;               /* Client configuration descriptor */
    sys_status rc = sys_status_success; /* Function status */

    switch(p_ind->handle)
     4F9:	E119      	ld         x, @0xFFE1 <register al>
     4FA:	0216      	ld         al, @(+0x2, x)
     4FB:	2C84      	cmp        al, #+0x2C
     4FC:	04F4      	beq        +0x4 <.LEFDE10:0x500[p]>
     4FD:	0A00      	**prefx    0xA
     4FE:	0314      	ld         al, #+0xA03
     4FF:	1BE0      	bra        +0x1B <.LASFDE14+0x6:0x51A[p]>
        case HANDLE_BATT_LEVEL_C_CFG:
        {
            /* Write the client configuration descriptor for the battery level
             * characteristic.
             */
            client_config = BufReadUint16(&p_value);
     500:	E415      	ld         al, @0xFFE4 <register uy>
     501:	0334      	add        al, #+0x3
     502:	0100      	**prefx    0x1
     503:	8900      	**prefx    0x89
     504:	AF9C      	bsr        +0x88AF <BufReadUint16:0x8DB3[p]>
     505:	0427      	st         al, @(+0x4, y)

            /* Only notifications are allowed for this client configuration
             * descriptor.
             */
            if((client_config == gatt_client_config_notification) ||
     506:	0184      	cmp        al, #+0x1
     507:	052C      	bcz        +0x5 <BSS_SIZE+0x5:0x50C[p]>
     508:	0B00      	**prefx    0xB
     509:	8018      	ld         x, #+0xA80
     50A:	F829      	st         x, @0xFFF8 <(scratchpad)>
     50B:	10E0      	bra        +0x10 <.LASFDE14+0x7:0x51B[p]>
               (client_config == gatt_client_config_none))
            {
                g_batt_data.level_client_config = client_config;
     50C:	4B00      	**prefx    0x4B
     50D:	D625      	st         al, @0x4AD6 <g_batt_data+0x1>

                /* Write battery level client configuration to NVM if the
                 * device is bonded.
                 */
                if(IsDeviceBonded())
     50E:	0200      	**prefx    0x2
     50F:	AD9C      	bsr        +0x1AD <IsDeviceBonded:0x6BC[p]>
     510:	E199      	tst        @0xFFE1 <register al>
     511:	09F4      	beq        +0x9 <.LASFDE14+0x6:0x51A[p]>
                {
                     Nvm_Write(&client_config,
     512:	4B00      	**prefx    0x4B
     513:	D719      	ld         x, @0x4AD7 <g_batt_data+0x2>
     514:	002B      	st         x, @(0x0, y)
     515:	E415      	ld         al, @0xFFE4 <register uy>
     516:	0434      	add        al, #+0x4
     517:	0110      	ld         ah, #+0x1
     518:	579C      	bsr        +0x57 <Nvm_Write:0x56F[p]>
     519:	0014      	ld         al, #+0x0
     51A:	F825      	st         al, @0xFFF8 <(scratchpad)>
        break;

    }

    /* Send ACCESS RESPONSE */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc, 0, NULL);
     51B:	051B      	ld         x, @(+0x5, y)
     51C:	0116      	ld         al, @(+0x1, x)
     51D:	0212      	ld         ah, @(+0x2, x)
     51E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     51F:	002B      	st         x, @(0x0, y)
     520:	0018      	ld         x, #+0x0
     521:	012B      	st         x, @(+0x1, y)
     522:	022B      	st         x, @(+0x2, y)
     523:	0100      	**prefx    0x1
     524:	AB00      	**prefx    0xAB
     525:	599C      	bsr        +0xAB59 <GattAccessRsp:0xB07E[p]>

    /* Send an update as soon as notifications are configured */
    if(g_batt_data.level_client_config == gatt_client_config_notification)
     526:	4B00      	**prefx    0x4B
     527:	D615      	ld         al, @0x4AD6 <g_batt_data+0x1>
     528:	0184      	cmp        al, #+0x1
     529:	08F0      	bne        +0x8 <.LASFDE16+0x5:0x531[p]>
    {
        /* Reset current battery level to an invalid value so that it
         * triggers notifications on reading the current battery level
         */
        g_batt_data.level = 0xFF; /* 0 to 100: Valid value range */
     52A:	0100      	**prefx    0x1
     52B:	FF14      	ld         al, #+0xFF
     52C:	4B00      	**prefx    0x4B
     52D:	D525      	st         al, @0x4AD5 <g_batt_data>

        /* Update the battery level and send notification. */
        BatteryUpdateLevel(p_ind->cid);
     52E:	051B      	ld         x, @(+0x5, y)
     52F:	0116      	ld         al, @(+0x1, x)
     530:	A79C      	bsr        -0x59 <BatteryUpdateLevel:0x4D7[p]>
    }

}
     531:	070F      	leave      #+0x7

0x00000532 <BatteryHandleAccessRead>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void BatteryHandleAccessRead(GATT_ACCESS_IND_T *p_ind)
{
     532:	080B      	enter      #+0x8
     533:	0627      	st         al, @(+0x6, y)
    uint16 length = 0;                  /* Length of attribute data, octets */
    uint8  value[2];                    /* Attribute value */
    uint8 *p_val = NULL;                /* Pointer to attribute value */
     534:	0014      	ld         al, #+0x0
     535:	0327      	st         al, @(+0x3, y)
    sys_status rc = sys_status_success; /* Function status */

    switch(p_ind->handle)
     536:	061B      	ld         x, @(+0x6, y)
     537:	0216      	ld         al, @(+0x2, x)
     538:	2B84      	cmp        al, #+0x2B
     539:	08F4      	beq        +0x8 <.LEFDE16+0x1:0x541[p]>
     53A:	2C84      	cmp        al, #+0x2C
     53B:	10F4      	beq        +0x10 <.LSCIE0+0x7:0x54B[p]>
     53C:	0014      	ld         al, #+0x0
     53D:	F825      	st         al, @0xFFF8 <(scratchpad)>
     53E:	0A00      	**prefx    0xA
     53F:	0218      	ld         x, #+0xA02
     540:	09E0      	bra        +0x9 <.LSCIE0+0x5:0x549[p]>
       case HANDLE_BATT_LEVEL:
        {
            /* Read the battery level */
            length = 1; /* One Octet */

            g_batt_data.level = readBatteryLevel();
     541:	FF00      	**prefx    0xFF
     542:	6D9C      	bsr        -0x93 <readBatteryLevel:0x4AF[p]>
     543:	4B00      	**prefx    0x4B
     544:	D525      	st         al, @0x4AD5 <g_batt_data>

            value[0] = g_batt_data.level;
     545:	0427      	st         al, @(+0x4, y)
     546:	0114      	ld         al, #+0x1
     547:	F825      	st         al, @0xFFF8 <(scratchpad)>
     548:	0018      	ld         x, #+0x0
     549:	F929      	st         x, @0xFFF9 <(scratchpad)>
     54A:	0EE0      	bra        +0xE <.LASFDE0+0x4:0x558[p]>
        {
            /* Read the client configuration descriptor for the battery level
             * characteristic.
             */
            length = 2; /* Two Octets */
            p_val = value;
     54B:	E415      	ld         al, @0xFFE4 <register uy>
     54C:	0434      	add        al, #+0x4
     54D:	0327      	st         al, @(+0x3, y)

            BufWriteUint16((uint8 **)&p_val, g_batt_data.level_client_config);
     54E:	FF34      	add        al, #-0x1
     54F:	4B00      	**prefx    0x4B
     550:	D611      	ld         ah, @0x4AD6 <g_batt_data+0x1>
     551:	0100      	**prefx    0x1
     552:	8800      	**prefx    0x88
     553:	7E9C      	bsr        +0x887E <BufWriteUint16:0x8DD1[p]>
     554:	0218      	ld         x, #+0x2
     555:	F829      	st         x, @0xFFF8 <(scratchpad)>
     556:	0014      	ld         al, #+0x0
     557:	F925      	st         al, @0xFFF9 <(scratchpad)>
        break;

    }

    /* Send ACCESS RESPONSE */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc, length, value);
     558:	061B      	ld         x, @(+0x6, y)
     559:	0116      	ld         al, @(+0x1, x)
     55A:	0212      	ld         ah, @(+0x2, x)
     55B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
     55C:	002B      	st         x, @(0x0, y)
     55D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     55E:	012B      	st         x, @(+0x1, y)
     55F:	E419      	ld         x, @0xFFE4 <register uy>
     560:	0438      	add        x, #+0x4
     561:	022B      	st         x, @(+0x2, y)
     562:	0100      	**prefx    0x1
     563:	AB00      	**prefx    0xAB
     564:	1A9C      	bsr        +0xAB1A <GattAccessRsp:0xB07E[p]>
}
     565:	080F      	leave      #+0x8

0x00000566 <Nvm_Disable>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
void Nvm_Disable(void)
{
     566:	010B      	enter      #+0x1
    /* Disable the NVM. */
    NvmDisable();
     567:	0100      	**prefx    0x1
     568:	EA00      	**prefx    0xEA
     569:	CB9C      	bsr        +0xE9CB <NvmDisable:0xEF34[p]>

    /* Pull down the I2C lines to save power. */
    PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
     56A:	0514      	ld         al, #+0x5
     56B:	0100      	**prefx    0x1
     56C:	F300      	**prefx    0xF3
     56D:	A69C      	bsr        +0xF2A6 <PioSetI2CPullMode:0xF813[p]>
}
     56E:	010F      	leave      #+0x1

0x0000056F <Nvm_Write>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
void Nvm_Write(uint16 *buffer, uint16 length, uint16 offset)
{
     56F:	030B      	enter      #+0x3
    sys_status result;          /* Function status */

    /* Write to NVM. Firmware re-enables the NVM if it is disabled */
    result = NvmWrite(buffer, length, offset);
     570:	031B      	ld         x, @(+0x3, y)
     571:	002B      	st         x, @(0x0, y)
     572:	0100      	**prefx    0x1
     573:	EA00      	**prefx    0xEA
     574:	F09C      	bsr        +0xE9F0 <NvmWrite:0xEF64[p]>
     575:	0127      	st         al, @(+0x1, y)

    /* Disable NVM to save power after write operation */
    Nvm_Disable();
     576:	F09C      	bsr        -0x10 <Nvm_Disable:0x566[p]>

       /* If NvmWrite was a success, return */
    if(sys_status_success == result)
     577:	019B      	tst        @(+0x1, y)
     578:	04F4      	beq        +0x4 <.LASFDE4+0x8:0x57C[p]>
    }
#endif /* NVM_TYPE_FLASH */
    else
    {
        /* Irrecoverable error. Reset the chip. */
        ReportPanic(app_panic_nvm_write);
     579:	0514      	ld         al, #+0x5
     57A:	0600      	**prefx    0x6
     57B:	EA9C      	bsr        +0x5EA <ReportPanic:0xB65[p]>
    }
}
     57C:	030F      	leave      #+0x3

0x0000057D <Nvm_Read>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
void Nvm_Read(uint16 *buffer, uint16 length, uint16 offset)
{
     57D:	030B      	enter      #+0x3
    sys_status result;

    /* Read from NVM. Firmware re-enables the NVM if it is disabled */
    result = NvmRead(buffer, length, offset);
     57E:	031B      	ld         x, @(+0x3, y)
     57F:	002B      	st         x, @(0x0, y)
     580:	0100      	**prefx    0x1
     581:	EA00      	**prefx    0xEA
     582:	089C      	bsr        +0xEA08 <NvmRead:0xEF8A[p]>
     583:	0127      	st         al, @(+0x1, y)

    /* Disable NVM to save power after read operation */
    Nvm_Disable();
     584:	E29C      	bsr        -0x1E <Nvm_Disable:0x566[p]>

    /* Report panic if NVM read is not successful */
    if(sys_status_success != result)
     585:	019B      	tst        @(+0x1, y)
     586:	04F4      	beq        +0x4 <.LASFDE6+0x6:0x58A[p]>
    {
        ReportPanic(app_panic_nvm_read);
     587:	0414      	ld         al, #+0x4
     588:	0600      	**prefx    0x6
     589:	DC9C      	bsr        +0x5DC <ReportPanic:0xB65[p]>
    }
}
     58A:	030F      	leave      #+0x3

0x0000058B <DeviceInfoCheckHandleRange>:
 *  RETURNS
 *      TRUE if handle belongs to the Device Information Service, FALSE
 *      otherwise
 *----------------------------------------------------------------------------*/
extern bool DeviceInfoCheckHandleRange(uint16 handle)
{
     58B:	0010      	ld         ah, #+0x0
     58C:	F634      	add        al, #-0xA
     58D:	1184      	cmp        al, #+0x11
     58E:	02F8      	bcc        +0x2 <DeviceInfoCheckHandleRange+0x5:0x590[p]>
     58F:	0110      	ld         ah, #+0x1
    return ((handle >= HANDLE_DEVICE_INFO_SERVICE) &&
            (handle <= HANDLE_DEVICE_INFO_SERVICE_END))
            ? TRUE : FALSE;
}
     590:	E015      	ld         al, @0xFFE0 <register ah>
     591:	00E2      	bra        0x0, x

0x00000592 <DeviceInfoHandleAccessRead>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void DeviceInfoHandleAccessRead(GATT_ACCESS_IND_T *p_ind)
{
     592:	090B      	enter      #+0x9
     593:	0727      	st         al, @(+0x7, y)
    uint16 length = 0;                  /* Length of attribute data, octets */
    uint8 *p_value = NULL;              /* Pointer to attribute value */
    sys_status rc = gatt_status_unlikely_error;/* Function status */

    switch(p_ind->handle)
     594:	E119      	ld         x, @0xFFE1 <register al>
     595:	0216      	ld         al, @(+0x2, x)
     596:	1084      	cmp        al, #+0x10
     597:	07F4      	beq        +0x7 <.LASFDE8+0x2:0x59E[p]>
     598:	0010      	ld         ah, #+0x0
     599:	F921      	st         ah, @0xFFF9 <(scratchpad)>
     59A:	F821      	st         ah, @0xFFF8 <(scratchpad)>
     59B:	0A00      	**prefx    0xA
     59C:	0214      	ld         al, #+0xA02
     59D:	33E0      	bra        +0x33 <.LSCIE0+0x4:0x5D0[p]>
 *----------------------------------------------------------------------------*/
static bool getSystemId(SYSTEM_ID_T * sys_id)
{
    BD_ADDR_T bdaddr;           /* Device's Bluetooth address */

    if(CSReadBdaddr(&bdaddr))
     59E:	E415      	ld         al, @0xFFE4 <register uy>
     59F:	0334      	add        al, #+0x3
     5A0:	0100      	**prefx    0x1
     5A1:	DF00      	**prefx    0xDF
     5A2:	A59C      	bsr        +0xDEA5 <CSReadBdaddr:0xE447[p]>
     5A3:	E199      	tst        @0xFFE1 <register al>
     5A4:	08F0      	bne        +0x8 <L0+0x9:0x5AC[p]>
     5A5:	0818      	ld         x, #+0x8
     5A6:	F929      	st         x, @0xFFF9 <(scratchpad)>
     5A7:	0010      	ld         ah, #+0x0
     5A8:	F821      	st         ah, @0xFFF8 <(scratchpad)>
     5A9:	0A00      	**prefx    0xA
     5AA:	0E14      	ld         al, #+0xA0E
     5AB:	25E0      	bra        +0x25 <.LSCIE0+0x4:0x5D0[p]>
    {
        /* Manufacturer-defined identifier */
        sys_id->byte[0] = (uint8)(bdaddr.lap);
     5AC:	041B      	ld         x, @(+0x4, y)
     5AD:	0313      	ld         ah, @(+0x3, y)
     5AE:	FA21      	st         ah, @0xFFFA <(scratchpad)>
     5AF:	4B00      	**prefx    0x4B
     5B0:	D829      	st         x, @0x4AD8 <g_dev_info_data>
        sys_id->byte[1] = (uint8)(bdaddr.lap >> 8);
     5B1:	E315      	ld         al, @0xFFE3 <register uxl>
     5B2:	0009      	**unsigned
     5B3:	08A4      	lsr        #0x8
     5B4:	4B00      	**prefx    0x4B
     5B5:	D925      	st         al, @0x4AD9 <g_dev_info_data+0x1>
        sys_id->byte[2] = (uint8)(bdaddr.lap >> 16);
     5B6:	FA15      	ld         al, @0xFFFA <(scratchpad)>
     5B7:	4B00      	**prefx    0x4B
     5B8:	DA25      	st         al, @0x4ADA <g_dev_info_data+0x2>
        sys_id->byte[3] = (uint8)(SYSTEM_ID_FIXED_CONSTANT);
     5B9:	FE18      	ld         x, #-0x2
     5BA:	4B00      	**prefx    0x4B
     5BB:	DB29      	st         x, @0x4ADB <g_dev_info_data+0x3>
        sys_id->byte[4] = (uint8)(SYSTEM_ID_FIXED_CONSTANT >> 8);
     5BC:	0100      	**prefx    0x1
     5BD:	FF10      	ld         ah, #+0xFF
     5BE:	4B00      	**prefx    0x4B
     5BF:	DC21      	st         ah, @0x4ADC <g_dev_info_data+0x4>

        /* Organizationally Unique Identifier */
        sys_id->byte[5] = (uint8)(bdaddr.uap);
     5C0:	0517      	ld         al, @(+0x5, y)
     5C1:	4B00      	**prefx    0x4B
     5C2:	DD25      	st         al, @0x4ADD <g_dev_info_data+0x5>
        sys_id->byte[6] = (uint8)(bdaddr.nap);
     5C3:	0613      	ld         ah, @(+0x6, y)
     5C4:	4B00      	**prefx    0x4B
     5C5:	DE21      	st         ah, @0x4ADE <g_dev_info_data+0x6>
        sys_id->byte[7] = (uint8)(bdaddr.nap >> 8);
     5C6:	0009      	**unsigned
     5C7:	08A4      	lsr        #0x8
     5C8:	4B00      	**prefx    0x4B
     5C9:	DF21      	st         ah, @0x4ADF <g_dev_info_data+0x7>
     5CA:	0818      	ld         x, #+0x8
     5CB:	F929      	st         x, @0xFFF9 <(scratchpad)>
     5CC:	4B00      	**prefx    0x4B
     5CD:	D810      	ld         ah, #+0x4AD8
     5CE:	F821      	st         ah, @0xFFF8 <(scratchpad)>
     5CF:	0014      	ld         al, #+0x0
     5D0:	FA25      	st         al, @0xFFFA <(scratchpad)>
        }
        break;
    }

    /* Send response indication */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc, length, p_value);
     5D1:	071B      	ld         x, @(+0x7, y)
     5D2:	0116      	ld         al, @(+0x1, x)
     5D3:	0212      	ld         ah, @(+0x2, x)
     5D4:	FA19      	ld         x, @0xFFFA <(scratchpad)>
     5D5:	002B      	st         x, @(0x0, y)
     5D6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
     5D7:	012B      	st         x, @(+0x1, y)
     5D8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     5D9:	022B      	st         x, @(+0x2, y)
     5DA:	0100      	**prefx    0x1
     5DB:	AB00      	**prefx    0xAB
     5DC:	A29C      	bsr        +0xAAA2 <GattAccessRsp:0xB07E[p]>
}
     5DD:	090F      	leave      #+0x9

0x000005DE <handleShortButtonPress>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleShortButtonPress(timer_id tid)
{
     if(tid == g_app_hw_data.short_button_press_tid)
     5DE:	4B00      	**prefx    0x4B
     5DF:	E185      	cmp        al, @0x4AE1 <g_app_hw_data+0x1>
     5E0:	04F0      	bne        +0x4 <handleShortButtonPress+0x6:0x5E4[p]>
    {
        /* Re-initialise button press timer */
        g_app_hw_data.short_button_press_tid = TIMER_INVALID;
     5E1:	0014      	ld         al, #+0x0
     5E2:	4B00      	**prefx    0x4B
     5E3:	E125      	st         al, @0x4AE1 <g_app_hw_data+0x1>
     5E4:	00E2      	bra        0x0, x

0x000005E5 <HwDataInit>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HwDataInit(void)
{
     5E5:	010B      	enter      #+0x1
    /* Delete button press timer */
    if (g_app_hw_data.button_press_tid != TIMER_INVALID)
     5E6:	4B00      	**prefx    0x4B
     5E7:	E015      	ld         al, @0x4AE0 <g_app_hw_data>
     5E8:	07F4      	beq        +0x7 <.LASFDE2+0x3:0x5EF[p]>
    {
        TimerDelete(g_app_hw_data.button_press_tid);
     5E9:	0100      	**prefx    0x1
     5EA:	DA00      	**prefx    0xDA
     5EB:	549C      	bsr        +0xDA54 <TimerDelete:0xE03F[p]>
        g_app_hw_data.button_press_tid = TIMER_INVALID;
     5EC:	0014      	ld         al, #+0x0
     5ED:	4B00      	**prefx    0x4B
     5EE:	E025      	st         al, @0x4AE0 <g_app_hw_data>
    }
}
     5EF:	010F      	leave      #+0x1

0x000005F0 <HandlePIOChangedEvent>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HandlePIOChangedEvent(pio_changed_data *pio_data)
{
     5F0:	040B      	enter      #+0x4
     5F1:	0227      	st         al, @(+0x2, y)
    /* PIO changed */
    uint32 pios = PioGets();
     5F2:	0100      	**prefx    0x1
     5F3:	F000      	**prefx    0xF0
     5F4:	DB9C      	bsr        +0xEFDB <PioGets:0xF5CF[p]>
     5F5:	E111      	ld         ah, @0xFFE1 <register al>

    if(pio_data->pio_cause & BUTTON_PIO_MASK)
     5F6:	021B      	ld         x, @(+0x2, y)
     5F7:	0316      	ld         al, @(+0x3, x)
     5F8:	10C4      	and        al, #0x10
     5F9:	49F4      	beq        +0x49 <.LEFDE8+0x2:0x642[p]>
    {
        if(!(pios & BUTTON_PIO_MASK))
     5FA:	E015      	ld         al, @0xFFE0 <register ah>
     5FB:	10C4      	and        al, #0x10
     5FC:	28F0      	bne        +0x28 <.LASFDE6+0x10:0x624[p]>
            /* Start a timer for EXTRA_LONG_BUTTON_PRESS_TIMER seconds. If the
             * timer expires before the button is released an extra long button
             * press is detected. If the button is released before the timer
             * expires a short button press is detected.
             */
            TimerDelete(g_app_hw_data.button_press_tid);
     5FD:	4B00      	**prefx    0x4B
     5FE:	E015      	ld         al, @0x4AE0 <g_app_hw_data>
     5FF:	0100      	**prefx    0x1
     600:	DA00      	**prefx    0xDA
     601:	3E9C      	bsr        +0xDA3E <TimerDelete:0xE03F[p]>
            TimerDelete(g_app_hw_data.short_button_press_tid);
     602:	4B00      	**prefx    0x4B
     603:	E115      	ld         al, @0x4AE1 <g_app_hw_data+0x1>
     604:	0100      	**prefx    0x1
     605:	DA00      	**prefx    0xDA
     606:	399C      	bsr        +0xDA39 <TimerDelete:0xE03F[p]>
            HandleExtTrigger();
     607:	0500      	**prefx    0x5
     608:	319C      	bsr        +0x531 <HandleExtTrigger:0xB39[p]>
            g_app_hw_data.short_button_press_tid =
     609:	0114      	ld         al, #+0x1
     60A:	0027      	st         al, @(0x0, y)
     60B:	0600      	**prefx    0x6
     60C:	DE18      	ld         x, #+0x5DE
     60D:	012B      	st         x, @(+0x1, y)
     60E:	0F10      	ld         ah, #+0xF
     60F:	4200      	**prefx    0x42
     610:	4014      	ld         al, #+0x4240
     611:	0100      	**prefx    0x1
     612:	DB00      	**prefx    0xDB
     613:	E89C      	bsr        +0xDAE8 <TimerCreate:0xE0FB[p]>
     614:	4B00      	**prefx    0x4B
     615:	E125      	st         al, @0x4AE1 <g_app_hw_data+0x1>
                TimerCreate(SHORT_BUTTON_PRESS_TIMER,
                                           TRUE, handleShortButtonPress);

            g_app_hw_data.button_press_tid =
     616:	0114      	ld         al, #+0x1
     617:	0027      	st         al, @(0x0, y)
     618:	0600      	**prefx    0x6
     619:	4318      	ld         x, #+0x643
     61A:	012B      	st         x, @(+0x1, y)
     61B:	4C10      	ld         ah, #+0x4C
     61C:	4B00      	**prefx    0x4B
     61D:	4014      	ld         al, #+0x4B40
     61E:	0100      	**prefx    0x1
     61F:	DB00      	**prefx    0xDB
     620:	DB9C      	bsr        +0xDADB <TimerCreate:0xE0FB[p]>
     621:	4B00      	**prefx    0x4B
     622:	E025      	st         al, @0x4AE0 <g_app_hw_data>
     623:	1FE0      	bra        +0x1F <.LEFDE8+0x2:0x642[p]>
                                           TRUE, handleExtraLongButtonPress);
        }
        else
        {
            /* This event comes when a button is released. */
            if(g_app_hw_data.short_button_press_tid != TIMER_INVALID)
     624:	4B00      	**prefx    0x4B
     625:	E115      	ld         al, @0x4AE1 <g_app_hw_data+0x1>
     626:	11F4      	beq        +0x11 <.LASFDE8+0xB:0x637[p]>
            {
               /* Timer was already running. This means it was a
                * short button press.
                */
                TimerDelete(g_app_hw_data.short_button_press_tid);
     627:	0100      	**prefx    0x1
     628:	DA00      	**prefx    0xDA
     629:	169C      	bsr        +0xDA16 <TimerDelete:0xE03F[p]>
                g_app_hw_data.short_button_press_tid = TIMER_INVALID;
     62A:	0014      	ld         al, #+0x0
     62B:	4B00      	**prefx    0x4B
     62C:	E125      	st         al, @0x4AE1 <g_app_hw_data+0x1>

                TimerDelete(g_app_hw_data.button_press_tid);
     62D:	4B00      	**prefx    0x4B
     62E:	E015      	ld         al, @0x4AE0 <g_app_hw_data>
     62F:	0100      	**prefx    0x1
     630:	DA00      	**prefx    0xDA
     631:	0E9C      	bsr        +0xDA0E <TimerDelete:0xE03F[p]>
                g_app_hw_data.button_press_tid = TIMER_INVALID;
     632:	0018      	ld         x, #+0x0
     633:	4B00      	**prefx    0x4B
     634:	E029      	st         x, @0x4AE0 <g_app_hw_data>

                HandleShortButtonPress();
     635:	0600      	**prefx    0x6
     636:	0F9C      	bsr        +0x60F <HandleShortButtonPress:0xC45[p]>
                
            }

            /* This event comes when a button is released. */
            if(g_app_hw_data.button_press_tid != TIMER_INVALID)
     637:	4B00      	**prefx    0x4B
     638:	E015      	ld         al, @0x4AE0 <g_app_hw_data>
     639:	09F4      	beq        +0x9 <.LEFDE8+0x2:0x642[p]>
            {
                /* Timer was already running. This means it was a long button
                 * press.
                 */
                TimerDelete(g_app_hw_data.button_press_tid);
     63A:	0100      	**prefx    0x1
     63B:	DA00      	**prefx    0xDA
     63C:	039C      	bsr        +0xDA03 <TimerDelete:0xE03F[p]>
                g_app_hw_data.button_press_tid = TIMER_INVALID;
     63D:	0014      	ld         al, #+0x0
     63E:	4B00      	**prefx    0x4B
     63F:	E025      	st         al, @0x4AE0 <g_app_hw_data>

                HandleLongButtonPress();
     640:	0100      	**prefx    0x1
     641:	829C      	bsr        +0x82 <HandleLongButtonPress:0x6C3[p]>
            }
        }
    }
}
     642:	040F      	leave      #+0x4

0x00000643 <handleExtraLongButtonPress>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleExtraLongButtonPress(timer_id tid)
{
    if(tid == g_app_hw_data.button_press_tid)
     643:	4B00      	**prefx    0x4B
     644:	E085      	cmp        al, @0x4AE0 <g_app_hw_data>
     645:	06F0      	bne        +0x6 <.LASFDE10+0x7:0x64B[p]>
    {
        /* Re-initialise button press timer */
        g_app_hw_data.button_press_tid = TIMER_INVALID;
     646:	0014      	ld         al, #+0x0
     647:	4B00      	**prefx    0x4B
     648:	E025      	st         al, @0x4AE0 <g_app_hw_data>

        /* Handle pairing removal */
        HandlePairingRemoval();
     649:	0600      	**prefx    0x6
     64A:	1AE0      	bra        +0x61A <HandlePairingRemoval:0xC64[p]>
     64B:	00E2      	bra        0x0, x

0x0000064C <InitHardware>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void InitHardware(void)
{
     64C:	030B      	enter      #+0x3
    /* Setup PIOs
     * PIO11 - Button
     */
    /* Set the button PIO to user mode */

        PioSetModes(BUTTON_PIO_MASK, pio_mode_user);
     64D:	0014      	ld         al, #+0x0
     64E:	0027      	st         al, @(0x0, y)
     64F:	0010      	ld         ah, #+0x0
     650:	1014      	ld         al, #+0x10
     651:	0100      	**prefx    0x1
     652:	F000      	**prefx    0xF0
     653:	149C      	bsr        +0xF014 <PioSetModes:0xF667[p]>
        PioSetModes(PIO_BAUD_RATE_MASK, pio_mode_user);
     654:	0014      	ld         al, #+0x0
     655:	0027      	st         al, @(0x0, y)
     656:	0010      	ld         ah, #+0x0
     657:	0814      	ld         al, #+0x8
     658:	0100      	**prefx    0x1
     659:	F000      	**prefx    0xF0
     65A:	0D9C      	bsr        +0xF00D <PioSetModes:0xF667[p]>
    
        /* Set the PIO direction as input */
        PioSetDir(BUTTON_PIO, PIO_DIRECTION_INPUT);
     65B:	0414      	ld         al, #+0x4
     65C:	0010      	ld         ah, #+0x0
     65D:	0100      	**prefx    0x1
     65E:	F100      	**prefx    0xF1
     65F:	159C      	bsr        +0xF115 <PioSetDir:0xF774[p]>
    
        /* Pull up the PIO */
        PioSetPullModes(BUTTON_PIO_MASK, pio_mode_strong_pull_up);
     660:	0714      	ld         al, #+0x7
     661:	0027      	st         al, @(0x0, y)
     662:	0010      	ld         ah, #+0x0
     663:	1014      	ld         al, #+0x10
     664:	0100      	**prefx    0x1
     665:	F000      	**prefx    0xF0
     666:	A69C      	bsr        +0xEFA6 <PioSetPullModes:0xF60C[p]>
        PioSetPullModes(PIO_BAUD_RATE_MASK, pio_mode_weak_pull_down);
     667:	0114      	ld         al, #+0x1
     668:	0027      	st         al, @(0x0, y)
     669:	0010      	ld         ah, #+0x0
     66A:	0814      	ld         al, #+0x8
     66B:	0100      	**prefx    0x1
     66C:	F000      	**prefx    0xF0
     66D:	9F9C      	bsr        +0xEF9F <PioSetPullModes:0xF60C[p]>

    /* Request an event when the button PIO changes state */
    PioSetEventMask(BUTTON_PIO_MASK, pio_event_mode_both);
     66E:	0314      	ld         al, #+0x3
     66F:	0027      	st         al, @(0x0, y)
     670:	0010      	ld         ah, #+0x0
     671:	1014      	ld         al, #+0x10
     672:	0100      	**prefx    0x1
     673:	F100      	**prefx    0xF1
     674:	A59C      	bsr        +0xF0A5 <PioSetEventMask:0xF719[p]>

   /* Request an event when the button PIO changes state */
    PioSetEventMask(PIO_BAUD_RATE_MASK, pio_event_mode_both);
     675:	0314      	ld         al, #+0x3
     676:	0027      	st         al, @(0x0, y)
     677:	0010      	ld         ah, #+0x0
     678:	0814      	ld         al, #+0x8
     679:	0100      	**prefx    0x1
     67A:	F100      	**prefx    0xF1
     67B:	9E9C      	bsr        +0xF09E <PioSetEventMask:0xF719[p]>

    /* Save power by changing the I2C pull mode to pull down.*/
    PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_down);
     67C:	0514      	ld         al, #+0x5
     67D:	0100      	**prefx    0x1
     67E:	F200      	**prefx    0xF2
     67F:	949C      	bsr        +0xF194 <PioSetI2CPullMode:0xF813[p]>
    
    /* Set the UART Rx PIO to user mode */
    PioSetModes(UART_RX_PIO_MASK, pio_mode_user);
     680:	0014      	ld         al, #+0x0
     681:	0027      	st         al, @(0x0, y)
     682:	0010      	ld         ah, #+0x0
     683:	0214      	ld         al, #+0x2
     684:	0100      	**prefx    0x1
     685:	F000      	**prefx    0xF0
     686:	E19C      	bsr        +0xEFE1 <PioSetModes:0xF667[p]>

    /* Set the UART Rx PIO direction as input */
    PioSetDir(UART_RX_PIO, PIO_DIRECTION_INPUT);
     687:	0114      	ld         al, #+0x1
     688:	0010      	ld         ah, #+0x0
     689:	0100      	**prefx    0x1
     68A:	F100      	**prefx    0xF1
     68B:	E99C      	bsr        +0xF0E9 <PioSetDir:0xF774[p]>

    /* Pull up the PIO to save power*/
    PioSetPullModes(UART_RX_PIO_MASK, pio_mode_strong_pull_up);
     68C:	0714      	ld         al, #+0x7
     68D:	0027      	st         al, @(0x0, y)
     68E:	0010      	ld         ah, #+0x0
     68F:	0214      	ld         al, #+0x2
     690:	0100      	**prefx    0x1
     691:	EF00      	**prefx    0xEF
     692:	7A9C      	bsr        +0xEF7A <PioSetPullModes:0xF60C[p]>
    
    /* Disable any events arising out of this PIO */
    PioSetEventMask(UART_RX_PIO_MASK, pio_event_mode_disable);
     693:	0014      	ld         al, #+0x0
     694:	0027      	st         al, @(0x0, y)
     695:	0010      	ld         ah, #+0x0
     696:	0214      	ld         al, #+0x2
     697:	0100      	**prefx    0x1
     698:	F100      	**prefx    0xF1
     699:	809C      	bsr        +0xF080 <PioSetEventMask:0xF719[p]>

#ifdef ENABLE_LED
   /* Set LED0 and LED1 to be controlled directly via PioSet */
    PioSetModes((1UL << PIO_LED0), pio_mode_user);
     69A:	0014      	ld         al, #+0x0
     69B:	0027      	st         al, @(0x0, y)
     69C:	0010      	ld         ah, #+0x0
     69D:	0800      	**prefx    0x8
     69E:	0014      	ld         al, #+0x800
     69F:	0100      	**prefx    0x1
     6A0:	F000      	**prefx    0xF0
     6A1:	C69C      	bsr        +0xEFC6 <PioSetModes:0xF667[p]>

    /* Configure LED0 and LED1 to be outputs */
    PioSetDir(PIO_LED0, PIO_DIRECTION_OUTPUT);
     6A2:	0B14      	ld         al, #+0xB
     6A3:	0110      	ld         ah, #+0x1
     6A4:	0100      	**prefx    0x1
     6A5:	F100      	**prefx    0xF1
     6A6:	CE9C      	bsr        +0xF0CE <PioSetDir:0xF774[p]>

    /* Set the LED0 and LED1 to have strong internal pull ups */
    PioSetPullModes((1UL << PIO_LED0),pio_mode_strong_pull_up);
     6A7:	0714      	ld         al, #+0x7
     6A8:	0027      	st         al, @(0x0, y)
     6A9:	0010      	ld         ah, #+0x0
     6AA:	0800      	**prefx    0x8
     6AB:	0014      	ld         al, #+0x800
     6AC:	0100      	**prefx    0x1
     6AD:	EF00      	**prefx    0xEF
     6AE:	5E9C      	bsr        +0xEF5E <PioSetPullModes:0xF60C[p]>

    /* Turn off the LED by setting output to Low */
    PioSets((1UL << PIO_LED0),0UL);
     6AF:	0014      	ld         al, #+0x0
     6B0:	0027      	st         al, @(0x0, y)
     6B1:	0127      	st         al, @(+0x1, y)
     6B2:	0010      	ld         ah, #+0x0
     6B3:	0800      	**prefx    0x8
     6B4:	0014      	ld         al, #+0x800
     6B5:	0100      	**prefx    0x1
     6B6:	EF00      	**prefx    0xEF
     6B7:	039C      	bsr        +0xEF03 <PioSets:0xF5BA[p]>
#endif /* ENABLE_LED */
}
     6B8:	030F      	leave      #+0x3

0x000006B9 <AppGetState>:
 *      Current application state
 *----------------------------------------------------------------------------*/
extern app_state AppGetState(void)
{
    return g_app_data.state;
}
     6B9:	4B00      	**prefx    0x4B
     6BA:	7415      	ld         al, @0x4B74 <g_app_data>
     6BB:	00E2      	bra        0x0, x

0x000006BC <IsDeviceBonded>:
 *      TRUE if device is bonded, FALSE if not.
 *----------------------------------------------------------------------------*/
extern bool IsDeviceBonded(void)
{
    return g_app_data.bonded;
}
     6BC:	4B00      	**prefx    0x4B
     6BD:	7B15      	ld         al, @0x4B7B <g_app_data+0x7>
     6BE:	00E2      	bra        0x0, x

0x000006BF <GetConnectionID>:
 *      Connection identifier.
 *----------------------------------------------------------------------------*/
extern uint16 GetConnectionID(void)
{
    return g_app_data.st_ucid;
}
     6BF:	4B00      	**prefx    0x4B
     6C0:	7A15      	ld         al, @0x4B7A <g_app_data+0x6>
     6C1:	00E2      	bra        0x0, x

0x000006C2 <AppPowerOnReset>:
extern void AppPowerOnReset(void)
{
    /* Code that is only executed after a power-on reset or firmware panic
     * should be implemented here - e.g. configuring application constants
     */
}
     6C2:	00E2      	bra        0x0, x

0x000006C3 <HandleLongButtonPress>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HandleLongButtonPress(void)
{
     6C3:	010B      	enter      #+0x1
    /*uint8 temp[2]={0x00,0x02};*/
    /* Handle signal as per current state */
    switch(g_app_data.state)
     6C4:	4B00      	**prefx    0x4B
     6C5:	7415      	ld         al, @0x4B74 <g_app_data>
     6C6:	0484      	cmp        al, #+0x4
     6C7:	18F0      	bne        +0x18 <.LASFDE6+0xB:0x6DF[p]>
    {
        case app_state_connected:
            /* Disconnect from the connected host */
            /*AppSetState(app_state_disconnecting);*/
            if( mode == 0x31)
     6C8:	4B00      	**prefx    0x4B
     6C9:	7015      	ld         al, @0x4B70 <mode>
     6CA:	3184      	cmp        al, #+0x31
     6CB:	09F0      	bne        +0x9 <.LASFDE6:0x6D4[p]>
            {
                /*WLED_PWM(w_int);
                IR_PWM(0xFF);*/
              if (Flag7)
     6CC:	4B00      	**prefx    0x4B
     6CD:	EA99      	tst        @0x4AEA <Flag7>
     6CE:	11F4      	beq        +0x11 <.LASFDE6+0xB:0x6DF[p]>
            {
                VFPWMStart(0xFF,w_int);
     6CF:	0100      	**prefx    0x1
     6D0:	FF14      	ld         al, #+0xFF
     6D1:	8D00      	**prefx    0x8D
     6D2:	9611      	ld         ah, @0x8C96 <w_int>
     6D3:	0AE0      	bra        +0xA <.LASFDE6+0x9:0x6DD[p]>
            }
                /*GattCharValueNotification(GetConnectionID(),HANDLE_SERIAL_DATA_TRANSFER,1,&temp[0]); */
            }
            else if(mode == 0x32)
     6D4:	3284      	cmp        al, #+0x32
     6D5:	0AF0      	bne        +0xA <.LASFDE6+0xB:0x6DF[p]>
            {
                /*WLED_PWM(0xff);
                IR_PWM(ir_int);*/
              if (Flag7)
     6D6:	4B00      	**prefx    0x4B
     6D7:	EA99      	tst        @0x4AEA <Flag7>
     6D8:	07F4      	beq        +0x7 <.LASFDE6+0xB:0x6DF[p]>
              {
                VFPWMStart(ir_int,0xFF);
     6D9:	8D00      	**prefx    0x8D
     6DA:	9715      	ld         al, @0x8C97 <ir_int>
     6DB:	0100      	**prefx    0x1
     6DC:	FF10      	ld         ah, #+0xFF
     6DD:	0E00      	**prefx    0xE
     6DE:	7A9C      	bsr        +0xE7A <VFPWMStart:0x1558[p]>
        default:
            /* Ignore in remaining states */
        break;

    }
}
     6DF:	010F      	leave      #+0x1

0x000006E0 <resetIdleTimer>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void resetIdleTimer(void)
{
     6E0:	030B      	enter      #+0x3
    /* Delete the Idle timer, if already running */
    if (g_app_data.app_tid != TIMER_INVALID)
     6E1:	4C00      	**prefx    0x4C
     6E2:	8B15      	ld         al, @0x4B8B <g_app_data+0x17>
     6E3:	07F4      	beq        +0x7 <.LEFDE6+0x2:0x6EA[p]>
    {
        TimerDelete(g_app_data.app_tid);
     6E4:	0100      	**prefx    0x1
     6E5:	D900      	**prefx    0xD9
     6E6:	599C      	bsr        +0xD959 <TimerDelete:0xE03F[p]>
        g_app_data.app_tid = TIMER_INVALID;
     6E7:	0014      	ld         al, #+0x0
     6E8:	4C00      	**prefx    0x4C
     6E9:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
    }

    /* Start the Idle timer again.*/
    g_app_data.app_tid  = TimerCreate(CONNECTED_IDLE_TIMEOUT_VALUE,
     6EA:	0114      	ld         al, #+0x1
     6EB:	0027      	st         al, @(0x0, y)
     6EC:	0C00      	**prefx    0xC
     6ED:	5614      	ld         al, #+0xC56
     6EE:	0127      	st         al, @(+0x1, y)
     6EF:	6B00      	**prefx    0x6B
     6F0:	4910      	ld         ah, #+0x6B49
     6F1:	D200      	**prefx    0xD2
     6F2:	0014      	ld         al, #-0x2E00
     6F3:	0100      	**prefx    0x1
     6F4:	DA00      	**prefx    0xDA
     6F5:	069C      	bsr        +0xDA06 <TimerCreate:0xE0FB[p]>
     6F6:	4C00      	**prefx    0x4C
     6F7:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
                                    TRUE, appIdleTimerHandler);
}
     6F8:	030F      	leave      #+0x3

0x000006F9 <handleLED>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleLED(timer_id tid)
{
     6F9:	030B      	enter      #+0x3
    if(g_app_data.led_timer_tid  == tid)
     6FA:	4C00      	**prefx    0x4C
     6FB:	8F11      	ld         ah, @0x4B8F <g_app_data+0x1B>
     6FC:	E181      	cmp        ah, @0xFFE1 <register al>
     6FD:	40F0      	bne        +0x40 <.LASFDE14+0x11:0x73D[p]>
    {
       g_app_data.led_timer_tid  = TIMER_INVALID;
     6FE:	0014      	ld         al, #+0x0
     6FF:	4C00      	**prefx    0x4C
     700:	8F25      	st         al, @0x4B8F <g_app_data+0x1B>

        /* Handle signal as per current state */
        switch(g_app_data.state)
     701:	4B00      	**prefx    0x4B
     702:	7419      	ld         x, @0x4B74 <g_app_data>
     703:	0788      	cmp        x, #+0x7
     704:	39F8      	bcc        +0x39 <.LASFDE14+0x11:0x73D[p]>
     705:	4A00      	**prefx    0x4A
     706:	5B1A      	ld         x, @(+0x4A5B, x)
     707:	FE09      	brxl       

0x00000708 <.JTBASE27>:
           case app_state_init:
           case app_state_directed_advertising:
           case app_state_fast_advertising:  /* FALLTHROUGH */
           case app_state_slow_advertising:
            {
                if(g_turn_on_led_advert)
     708:	8D00      	**prefx    0x8D
     709:	9899      	tst        @0x8C98 <g_turn_on_led_advert>
     70A:	03F4      	beq        +0x3 <.JTBASE27+0x5:0x70D[p]>
                {
                    /* Turn on the LED */
                    /*TurnOnLED(TRUE);*/
                    g_turn_on_led_advert = FALSE;
     70B:	0014      	ld         al, #+0x0
     70C:	02E0      	bra        +0x2 <.JTBASE27+0x6:0x70E[p]>
                }
                else
                {
                    /* Turn off the LED */
                    /*TurnOnLED(FALSE);*/
                    g_turn_on_led_advert = TRUE;
     70D:	0114      	ld         al, #+0x1
     70E:	8D00      	**prefx    0x8D
     70F:	9825      	st         al, @0x8C98 <g_turn_on_led_advert>
                }

                /* Recreate advertising LED timer */
                g_app_data.led_timer_tid = TimerCreate(
     710:	0114      	ld         al, #+0x1
     711:	0027      	st         al, @(0x0, y)
     712:	0700      	**prefx    0x7
     713:	F914      	ld         al, #+0x6F9
     714:	0127      	st         al, @(+0x1, y)
     715:	0710      	ld         ah, #+0x7
     716:	A100      	**prefx    0xA1
     717:	2014      	ld         al, #-0x5EE0
     718:	1AE0      	bra        +0x1A <.LASFDE14+0x6:0x732[p]>
                                                  handleLED);
                break;
            }
            case app_state_connected:
            {
                if(g_turn_on_led_connect)
     719:	8D00      	**prefx    0x8D
     71A:	9999      	tst        @0x8C99 <g_turn_on_led_connect>
     71B:	0DF4      	beq        +0xD <.LEFDE12:0x728[p]>
                {
                    /* Turn on the LED */
                    g_turn_on_led_connect = FALSE;
     71C:	0014      	ld         al, #+0x0
     71D:	8D00      	**prefx    0x8D
     71E:	9925      	st         al, @0x8C99 <g_turn_on_led_connect>
                    /*TurnOnLED(TRUE);*/
                    
                    /* Recreate connected LED timer */
                    g_app_data.led_timer_tid = TimerCreate(
     71F:	0114      	ld         al, #+0x1
     720:	0027      	st         al, @(0x0, y)
     721:	0700      	**prefx    0x7
     722:	F914      	ld         al, #+0x6F9
     723:	0127      	st         al, @(+0x1, y)
     724:	0110      	ld         ah, #+0x1
     725:	8700      	**prefx    0x87
     726:	A014      	ld         al, #-0x7960
     727:	0BE0      	bra        +0xB <.LASFDE14+0x6:0x732[p]>
                                                  handleLED);
                }
                else
                {
                    /* Turn off the LED */
                    g_turn_on_led_connect = TRUE;
     728:	0114      	ld         al, #+0x1
     729:	8D00      	**prefx    0x8D
     72A:	9925      	st         al, @0x8C99 <g_turn_on_led_connect>
                    /*TurnOnLED(FALSE);*/

                    /* Recreate connected LED timer */
                    g_app_data.led_timer_tid = TimerCreate(
     72B:	0027      	st         al, @(0x0, y)
     72C:	0700      	**prefx    0x7
     72D:	F914      	ld         al, #+0x6F9
     72E:	0127      	st         al, @(+0x1, y)
     72F:	4C10      	ld         ah, #+0x4C
     730:	4B00      	**prefx    0x4B
     731:	4014      	ld         al, #+0x4B40
     732:	0100      	**prefx    0x1
     733:	DA00      	**prefx    0xDA
     734:	C79C      	bsr        +0xD9C7 <TimerCreate:0xE0FB[p]>
     735:	06E0      	bra        +0x6 <.LASFDE14+0xF:0x73B[p]>
            {
                /* Turn off the LED */
                /*urnOnLED(FALSE);*/

                /* Delete the timer */
                TimerDelete(g_app_data.led_timer_tid);
     736:	0014      	ld         al, #+0x0
     737:	0100      	**prefx    0x1
     738:	D900      	**prefx    0xD9
     739:	069C      	bsr        +0xD906 <TimerDelete:0xE03F[p]>
                g_app_data.led_timer_tid = TIMER_INVALID;
     73A:	0014      	ld         al, #+0x0
     73B:	4C00      	**prefx    0x4C
     73C:	8F25      	st         al, @0x4B8F <g_app_data+0x1B>
                break;
            }
        }
    }
}
     73D:	030F      	leave      #+0x3

0x0000073E <StartAdvertTimer>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void StartAdvertTimer(uint32 interval)
{
     73E:	050B      	enter      #+0x5
     73F:	0327      	st         al, @(+0x3, y)
     740:	0223      	st         ah, @(+0x2, y)
    /* Cancel existing timer, if valid */
    if (g_app_data.app_tid != TIMER_INVALID)
     741:	4C00      	**prefx    0x4C
     742:	8B15      	ld         al, @0x4B8B <g_app_data+0x17>
     743:	04F4      	beq        +0x4 <.LASFDE16+0x3:0x747[p]>
    {
        TimerDelete(g_app_data.app_tid);
     744:	0100      	**prefx    0x1
     745:	D900      	**prefx    0xD9
     746:	F99C      	bsr        +0xD8F9 <TimerDelete:0xE03F[p]>
    }

    /* Start advertisement timer  */
    g_app_data.app_tid = TimerCreate(interval, TRUE, appAdvertTimerHandler);
     747:	0114      	ld         al, #+0x1
     748:	0027      	st         al, @(0x0, y)
     749:	0B00      	**prefx    0xB
     74A:	2F14      	ld         al, #+0xB2F
     74B:	0127      	st         al, @(+0x1, y)
     74C:	0317      	ld         al, @(+0x3, y)
     74D:	0213      	ld         ah, @(+0x2, y)
     74E:	0100      	**prefx    0x1
     74F:	DA00      	**prefx    0xDA
     750:	AB9C      	bsr        +0xD9AB <TimerCreate:0xE0FB[p]>
     751:	4C00      	**prefx    0x4C
     752:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
}
     753:	050F      	leave      #+0x5

0x00000754 <emptySendRecvBuffers>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/ 
static void emptySendRecvBuffers(void)
{
     754:	010B      	enter      #+0x1
    BQClearBuffer(0);
     755:	0014      	ld         al, #+0x0
     756:	0B00      	**prefx    0xB
     757:	439C      	bsr        +0xB43 <BQClearBuffer:0x129A[p]>
    BQClearBuffer(1);
     758:	0114      	ld         al, #+0x1
     759:	0B00      	**prefx    0xB
     75A:	409C      	bsr        +0xB40 <BQClearBuffer:0x129A[p]>
}
     75B:	010F      	leave      #+0x1

0x0000075C <appDataInit>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void appDataInit(void)
{
     75C:	030B      	enter      #+0x3
    /* Initialise general application timer */
    if (g_app_data.app_tid != TIMER_INVALID)
     75D:	4C00      	**prefx    0x4C
     75E:	8B15      	ld         al, @0x4B8B <g_app_data+0x17>
     75F:	07F4      	beq        +0x7 <UART_RATE_460K8+0x6:0x766[p]>
    {
        TimerDelete(g_app_data.app_tid);
     760:	0100      	**prefx    0x1
     761:	D900      	**prefx    0xD9
     762:	DD9C      	bsr        +0xD8DD <TimerDelete:0xE03F[p]>
        g_app_data.app_tid = TIMER_INVALID;
     763:	0014      	ld         al, #+0x0
     764:	4C00      	**prefx    0x4C
     765:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
    }

    /* Reset the pairing button press flag */
    g_app_data.pairing_button_pressed = FALSE;
     766:	0014      	ld         al, #+0x0
     767:	4C00      	**prefx    0x4C
     768:	8A25      	st         al, @0x4B8A <g_app_data+0x16>

    /* Initialise the connected client ID */
    g_app_data.st_ucid = GATT_INVALID_UCID;
     769:	FF14      	ld         al, #-0x1
     76A:	4B00      	**prefx    0x4B
     76B:	7A25      	st         al, @0x4B7A <g_app_data+0x6>

    /* Initialise white list flag */
    g_app_data.enable_white_list = FALSE;
     76C:	0014      	ld         al, #+0x0
     76D:	4C00      	**prefx    0x4C
     76E:	8C25      	st         al, @0x4B8C <g_app_data+0x18>


    /* Initialise link encryption flag */
    g_app_data.encrypt_enabled = FALSE;
     76F:	4C00      	**prefx    0x4C
     770:	8D25      	st         al, @0x4B8D <g_app_data+0x19>

    /* Initialise the bonding reattempt timer */
    if (g_app_data.bonding_reattempt_tid != TIMER_INVALID)
     771:	4C00      	**prefx    0x4C
     772:	8E15      	ld         al, @0x4B8E <g_app_data+0x1A>
     773:	07F4      	beq        +0x7 <.LASFDE20+0xE:0x77A[p]>
    {
        TimerDelete(g_app_data.bonding_reattempt_tid);
     774:	0100      	**prefx    0x1
     775:	D900      	**prefx    0xD9
     776:	C99C      	bsr        +0xD8C9 <TimerDelete:0xE03F[p]>
        g_app_data.bonding_reattempt_tid = TIMER_INVALID;
     777:	0014      	ld         al, #+0x0
     778:	4C00      	**prefx    0x4C
     779:	8E25      	st         al, @0x4B8E <g_app_data+0x1A>
    }

    /* Initialise the application GATT data */
    InitGattData();
     77A:	0800      	**prefx    0x8
     77B:	7B9C      	bsr        +0x87B <InitGattData:0xFF6[p]>

    /* Battery Service data initialisation */
    BatteryDataInit();
     77C:	FD00      	**prefx    0xFD
     77D:	059C      	bsr        -0x2FB <BatteryDataInit:0x482[p]>

#ifdef ENABLE_OTA
    /* Initialise GATT Data structure */
    GattDataInit();    
     77E:	0D00      	**prefx    0xD
     77F:	A79C      	bsr        +0xCA7 <GattDataInit:0x1426[p]>
    /* OTA Service data initialisation */
    OtaDataInit();
     780:	0C00      	**prefx    0xC
     781:	A99C      	bsr        +0xBA9 <OtaDataInit:0x132A[p]>
#endif /* ENABLE_OTA */

    /* Start LED */
    if (g_app_data.led_timer_tid != TIMER_INVALID)
     782:	4C00      	**prefx    0x4C
     783:	8F15      	ld         al, @0x4B8F <g_app_data+0x1B>
     784:	07F4      	beq        +0x7 <.LSCIE0+0x7:0x78B[p]>
    {
        TimerDelete(g_app_data.led_timer_tid);
     785:	0100      	**prefx    0x1
     786:	D900      	**prefx    0xD9
     787:	B89C      	bsr        +0xD8B8 <TimerDelete:0xE03F[p]>
        g_app_data.led_timer_tid = TIMER_INVALID;
     788:	0014      	ld         al, #+0x0
     789:	4C00      	**prefx    0x4C
     78A:	8F25      	st         al, @0x4B8F <g_app_data+0x1B>
    }

    g_app_data.led_timer_tid = TimerCreate(TIMER_ADV_ON_OFF_DURATION,
     78B:	0114      	ld         al, #+0x1
     78C:	0027      	st         al, @(0x0, y)
     78D:	0700      	**prefx    0x7
     78E:	F914      	ld         al, #+0x6F9
     78F:	0127      	st         al, @(+0x1, y)
     790:	0710      	ld         ah, #+0x7
     791:	A100      	**prefx    0xA1
     792:	2014      	ld         al, #-0x5EE0
     793:	0100      	**prefx    0x1
     794:	D900      	**prefx    0xD9
     795:	669C      	bsr        +0xD966 <TimerCreate:0xE0FB[p]>
     796:	4C00      	**prefx    0x4C
     797:	8F25      	st         al, @0x4B8F <g_app_data+0x1B>
                                               TRUE,
                                               handleLED);
    /* Call the required service data initialisation APIs from here */
    
}
     798:	030F      	leave      #+0x3

0x00000799 <setLastNotificationResult>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void setLastNotificationResult(bool bsuccess)
{
    SetLastNotificationStatus(bsuccess);
     799:	0A00      	**prefx    0xA
     79A:	DAE0      	bra        +0x9DA <SetLastNotificationStatus:0x1174[p]>

0x0000079B <AppProcessSystemEvent>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
void AppProcessSystemEvent(sys_event_id id, void *data)
{
     79B:	010B      	enter      #+0x1
    switch(id)
     79C:	0184      	cmp        al, #+0x1
     79D:	04F4      	beq        +0x4 <.LEFDE0+0x1:0x7A1[p]>
     79E:	0284      	cmp        al, #+0x2
     79F:	0EF0      	bne        +0xE <.LASFDE2+0x9:0x7AD[p]>
     7A0:	0AE0      	bra        +0xA <.LASFDE2+0x6:0x7AA[p]>
        {
            /* Battery low event received - notify the connected host. If
             * not connected, the battery level will get notified when
             * device gets connected again
             */
            if(g_app_data.state == app_state_connected)
     7A1:	4B00      	**prefx    0x4B
     7A2:	7415      	ld         al, @0x4B74 <g_app_data>
     7A3:	0484      	cmp        al, #+0x4
     7A4:	09F0      	bne        +0x9 <.LASFDE2+0x9:0x7AD[p]>
            {
                BatteryUpdateLevel(g_app_data.st_ucid);
     7A5:	4B00      	**prefx    0x4B
     7A6:	7A15      	ld         al, @0x4B7A <g_app_data+0x6>
     7A7:	FD00      	**prefx    0xFD
     7A8:	2F9C      	bsr        -0x2D1 <BatteryUpdateLevel:0x4D7[p]>
     7A9:	04E0      	bra        +0x4 <.LASFDE2+0x9:0x7AD[p]>
        break;

        case sys_event_pio_changed:
        {
             /* Handle the PIO changed event. */
             HandlePIOChangedEvent((pio_changed_data*)data);
     7AA:	E015      	ld         al, @0xFFE0 <register ah>
     7AB:	FE00      	**prefx    0xFE
     7AC:	449C      	bsr        -0x1BC <HandlePIOChangedEvent:0x5F0[p]>

        default:
            /* Ignore anything else */
        break;
    }
}
     7AD:	010F      	leave      #+0x1

0x000007AE <AppInit>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void AppInit(sleep_state last_sleep_state)
{
     7AE:	060B      	enter      #+0x6
    uint16 gatt_db_length = 0;  /* GATT database size */
     7AF:	0014      	ld         al, #+0x0
     7B0:	0227      	st         al, @(+0x2, y)
    uint16 *p_gatt_db = NULL;   /* GATT database */

     
     
    /* Initialise the Serial Server application state */
    g_app_data.state = app_state_init;
     7B1:	4B00      	**prefx    0x4B
     7B2:	7425      	st         al, @0x4B74 <g_app_data>

    /* Initialise the application timers */
    TimerInit(MAX_APP_TIMERS, (void*)app_timers);
     7B3:	0814      	ld         al, #+0x8
     7B4:	4B00      	**prefx    0x4B
     7B5:	EE10      	ld         ah, #+0x4AEE
     7B6:	0100      	**prefx    0x1
     7B7:	D800      	**prefx    0xD8
     7B8:	F29C      	bsr        +0xD7F2 <TimerInit:0xDFAA[p]>

    /* Initialise local timers */
    TimerDelete(g_app_data.app_tid);
     7B9:	4C00      	**prefx    0x4C
     7BA:	8B15      	ld         al, @0x4B8B <g_app_data+0x17>
     7BB:	0100      	**prefx    0x1
     7BC:	D900      	**prefx    0xD9
     7BD:	829C      	bsr        +0xD882 <TimerDelete:0xE03F[p]>
    g_app_data.app_tid = TIMER_INVALID;
     7BE:	0014      	ld         al, #+0x0
     7BF:	4C00      	**prefx    0x4C
     7C0:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
        
    TimerDelete(g_app_data.bonding_reattempt_tid );
     7C1:	4C00      	**prefx    0x4C
     7C2:	8E15      	ld         al, @0x4B8E <g_app_data+0x1A>
     7C3:	0100      	**prefx    0x1
     7C4:	D800      	**prefx    0xD8
     7C5:	7A9C      	bsr        +0xD87A <TimerDelete:0xE03F[p]>
    g_app_data.bonding_reattempt_tid = TIMER_INVALID;
     7C6:	0014      	ld         al, #+0x0
     7C7:	4C00      	**prefx    0x4C
     7C8:	8E25      	st         al, @0x4B8E <g_app_data+0x1A>
 
    /* Initialise GATT entity */
    GattInit();
     7C9:	1200      	**prefx    0x12
     7CA:	B99C      	bsr        +0x11B9 <GattInit:0x1983[p]>

    /* Initialise Serial Server H/W */
    InitHardware();
     7CB:	FF00      	**prefx    0xFF
     7CC:	809C      	bsr        -0x180 <InitHardware:0x64C[p]>

    /* Install GATT Server support for the optional Write procedure.
     * This is mandatory only if the control point characteristic is supported.
     */
    GattInstallServerWrite();
     7CD:	0100      	**prefx    0x1
     7CE:	A900      	**prefx    0xA9
     7CF:	6B9C      	bsr        +0xA96B <GattInstallServerWrite:0xB13A[p]>

#ifdef NVM_TYPE_EEPROM
    /* Configure the NVM manager to use I2C EEPROM for NVM store */
    NvmConfigureI2cEeprom();
     7D0:	1A00      	**prefx    0x1A
     7D1:	799C      	bsr        +0x1A79 <NvmConfigureI2cEeprom:0x224A[p]>
#elif NVM_TYPE_FLASH
    /* Configure the NVM Manager to use SPI flash for NVM store. */
    NvmConfigureSpiFlash();
#endif /* NVM_TYPE_EEPROM */

    Nvm_Disable();
     7D2:	FE00      	**prefx    0xFE
     7D3:	939C      	bsr        -0x26D <Nvm_Disable:0x566[p]>

    /* Battery initialisation on chip reset */
    BatteryInitChipReset();
     7D4:	FD00      	**prefx    0xFD
     7D5:	A39C      	bsr        -0x35D <BatteryInitChipReset:0x478[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void readPersistentStore(void)
{
    /* NVM offset for supported services */
    uint16 nvm_offset = NVM_MAX_APP_MEMORY_WORDS;
     7D6:	1014      	ld         al, #+0x10
     7D7:	0327      	st         al, @(+0x3, y)
    uint16 nvm_sanity = 0xffff;
     7D8:	FF14      	ld         al, #-0x1
     7D9:	0427      	st         al, @(+0x4, y)
     * device. If the device was bonded, trigger fast undirected advertisements
     * by setting the white list for bonded host. If the device was not bonded,
     * trigger undirected advertisements for any host to connect.
     */

    Nvm_Read(&nvm_sanity,
     7DA:	0014      	ld         al, #+0x0
     7DB:	0027      	st         al, @(0x0, y)
     7DC:	E415      	ld         al, @0xFFE4 <register uy>
     7DD:	0434      	add        al, #+0x4
     7DE:	0110      	ld         ah, #+0x1
     7DF:	FE00      	**prefx    0xFE
     7E0:	9D9C      	bsr        -0x263 <Nvm_Read:0x57D[p]>
             sizeof(nvm_sanity),
             NVM_OFFSET_SANITY_WORD);

    if(nvm_sanity == NVM_SANITY_MAGIC)
     7E1:	0417      	ld         al, @(+0x4, y)
     7E2:	AB00      	**prefx    0xAB
     7E3:	1984      	cmp        al, #-0x54E7
     7E4:	28F0      	bne        +0x28 <.LASFDE0+0x8:0x80C[p]>
    {

        /* Read Bonded Flag from NVM */
        Nvm_Read((uint16*)&g_app_data.bonded,
     7E5:	0114      	ld         al, #+0x1
     7E6:	0027      	st         al, @(0x0, y)
     7E7:	4B00      	**prefx    0x4B
     7E8:	7B14      	ld         al, #+0x4B7B
     7E9:	0110      	ld         ah, #+0x1
     7EA:	FE00      	**prefx    0xFE
     7EB:	929C      	bsr        -0x26E <Nvm_Read:0x57D[p]>
                  sizeof(g_app_data.bonded),
                  NVM_OFFSET_BONDED_FLAG);

        if(g_app_data.bonded)
     7EC:	4B00      	**prefx    0x4B
     7ED:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     7EE:	15F4      	beq        +0x15 <.LECIE0+0x3:0x803[p]>
        {
            /* Bonded Host Typed BD Address will only be stored if bonded flag
             * is set to TRUE. Read last bonded device address.
             */
            Nvm_Read((uint16*)&g_app_data.bonded_bd_addr,
     7EF:	0214      	ld         al, #+0x2
     7F0:	0027      	st         al, @(0x0, y)
     7F1:	4B00      	**prefx    0x4B
     7F2:	7C14      	ld         al, #+0x4B7C
     7F3:	0510      	ld         ah, #+0x5
     7F4:	FE00      	**prefx    0xFE
     7F5:	889C      	bsr        -0x278 <Nvm_Read:0x57D[p]>
                       NVM_OFFSET_BONDED_ADDR);

            /* If device is bonded and bonded address is resolvable then read
             * the bonded device's IRK
             */
            if(GattIsAddressResolvableRandom(&g_app_data.bonded_bd_addr))
     7F6:	4B00      	**prefx    0x4B
     7F7:	7C14      	ld         al, #+0x4B7C
     7F8:	0800      	**prefx    0x8
     7F9:	299C      	bsr        +0x829 <GattIsAddressResolvableRandom:0x1022[p]>
     7FA:	E199      	tst        @0xFFE1 <register al>
     7FB:	08F4      	beq        +0x8 <.LECIE0+0x3:0x803[p]>
            {
                Nvm_Read(g_app_data.irk,
     7FC:	0814      	ld         al, #+0x8
     7FD:	0027      	st         al, @(0x0, y)
     7FE:	4C00      	**prefx    0x4C
     7FF:	8214      	ld         al, #+0x4B82
     800:	0810      	ld         ah, #+0x8
     801:	FD00      	**prefx    0xFD
     802:	7B9C      	bsr        -0x285 <Nvm_Read:0x57D[p]>
        }

        /* Read the diversifier associated with the presently bonded/last
         * bonded device.
         */
        Nvm_Read(&g_app_data.diversifier,
     803:	0714      	ld         al, #+0x7
     804:	0027      	st         al, @(0x0, y)
     805:	4C00      	**prefx    0x4C
     806:	8114      	ld         al, #+0x4B81
     807:	0110      	ld         ah, #+0x1
     808:	FD00      	**prefx    0xFD
     809:	749C      	bsr        -0x28C <Nvm_Read:0x57D[p]>
                 sizeof(g_app_data.diversifier),
                 NVM_OFFSET_SM_DIV);

        /* Read Serial client CCD fron NVM */
        SerialReadDataFromNVM(TRUE,&nvm_offset);
     80A:	0114      	ld         al, #+0x1
     80B:	20E0      	bra        +0x20 <.LEFDE2+0x3:0x82B[p]>
          */
    {

        nvm_start_fresh = TRUE;

        nvm_sanity = NVM_SANITY_MAGIC;
     80C:	AB00      	**prefx    0xAB
     80D:	1914      	ld         al, #-0x54E7
     80E:	0427      	st         al, @(+0x4, y)

        /* Write NVM Sanity word to the NVM */
        Nvm_Write(&nvm_sanity,
     80F:	0014      	ld         al, #+0x0
     810:	0027      	st         al, @(0x0, y)
     811:	E415      	ld         al, @0xFFE4 <register uy>
     812:	0434      	add        al, #+0x4
     813:	0110      	ld         ah, #+0x1
     814:	FD00      	**prefx    0xFD
     815:	5A9C      	bsr        -0x2A6 <Nvm_Write:0x56F[p]>
                  NVM_OFFSET_SANITY_WORD);

        /* The device will not be bonded as it is coming up for the first
         * time
         */
        g_app_data.bonded = FALSE;
     816:	0014      	ld         al, #+0x0
     817:	4B00      	**prefx    0x4B
     818:	7B25      	st         al, @0x4B7B <g_app_data+0x7>

        /* Write bonded status to NVM */
        Nvm_Write((uint16*)&g_app_data.bonded,
     819:	0114      	ld         al, #+0x1
     81A:	0027      	st         al, @(0x0, y)
     81B:	4B00      	**prefx    0x4B
     81C:	7B14      	ld         al, #+0x4B7B
     81D:	0110      	ld         ah, #+0x1
     81E:	FD00      	**prefx    0xFD
     81F:	509C      	bsr        -0x2B0 <Nvm_Write:0x56F[p]>

        /* When the application is coming up for the first time after flashing
         * the image to it, it will not have bonded to any device. So, no LTK
         * will be associated with it. Hence, set the diversifier to 0.
         */
        g_app_data.diversifier = 0;
     820:	0014      	ld         al, #+0x0
     821:	4C00      	**prefx    0x4C
     822:	8125      	st         al, @0x4B81 <g_app_data+0xD>

        /* Write the same to NVM. */
        Nvm_Write(&g_app_data.diversifier,
     823:	0714      	ld         al, #+0x7
     824:	0027      	st         al, @(0x0, y)
     825:	4C00      	**prefx    0x4C
     826:	8114      	ld         al, #+0x4B81
     827:	0110      	ld         ah, #+0x1
     828:	FD00      	**prefx    0xFD
     829:	469C      	bsr        -0x2BA <Nvm_Write:0x56F[p]>
                  sizeof(g_app_data.diversifier),
                  NVM_OFFSET_SM_DIV);

        /* Read Serial client CCD fron NVM */
        SerialReadDataFromNVM(FALSE,&nvm_offset);
     82A:	0014      	ld         al, #+0x0
     82B:	E411      	ld         ah, @0xFFE4 <register uy>
     82C:	0330      	add        ah, #+0x3
     82D:	0A00      	**prefx    0xA
     82E:	ED9C      	bsr        +0x9ED <SerialReadDataFromNVM:0x121B[p]>

    /* Read Battery service data from NVM if the devices are bonded and
     * update the offset with the number of words of NVM required by
     * this service
     */
    BatteryReadDataFromNVM(&nvm_offset);
     82F:	E415      	ld         al, @0xFFE4 <register uy>
     830:	0334      	add        al, #+0x3
     831:	FC00      	**prefx    0xFC
     832:	669C      	bsr        -0x39A <BatteryReadDataFromNVM:0x498[p]>
     * offset being used for storing the data.
     */

    /* Read GATT service data from NVM */    
#ifdef ENABLE_OTA
    GattReadDataFromNVM(&nvm_offset);
     833:	E415      	ld         al, @0xFFE4 <register uy>
     834:	0334      	add        al, #+0x3
     835:	0D00      	**prefx    0xD
     836:	A19C      	bsr        +0xCA1 <GattReadDataFromNVM:0x14D7[p]>
    readPersistentStore();

    /* Tell Security Manager module what value it needs to initialise its
     * diversifier to.
     */
    SMInit(g_app_data.diversifier);
     837:	4C00      	**prefx    0x4C
     838:	8115      	ld         al, @0x4B81 <g_app_data+0xD>
     839:	7F00      	**prefx    0x7F
     83A:	2A9C      	bsr        +0x7F2A <SMInit:0x8764[p]>

    /* Initialise hardware data */
    HwDataInit();
     83B:	FE00      	**prefx    0xFE
     83C:	A99C      	bsr        -0x257 <HwDataInit:0x5E5[p]>

    /* Initialise application data structure */
    appDataInit();
     83D:	FF00      	**prefx    0xFF
     83E:	1E9C      	bsr        -0xE2 <appDataInit:0x75C[p]>

    /* Tell GATT about our database. We will get a GATT_ADD_DB_CFM event when
     * this has completed.
     */
    p_gatt_db = GattGetDatabase(&gatt_db_length);
     83F:	E415      	ld         al, @0xFFE4 <register uy>
     840:	0234      	add        al, #+0x2
     841:	FC00      	**prefx    0xFC
     842:	2E9C      	bsr        -0x3D2 <GattGetDatabase:0x470[p]>
     843:	E111      	ld         ah, @0xFFE1 <register al>
    GattAddDatabaseReq(gatt_db_length, p_gatt_db);
     844:	0217      	ld         al, @(+0x2, y)
     845:	0100      	**prefx    0x1
     846:	A900      	**prefx    0xA9
     847:	979C      	bsr        +0xA897 <GattAddDatabaseReq:0xB0DE[p]>
    
    /*DebugInit(1, NULL, NULL);
    DebugWriteString("Hello \n\r");*/
    /*PioFastPwmConfig(PIO_BIT_MASK(IR_LED) | PIO_BIT_MASK(WHITE_LED));
    PioFastPwmEnable(TRUE);*/
    VFPWMConfig(1,1,2,TRUE);
     848:	0214      	ld         al, #+0x2
     849:	0027      	st         al, @(0x0, y)
     84A:	0114      	ld         al, #+0x1
     84B:	0127      	st         al, @(+0x1, y)
     84C:	0110      	ld         ah, #+0x1
     84D:	0E00      	**prefx    0xE
     84E:	C29C      	bsr        +0xDC2 <VFPWMConfig:0x1610[p]>
    PioSetModes(PIO_BIT_MASK(WHITE_LED)|PIO_BIT_MASK(IR_LED),pio_mode_pio_controller);
     84F:	1014      	ld         al, #+0x10
     850:	0027      	st         al, @(0x0, y)
     851:	0010      	ld         ah, #+0x0
     852:	0600      	**prefx    0x6
     853:	0014      	ld         al, #+0x600
     854:	0100      	**prefx    0x1
     855:	EE00      	**prefx    0xEE
     856:	119C      	bsr        +0xEE11 <PioSetModes:0xF667[p]>
    
    SleepModeChange(sleep_mode_never );
     857:	0014      	ld         al, #+0x0
     858:	0100      	**prefx    0x1
     859:	D900      	**prefx    0xD9
     85A:	C19C      	bsr        +0xD8C1 <SleepModeChange:0xE11B[p]>
    /*VFPWMStart(0xFF,0x00);*/
    /*VFPWMStart(0x00,0xFF);*/
    
    
    mode = MODE1;
     85B:	3114      	ld         al, #+0x31
     85C:	4B00      	**prefx    0x4B
     85D:	7025      	st         al, @0x4B70 <mode>
    
/*    WLED_PWM(0xFF);
    IR_PWM(0xFF);*/
 
    PioSetDir(ADP, PIO_DIRECTION_INPUT);
     85E:	0714      	ld         al, #+0x7
     85F:	0010      	ld         ah, #+0x0
     860:	0100      	**prefx    0x1
     861:	EF00      	**prefx    0xEF
     862:	129C      	bsr        +0xEF12 <PioSetDir:0xF774[p]>
    PioSetMode(ADP_PIO_MASK, pio_mode_user);
     863:	0100      	**prefx    0x1
     864:	8014      	ld         al, #+0x80
     865:	0010      	ld         ah, #+0x0
     866:	1B00      	**prefx    0x1B
     867:	BD9C      	bsr        +0x1ABD <PioSetMode:0x2324[p]>
    PioSetPullModes((ADP_PIO_MASK), pio_mode_weak_pull_up);
     868:	0314      	ld         al, #+0x3
     869:	0027      	st         al, @(0x0, y)
     86A:	0010      	ld         ah, #+0x0
     86B:	7D34      	add        al, #+0x7D
     86C:	0100      	**prefx    0x1
     86D:	EE00      	**prefx    0xEE
     86E:	9E9C      	bsr        +0xED9E <PioSetPullModes:0xF60C[p]>
    PioSetEventMask((ADP_PIO_MASK), pio_event_mode_both);
     86F:	0314      	ld         al, #+0x3
     870:	0027      	st         al, @(0x0, y)
     871:	0010      	ld         ah, #+0x0
     872:	7D34      	add        al, #+0x7D
     873:	0100      	**prefx    0x1
     874:	EF00      	**prefx    0xEF
     875:	A49C      	bsr        +0xEEA4 <PioSetEventMask:0xF719[p]>
    
    
    PioSetDir(CHG, PIO_DIRECTION_INPUT);
     876:	0814      	ld         al, #+0x8
     877:	0010      	ld         ah, #+0x0
     878:	0100      	**prefx    0x1
     879:	EF00      	**prefx    0xEF
     87A:	FA9C      	bsr        +0xEEFA <PioSetDir:0xF774[p]>
    PioSetMode(CHG_PIO_MASK, pio_mode_user);
     87B:	0100      	**prefx    0x1
     87C:	0014      	ld         al, #+0x100
     87D:	0010      	ld         ah, #+0x0
     87E:	1B00      	**prefx    0x1B
     87F:	A59C      	bsr        +0x1AA5 <PioSetMode:0x2324[p]>
    PioSetPullModes((CHG_PIO_MASK), pio_mode_weak_pull_up);
     880:	0314      	ld         al, #+0x3
     881:	0027      	st         al, @(0x0, y)
     882:	0010      	ld         ah, #+0x0
     883:	0100      	**prefx    0x1
     884:	0014      	ld         al, #+0x100
     885:	0100      	**prefx    0x1
     886:	EE00      	**prefx    0xEE
     887:	859C      	bsr        +0xED85 <PioSetPullModes:0xF60C[p]>
    PioSetEventMask((CHG_PIO_MASK), pio_event_mode_both);
     888:	0314      	ld         al, #+0x3
     889:	0027      	st         al, @(0x0, y)
     88A:	0010      	ld         ah, #+0x0
     88B:	0100      	**prefx    0x1
     88C:	0014      	ld         al, #+0x100
     88D:	0100      	**prefx    0x1
     88E:	EF00      	**prefx    0xEF
     88F:	8A9C      	bsr        +0xEE8A <PioSetEventMask:0xF719[p]>
    

    /* Pull up the PIO */
    
    
    if(I2CAcquire())
     890:	0E00      	**prefx    0xE
     891:	B49C      	bsr        +0xDB4 <I2CAcquire:0x1645[p]>
     892:	E199      	tst        @0xFFE1 <register al>
     893:	0DF4      	beq        +0xD <.LEFDE12:0x8A0[p]>
    {
      I2CcommsInit();
     894:	0E00      	**prefx    0xE
     895:	EA9C      	bsr        +0xDEA <I2CcommsInit:0x167F[p]>
      I2C_IO_Write(0x00);
     896:	0014      	ld         al, #+0x0
     897:	0E00      	**prefx    0xE
     898:	B69C      	bsr        +0xDB6 <I2C_IO_Write:0x164E[p]>
      I2CRelease(); 
     899:	0E00      	**prefx    0xE
     89A:	1D9C      	bsr        +0xE1D <I2CRelease:0x16B7[p]>
      TimeDelayUSec(2* MILLISECOND);
     89B:	0800      	**prefx    0x8
     89C:	D014      	ld         al, #+0x7D0
     89D:	0100      	**prefx    0x1
     89E:	AB00      	**prefx    0xAB
     89F:	BD9C      	bsr        +0xAABD <TimeDelayUSec:0xB35C[p]>
    }
    tim_tid = TimerCreate(2*SECOND,TRUE,handler);
     8A0:	0114      	ld         al, #+0x1
     8A1:	0027      	st         al, @(0x0, y)
     8A2:	0900      	**prefx    0x9
     8A3:	2F14      	ld         al, #+0x92F
     8A4:	0127      	st         al, @(+0x1, y)
     8A5:	1E10      	ld         ah, #+0x1E
     8A6:	8500      	**prefx    0x85
     8A7:	8014      	ld         al, #-0x7B80
     8A8:	0100      	**prefx    0x1
     8A9:	D800      	**prefx    0xD8
     8AA:	519C      	bsr        +0xD851 <TimerCreate:0xE0FB[p]>
     8AB:	4B00      	**prefx    0x4B
     8AC:	6F25      	st         al, @0x4B6F <tim_tid>
       
}
     8AD:	060F      	leave      #+0x6

0x000008AE <Led_handler>:
    /* Return length of ASCII string sent to UART */
    return (BUFFER_SIZE - 1) - i;
}

static void Led_handler(timer_id const id)
{
     8AE:	030B      	enter      #+0x3
    if(F2)
     8AF:	4B00      	**prefx    0x4B
     8B0:	EC99      	tst        @0x4AEC <F2>
     8B1:	70F4      	beq        +0x70 <.LEFDE4+0x1:0x921[p]>
    {
        if(!F1)
     8B2:	4B00      	**prefx    0x4B
     8B3:	EB99      	tst        @0x4AEB <F1>
     8B4:	36F0      	bne        +0x36 <.LASFDE0+0x6:0x8EA[p]>
        {
            F1=1;
     8B5:	0114      	ld         al, #+0x1
     8B6:	4B00      	**prefx    0x4B
     8B7:	EB25      	st         al, @0x4AEB <F1>
            PioSetMode(RLED, pio_mode_user);         
     8B8:	0514      	ld         al, #+0x5
     8B9:	0010      	ld         ah, #+0x0
     8BA:	1A00      	**prefx    0x1A
     8BB:	699C      	bsr        +0x1A69 <PioSetMode:0x2324[p]>
            PioEnablePWM(2, FALSE);
     8BC:	0214      	ld         al, #+0x2
     8BD:	0010      	ld         ah, #+0x0
     8BE:	0100      	**prefx    0x1
     8BF:	EE00      	**prefx    0xEE
     8C0:	089C      	bsr        +0xEE08 <PioEnablePWM:0xF6C8[p]>
            PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     8C1:	0514      	ld         al, #+0x5
     8C2:	0110      	ld         ah, #+0x1
     8C3:	0100      	**prefx    0x1
     8C4:	EF00      	**prefx    0xEF
     8C5:	AF9C      	bsr        +0xEEAF <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<RLED), pio_mode_strong_pull_up);
     8C6:	0714      	ld         al, #+0x7
     8C7:	0027      	st         al, @(0x0, y)
     8C8:	0010      	ld         ah, #+0x0
     8C9:	2014      	ld         al, #+0x20
     8CA:	0100      	**prefx    0x1
     8CB:	ED00      	**prefx    0xED
     8CC:	409C      	bsr        +0xED40 <PioSetPullModes:0xF60C[p]>
            PioSet(RLED,FALSE);             
     8CD:	0514      	ld         al, #+0x5
     8CE:	0010      	ld         ah, #+0x0
     8CF:	0100      	**prefx    0x1
     8D0:	ED00      	**prefx    0xED
     8D1:	DB9C      	bsr        +0xECDB <PioSet:0xF5AC[p]>
                 
                 
            PioSetMode(GLED, pio_mode_user);         
     8D2:	0614      	ld         al, #+0x6
     8D3:	0010      	ld         ah, #+0x0
     8D4:	1A00      	**prefx    0x1A
     8D5:	4F9C      	bsr        +0x1A4F <PioSetMode:0x2324[p]>
            PioEnablePWM(3, FALSE);
     8D6:	0314      	ld         al, #+0x3
     8D7:	0010      	ld         ah, #+0x0
     8D8:	0100      	**prefx    0x1
     8D9:	EE00      	**prefx    0xEE
     8DA:	EE9C      	bsr        +0xEDEE <PioEnablePWM:0xF6C8[p]>
            PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     8DB:	0614      	ld         al, #+0x6
     8DC:	0110      	ld         ah, #+0x1
     8DD:	0100      	**prefx    0x1
     8DE:	EF00      	**prefx    0xEF
     8DF:	959C      	bsr        +0xEE95 <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<GLED), pio_mode_strong_pull_up);
     8E0:	0714      	ld         al, #+0x7
     8E1:	0027      	st         al, @(0x0, y)
     8E2:	0010      	ld         ah, #+0x0
     8E3:	4014      	ld         al, #+0x40
     8E4:	0100      	**prefx    0x1
     8E5:	ED00      	**prefx    0xED
     8E6:	269C      	bsr        +0xED26 <PioSetPullModes:0xF60C[p]>
            PioSet(GLED,TRUE); 
     8E7:	0614      	ld         al, #+0x6
     8E8:	0110      	ld         ah, #+0x1
     8E9:	35E0      	bra        +0x35 <.LASFDE4+0x12:0x91E[p]>
            
        }
        else if(F1)
        {
            F1=0;
     8EA:	0014      	ld         al, #+0x0
     8EB:	4B00      	**prefx    0x4B
     8EC:	EB25      	st         al, @0x4AEB <F1>
            
            PioSetMode(RLED, pio_mode_user);         
     8ED:	0514      	ld         al, #+0x5
     8EE:	0010      	ld         ah, #+0x0
     8EF:	1A00      	**prefx    0x1A
     8F0:	349C      	bsr        +0x1A34 <PioSetMode:0x2324[p]>
            PioEnablePWM(2, FALSE);
     8F1:	0214      	ld         al, #+0x2
     8F2:	0010      	ld         ah, #+0x0
     8F3:	0100      	**prefx    0x1
     8F4:	EE00      	**prefx    0xEE
     8F5:	D39C      	bsr        +0xEDD3 <PioEnablePWM:0xF6C8[p]>
            PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     8F6:	0514      	ld         al, #+0x5
     8F7:	0110      	ld         ah, #+0x1
     8F8:	0100      	**prefx    0x1
     8F9:	EE00      	**prefx    0xEE
     8FA:	7A9C      	bsr        +0xEE7A <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<RLED), pio_mode_strong_pull_up);
     8FB:	0714      	ld         al, #+0x7
     8FC:	0027      	st         al, @(0x0, y)
     8FD:	0010      	ld         ah, #+0x0
     8FE:	2014      	ld         al, #+0x20
     8FF:	0100      	**prefx    0x1
     900:	ED00      	**prefx    0xED
     901:	0B9C      	bsr        +0xED0B <PioSetPullModes:0xF60C[p]>
            PioSet(RLED,TRUE);             
     902:	0514      	ld         al, #+0x5
     903:	0110      	ld         ah, #+0x1
     904:	0100      	**prefx    0x1
     905:	ED00      	**prefx    0xED
     906:	A69C      	bsr        +0xECA6 <PioSet:0xF5AC[p]>
                 
                 
            PioSetMode(GLED, pio_mode_user);         
     907:	0614      	ld         al, #+0x6
     908:	0010      	ld         ah, #+0x0
     909:	1A00      	**prefx    0x1A
     90A:	1A9C      	bsr        +0x1A1A <PioSetMode:0x2324[p]>
            PioEnablePWM(3, FALSE);
     90B:	0314      	ld         al, #+0x3
     90C:	0010      	ld         ah, #+0x0
     90D:	0100      	**prefx    0x1
     90E:	EE00      	**prefx    0xEE
     90F:	B99C      	bsr        +0xEDB9 <PioEnablePWM:0xF6C8[p]>
            PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     910:	0614      	ld         al, #+0x6
     911:	0110      	ld         ah, #+0x1
     912:	0100      	**prefx    0x1
     913:	EE00      	**prefx    0xEE
     914:	609C      	bsr        +0xEE60 <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<GLED), pio_mode_strong_pull_up);
     915:	0714      	ld         al, #+0x7
     916:	0027      	st         al, @(0x0, y)
     917:	0010      	ld         ah, #+0x0
     918:	4014      	ld         al, #+0x40
     919:	0100      	**prefx    0x1
     91A:	ED00      	**prefx    0xED
     91B:	F19C      	bsr        +0xECF1 <PioSetPullModes:0xF60C[p]>
            PioSet(GLED,FALSE); 
     91C:	0614      	ld         al, #+0x6
     91D:	0010      	ld         ah, #+0x0
     91E:	0100      	**prefx    0x1
     91F:	ED00      	**prefx    0xED
     920:	8C9C      	bsr        +0xEC8C <PioSet:0xF5AC[p]>
        }
    }
    
    tim_tid1 = TimerCreate(250*MILLISECOND,TRUE,Led_handler);
     921:	0114      	ld         al, #+0x1
     922:	0027      	st         al, @(0x0, y)
     923:	0900      	**prefx    0x9
     924:	AE14      	ld         al, #+0x8AE
     925:	0127      	st         al, @(+0x1, y)
     926:	0310      	ld         ah, #+0x3
     927:	D100      	**prefx    0xD1
     928:	9014      	ld         al, #-0x2F70
     929:	0100      	**prefx    0x1
     92A:	D800      	**prefx    0xD8
     92B:	D09C      	bsr        +0xD7D0 <TimerCreate:0xE0FB[p]>
     92C:	4B00      	**prefx    0x4B
     92D:	7325      	st         al, @0x4B73 <tim_tid1>
}
     92E:	030F      	leave      #+0x3

0x0000092F <handler>:



static void handler(timer_id const id)
{
     92F:	090B      	enter      #+0x9
     const uint16 mvs = AioRead(1);
     930:	0114      	ld         al, #+0x1
     931:	1A00      	**prefx    0x1A
     932:	8E9C      	bsr        +0x198E <AioRead:0x22C0[p]>
     933:	0727      	st         al, @(+0x7, y)
     /*DebugWriteString("\r\n Analoge Voltage = ");*/
     writeASCIICodedNumber(mvs);
     934:	E119      	ld         x, @0xFFE1 <register al>
     935:	0010      	ld         ah, #+0x0
    {
        /* Convert the unit value into ASCII and store in the buffer */
        buffer[--i] = (remainder % 10) + '0';
        
        /* Shift the value right one decimal */
        remainder /= 10;
     936:	0014      	ld         al, #+0x0
     937:	0027      	st         al, @(0x0, y)
     938:	0A14      	ld         al, #+0xA
     939:	0127      	st         al, @(+0x1, y)
     93A:	E315      	ld         al, @0xFFE3 <register uxl>
     93B:	0100      	**prefx    0x1
     93C:	AB00      	**prefx    0xAB
     93D:	B49C      	bsr        +0xAAB4 <__udivhi3:0xB3F1[p]>
     93E:	E119      	ld         x, @0xFFE1 <register al>
    } while (remainder > 0);
     93F:	E015      	ld         al, @0xFFE0 <register ah>
     940:	E3B5      	or         al, @0xFFE3 <register uxl>
     941:	F5F0      	bne        -0xB <handler+0x7:0x936[p]>
     /*DebugWriteString("\r\n Analoge Voltage = ");*/
     writeASCIICodedNumber(mvs);
     /*DebugWriteString("mV\n\r");*/
     	

     if(PioGet(ADP))
     942:	0714      	ld         al, #+0x7
     943:	0100      	**prefx    0x1
     944:	ED00      	**prefx    0xED
     945:	A99C      	bsr        +0xECA9 <PioGet:0xF5EE[p]>
     946:	E199      	tst        @0xFFE1 <register al>
     947:	03F4      	beq        +0x3 <.LECIE0+0x2:0x94A[p]>
     {
         Adp =0;
     948:	0014      	ld         al, #+0x0
     949:	02E0      	bra        +0x2 <.LECIE0+0x3:0x94B[p]>
     }
     else
     {
         Adp=1;
     94A:	0114      	ld         al, #+0x1
     94B:	4C00      	**prefx    0x4C
     94C:	9025      	st         al, @0x4B90 <Adp>
    
     }
     if(!Adp)
     94D:	0200      	**prefx    0x2
     94E:	B6F0      	bne        +0x1B6 <L0+0xA9:0xB04[p]>
     {
         
          F1=0;
     94F:	0014      	ld         al, #+0x0
     950:	4B00      	**prefx    0x4B
     951:	EB25      	st         al, @0x4AEB <F1>
          F2=0;
     952:	4B00      	**prefx    0x4B
     953:	EC25      	st         al, @0x4AEC <F2>
          TimerDelete(tim_tid1);	
     954:	4B00      	**prefx    0x4B
     955:	7315      	ld         al, @0x4B73 <tim_tid1>
     956:	0100      	**prefx    0x1
     957:	D700      	**prefx    0xD7
     958:	E79C      	bsr        +0xD6E7 <TimerDelete:0xE03F[p]>
          tim_tid1 = TIMER_INVALID;
     959:	0014      	ld         al, #+0x0
     95A:	4B00      	**prefx    0x4B
     95B:	7325      	st         al, @0x4B73 <tim_tid1>
          

        
         
         if ((mvs>1245)&&(!Flag0)) /*>7.6*/
     95C:	0717      	ld         al, @(+0x7, y)
     95D:	0500      	**prefx    0x5
     95E:	DD84      	cmp        al, #+0x4DD
     95F:	042C      	bcz        +0x4 <.LASFDE2+0x7:0x963[p]>
     960:	4B00      	**prefx    0x4B
     961:	E499      	tst        @0x4AE4 <Flag0>
     962:	3FF4      	beq        +0x3F <.LEFDE6+0x1:0x9A1[p]>
         {
             
         }                
         else if((mvs<=1240) &&(mvs >=1183)&&(!Flag0))  /* 7.6v - 7.2V*/
     963:	0717      	ld         al, @(+0x7, y)
     964:	FB00      	**prefx    0xFB
     965:	6134      	add        al, #-0x49F
     966:	3A84      	cmp        al, #+0x3A
     967:	09F8      	bcc        +0x9 <.LEFDE2:0x970[p]>
     968:	4B00      	**prefx    0x4B
     969:	E499      	tst        @0x4AE4 <Flag0>
     96A:	06F0      	bne        +0x6 <.LEFDE2:0x970[p]>
         {
             Flag0=1;
     96B:	0114      	ld         al, #+0x1
     96C:	4B00      	**prefx    0x4B
     96D:	E425      	st         al, @0x4AE4 <Flag0>
             Flag1=0; 
     96E:	0014      	ld         al, #+0x0
     96F:	1DE0      	bra        +0x1D <.LASFDE6:0x98C[p]>
             Flag2=0;  
         }
         else if((mvs<=1175) && (mvs >=1140)&&(!Flag1))  /* 7.2v - 6.9V*/
     970:	0717      	ld         al, @(+0x7, y)
     971:	FC00      	**prefx    0xFC
     972:	8C34      	add        al, #-0x474
     973:	2484      	cmp        al, #+0x24
     974:	0DF8      	bcc        +0xD <.LASFDE4+0xD:0x981[p]>
     975:	4B00      	**prefx    0x4B
     976:	E599      	tst        @0x4AE5 <Flag1>
     977:	0AF0      	bne        +0xA <.LASFDE4+0xD:0x981[p]>
         {
            Flag0=1;
     978:	0114      	ld         al, #+0x1
     979:	4B00      	**prefx    0x4B
     97A:	E425      	st         al, @0x4AE4 <Flag0>
            Flag1=1;
     97B:	4B00      	**prefx    0x4B
     97C:	E525      	st         al, @0x4AE5 <Flag1>
            Flag2=0;
     97D:	0014      	ld         al, #+0x0
     97E:	4B00      	**prefx    0x4B
     97F:	E625      	st         al, @0x4AE6 <Flag2>
     980:	21E0      	bra        +0x21 <.LEFDE6+0x1:0x9A1[p]>
         }
         else if((mvs<=1132) &&(mvs >=1120)&&!(Flag2))  /* 6.9v - 6.8V*/
     981:	0717      	ld         al, @(+0x7, y)
     982:	FC00      	**prefx    0xFC
     983:	A034      	add        al, #-0x460
     984:	0D84      	cmp        al, #+0xD
     985:	0AF8      	bcc        +0xA <.LASFDE6+0x3:0x98F[p]>
     986:	4B00      	**prefx    0x4B
     987:	E699      	tst        @0x4AE6 <Flag2>
     988:	07F0      	bne        +0x7 <.LASFDE6+0x3:0x98F[p]>
        { 
             Flag0=1;
     989:	0114      	ld         al, #+0x1
     98A:	4B00      	**prefx    0x4B
     98B:	E425      	st         al, @0x4AE4 <Flag0>
             Flag1=1;
     98C:	4B00      	**prefx    0x4B
     98D:	E525      	st         al, @0x4AE5 <Flag1>
     98E:	F0E0      	bra        -0x10 <.LASFDE4+0xA:0x97E[p]>
             Flag2=1;
             /*Flag3=1;*/
        }
         
         /*if ((mvs<1118)&&(mvs>=1108)&&!(Flag2))  */  /* < 6.8V*/
        else if ((mvs<=1110)&&!(Flag4)) 
     98F:	0717      	ld         al, @(+0x7, y)
     990:	0400      	**prefx    0x4
     991:	5784      	cmp        al, #+0x457
     992:	0FF8      	bcc        +0xF <.LEFDE6+0x1:0x9A1[p]>
     993:	4B00      	**prefx    0x4B
     994:	E899      	tst        @0x4AE8 <Flag4>
     995:	0CF0      	bne        +0xC <.LEFDE6+0x1:0x9A1[p]>
         { 
            Flag4=1;
     996:	0114      	ld         al, #+0x1
     997:	4B00      	**prefx    0x4B
     998:	E825      	st         al, @0x4AE8 <Flag4>
            Flag1=1;
     999:	4B00      	**prefx    0x4B
     99A:	E525      	st         al, @0x4AE5 <Flag1>
            Flag2=1;
     99B:	4B00      	**prefx    0x4B
     99C:	E625      	st         al, @0x4AE6 <Flag2>
            Flag0=1;
     99D:	4B00      	**prefx    0x4B
     99E:	E425      	st         al, @0x4AE4 <Flag0>
            Flag3=1;
     99F:	4B00      	**prefx    0x4B
     9A0:	E725      	st         al, @0x4AE7 <Flag3>
         }*/
        
       
          
        
          if(!(Flag0)&&!(Flag1)&&!(Flag2)) 
     9A1:	4B00      	**prefx    0x4B
     9A2:	E499      	tst        @0x4AE4 <Flag0>
     9A3:	3AF0      	bne        +0x3A <.LASFDE12+0x9:0x9DD[p]>
     9A4:	4B00      	**prefx    0x4B
     9A5:	E599      	tst        @0x4AE5 <Flag1>
     9A6:	0100      	**prefx    0x1
     9A7:	51F0      	bne        +0x151 <L0+0x9D:0xAF8[p]>
     9A8:	4B00      	**prefx    0x4B
     9A9:	E699      	tst        @0x4AE6 <Flag2>
     9AA:	0100      	**prefx    0x1
     9AB:	4DF0      	bne        +0x14D <L0+0x9D:0xAF8[p]>
           {
             PioSetMode(RLED, pio_mode_user);         
     9AC:	0514      	ld         al, #+0x5
     9AD:	0010      	ld         ah, #+0x0
     9AE:	1900      	**prefx    0x19
     9AF:	759C      	bsr        +0x1975 <PioSetMode:0x2324[p]>
             PioEnablePWM(2, FALSE);
     9B0:	0214      	ld         al, #+0x2
     9B1:	0010      	ld         ah, #+0x0
     9B2:	0100      	**prefx    0x1
     9B3:	ED00      	**prefx    0xED
     9B4:	149C      	bsr        +0xED14 <PioEnablePWM:0xF6C8[p]>
             PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     9B5:	0514      	ld         al, #+0x5
     9B6:	0110      	ld         ah, #+0x1
     9B7:	0100      	**prefx    0x1
     9B8:	EE00      	**prefx    0xEE
     9B9:	BB9C      	bsr        +0xEDBB <PioSetDir:0xF774[p]>
             PioSetPullModes((1UL<<RLED), pio_mode_strong_pull_up);
     9BA:	0714      	ld         al, #+0x7
     9BB:	0027      	st         al, @(0x0, y)
     9BC:	0010      	ld         ah, #+0x0
     9BD:	2014      	ld         al, #+0x20
     9BE:	0100      	**prefx    0x1
     9BF:	EC00      	**prefx    0xEC
     9C0:	4C9C      	bsr        +0xEC4C <PioSetPullModes:0xF60C[p]>
             PioSet(RLED,FALSE);             
     9C1:	0514      	ld         al, #+0x5
     9C2:	0010      	ld         ah, #+0x0
     9C3:	0100      	**prefx    0x1
     9C4:	EC00      	**prefx    0xEC
     9C5:	E79C      	bsr        +0xEBE7 <PioSet:0xF5AC[p]>
             
             
            PioSetMode(GLED, pio_mode_user);         
     9C6:	0614      	ld         al, #+0x6
     9C7:	0010      	ld         ah, #+0x0
     9C8:	1900      	**prefx    0x19
     9C9:	5B9C      	bsr        +0x195B <PioSetMode:0x2324[p]>
            PioEnablePWM(3, FALSE);
     9CA:	0314      	ld         al, #+0x3
     9CB:	0010      	ld         ah, #+0x0
     9CC:	0100      	**prefx    0x1
     9CD:	ED00      	**prefx    0xED
     9CE:	FA9C      	bsr        +0xECFA <PioEnablePWM:0xF6C8[p]>
            PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     9CF:	0614      	ld         al, #+0x6
     9D0:	0110      	ld         ah, #+0x1
     9D1:	0100      	**prefx    0x1
     9D2:	EE00      	**prefx    0xEE
     9D3:	A19C      	bsr        +0xEDA1 <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<GLED), pio_mode_strong_pull_up);
     9D4:	0714      	ld         al, #+0x7
     9D5:	0027      	st         al, @(0x0, y)
     9D6:	0010      	ld         ah, #+0x0
     9D7:	4014      	ld         al, #+0x40
     9D8:	0100      	**prefx    0x1
     9D9:	EC00      	**prefx    0xEC
     9DA:	329C      	bsr        +0xEC32 <PioSetPullModes:0xF60C[p]>
            PioSet(GLED,TRUE); 
     9DB:	0614      	ld         al, #+0x6
     9DC:	73E0      	bra        +0x73 <.LEFDE12+0x6F:0xA4F[p]>
            }
           else if((Flag0)&&!(Flag1)&&!(Flag2))
     9DD:	4B00      	**prefx    0x4B
     9DE:	E599      	tst        @0x4AE5 <Flag1>
     9DF:	3DF0      	bne        +0x3D <.LEFDE12+0x3C:0xA1C[p]>
     9E0:	4B00      	**prefx    0x4B
     9E1:	E699      	tst        @0x4AE6 <Flag2>
     9E2:	0100      	**prefx    0x1
     9E3:	15F0      	bne        +0x115 <L0+0x9D:0xAF8[p]>
           {
            
                PioSetMode(RLED, pio_mode_user);         
     9E4:	0514      	ld         al, #+0x5
     9E5:	0010      	ld         ah, #+0x0
     9E6:	1900      	**prefx    0x19
     9E7:	3D9C      	bsr        +0x193D <PioSetMode:0x2324[p]>
                PioEnablePWM(2, FALSE);
     9E8:	0214      	ld         al, #+0x2
     9E9:	0010      	ld         ah, #+0x0
     9EA:	0100      	**prefx    0x1
     9EB:	ED00      	**prefx    0xED
     9EC:	DC9C      	bsr        +0xECDC <PioEnablePWM:0xF6C8[p]>
                PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     9ED:	0514      	ld         al, #+0x5
     9EE:	0110      	ld         ah, #+0x1
     9EF:	0100      	**prefx    0x1
     9F0:	EE00      	**prefx    0xEE
     9F1:	839C      	bsr        +0xED83 <PioSetDir:0xF774[p]>
                PioSetPullModes((1UL<<RLED), pio_mode_strong_pull_up);
     9F2:	0714      	ld         al, #+0x7
     9F3:	0027      	st         al, @(0x0, y)
     9F4:	0010      	ld         ah, #+0x0
     9F5:	2014      	ld         al, #+0x20
     9F6:	0100      	**prefx    0x1
     9F7:	EC00      	**prefx    0xEC
     9F8:	149C      	bsr        +0xEC14 <PioSetPullModes:0xF60C[p]>
                PioSet(RLED,FALSE);             
     9F9:	0514      	ld         al, #+0x5
     9FA:	0010      	ld         ah, #+0x0
     9FB:	0100      	**prefx    0x1
     9FC:	EC00      	**prefx    0xEC
     9FD:	AF9C      	bsr        +0xEBAF <PioSet:0xF5AC[p]>
             
             
                PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     9FE:	0614      	ld         al, #+0x6
     9FF:	0110      	ld         ah, #+0x1
     A00:	0100      	**prefx    0x1
     A01:	ED00      	**prefx    0xED
     A02:	729C      	bsr        +0xED72 <PioSetDir:0xF774[p]>
                PioSetMode(GLED, pio_mode_pwm3);
     A03:	0614      	ld         al, #+0x6
     A04:	0710      	ld         ah, #+0x7
     A05:	1900      	**prefx    0x19
     A06:	1E9C      	bsr        +0x191E <PioSetMode:0x2324[p]>
                PioEnablePWM(3, TRUE);
     A07:	0314      	ld         al, #+0x3
     A08:	0110      	ld         ah, #+0x1
     A09:	0100      	**prefx    0x1
     A0A:	ED00      	**prefx    0xED
     A0B:	BD9C      	bsr        +0xECBD <PioEnablePWM:0xF6C8[p]>
                PioConfigPWM(3, pio_pwm_mode_push_pull,
     A0C:	0014      	ld         al, #+0x0
     A0D:	0027      	st         al, @(0x0, y)
     A0E:	2114      	ld         al, #+0x21
     A0F:	0127      	st         al, @(+0x1, y)
     A10:	0A14      	ld         al, #+0xA
     A11:	0227      	st         al, @(+0x2, y)
     A12:	2114      	ld         al, #+0x21
     A13:	0327      	st         al, @(+0x3, y)
     A14:	0014      	ld         al, #+0x0
     A15:	0427      	st         al, @(+0x4, y)
     A16:	0A14      	ld         al, #+0xA
     A17:	0527      	st         al, @(+0x5, y)
     A18:	2114      	ld         al, #+0x21
     A19:	0627      	st         al, @(+0x6, y)
     A1A:	0314      	ld         al, #+0x3
     A1B:	74E0      	bra        +0x74 <L0+0x34:0xA8F[p]>
                 0,33, 10,33,0, 10,33);  
            }   
           else if((Flag0)&&(Flag1)&&!(Flag2))
     A1C:	4B00      	**prefx    0x4B
     A1D:	E699      	tst        @0x4AE6 <Flag2>
     A1E:	37F0      	bne        +0x37 <.LEFDE12+0x75:0xA55[p]>
           {
               PioSetMode(GLED, pio_mode_user);         
     A1F:	0614      	ld         al, #+0x6
     A20:	0010      	ld         ah, #+0x0
     A21:	1900      	**prefx    0x19
     A22:	029C      	bsr        +0x1902 <PioSetMode:0x2324[p]>
               PioEnablePWM(3, FALSE);
     A23:	0314      	ld         al, #+0x3
     A24:	0010      	ld         ah, #+0x0
     A25:	0100      	**prefx    0x1
     A26:	ED00      	**prefx    0xED
     A27:	A19C      	bsr        +0xECA1 <PioEnablePWM:0xF6C8[p]>
               PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     A28:	0614      	ld         al, #+0x6
     A29:	0110      	ld         ah, #+0x1
     A2A:	0100      	**prefx    0x1
     A2B:	ED00      	**prefx    0xED
     A2C:	489C      	bsr        +0xED48 <PioSetDir:0xF774[p]>
               PioSetPullModes((1UL<<GLED), pio_mode_strong_pull_up);
     A2D:	0714      	ld         al, #+0x7
     A2E:	0027      	st         al, @(0x0, y)
     A2F:	0010      	ld         ah, #+0x0
     A30:	4014      	ld         al, #+0x40
     A31:	0100      	**prefx    0x1
     A32:	EC00      	**prefx    0xEC
     A33:	D99C      	bsr        +0xEBD9 <PioSetPullModes:0xF60C[p]>
               PioSet(GLED,FALSE);            
     A34:	0614      	ld         al, #+0x6
     A35:	0010      	ld         ah, #+0x0
     A36:	0100      	**prefx    0x1
     A37:	EB00      	**prefx    0xEB
     A38:	749C      	bsr        +0xEB74 <PioSet:0xF5AC[p]>
             
             
               PioSetMode(RLED, pio_mode_user);         
     A39:	0514      	ld         al, #+0x5
     A3A:	0010      	ld         ah, #+0x0
     A3B:	1900      	**prefx    0x19
     A3C:	E89C      	bsr        +0x18E8 <PioSetMode:0x2324[p]>
               PioEnablePWM(2, FALSE);
     A3D:	0214      	ld         al, #+0x2
     A3E:	0010      	ld         ah, #+0x0
     A3F:	0100      	**prefx    0x1
     A40:	ED00      	**prefx    0xED
     A41:	879C      	bsr        +0xEC87 <PioEnablePWM:0xF6C8[p]>
               PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     A42:	0514      	ld         al, #+0x5
     A43:	0110      	ld         ah, #+0x1
     A44:	0100      	**prefx    0x1
     A45:	ED00      	**prefx    0xED
     A46:	2E9C      	bsr        +0xED2E <PioSetDir:0xF774[p]>
               PioSetPullModes((1UL<<RLED), pio_mode_strong_pull_up);
     A47:	0714      	ld         al, #+0x7
     A48:	0027      	st         al, @(0x0, y)
     A49:	0010      	ld         ah, #+0x0
     A4A:	2014      	ld         al, #+0x20
     A4B:	0100      	**prefx    0x1
     A4C:	EC00      	**prefx    0xEC
     A4D:	BF9C      	bsr        +0xEBBF <PioSetPullModes:0xF60C[p]>
               PioSet(RLED,TRUE);      
     A4E:	0514      	ld         al, #+0x5
     A4F:	0110      	ld         ah, #+0x1
     A50:	0100      	**prefx    0x1
     A51:	EB00      	**prefx    0xEB
     A52:	5A9C      	bsr        +0xEB5A <PioSet:0xF5AC[p]>
     A53:	0100      	**prefx    0x1
     A54:	A4E0      	bra        +0xA4 <L0+0x9D:0xAF8[p]>
           } 
           else if((Flag0)&&(Flag1)&&(Flag2))
           {
               if(!Flag4)
     A55:	4B00      	**prefx    0x4B
     A56:	E899      	tst        @0x4AE8 <Flag4>
     A57:	3CF0      	bne        +0x3C <L0+0x38:0xA93[p]>
               {
                   
                   PioSetMode(GLED, pio_mode_user);         
     A58:	0614      	ld         al, #+0x6
     A59:	0010      	ld         ah, #+0x0
     A5A:	1900      	**prefx    0x19
     A5B:	C99C      	bsr        +0x18C9 <PioSetMode:0x2324[p]>
                   PioEnablePWM(3, FALSE);
     A5C:	0314      	ld         al, #+0x3
     A5D:	0010      	ld         ah, #+0x0
     A5E:	0100      	**prefx    0x1
     A5F:	EC00      	**prefx    0xEC
     A60:	689C      	bsr        +0xEC68 <PioEnablePWM:0xF6C8[p]>
                   PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     A61:	0614      	ld         al, #+0x6
     A62:	0110      	ld         ah, #+0x1
     A63:	0100      	**prefx    0x1
     A64:	ED00      	**prefx    0xED
     A65:	0F9C      	bsr        +0xED0F <PioSetDir:0xF774[p]>
                   PioSetPullModes((1UL<<GLED), pio_mode_strong_pull_up);
     A66:	0714      	ld         al, #+0x7
     A67:	0027      	st         al, @(0x0, y)
     A68:	0010      	ld         ah, #+0x0
     A69:	4014      	ld         al, #+0x40
     A6A:	0100      	**prefx    0x1
     A6B:	EC00      	**prefx    0xEC
     A6C:	A09C      	bsr        +0xEBA0 <PioSetPullModes:0xF60C[p]>
                   PioSet(GLED,FALSE);            
     A6D:	0614      	ld         al, #+0x6
     A6E:	0010      	ld         ah, #+0x0
     A6F:	0100      	**prefx    0x1
     A70:	EB00      	**prefx    0xEB
     A71:	3B9C      	bsr        +0xEB3B <PioSet:0xF5AC[p]>
                 
                 
                   PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     A72:	0514      	ld         al, #+0x5
     A73:	0110      	ld         ah, #+0x1
     A74:	0100      	**prefx    0x1
     A75:	ED00      	**prefx    0xED
     A76:	FE9C      	bsr        +0xECFE <PioSetDir:0xF774[p]>
                   PioSetMode(RLED, pio_mode_pwm2);
     A77:	0514      	ld         al, #+0x5
     A78:	0610      	ld         ah, #+0x6
     A79:	1900      	**prefx    0x19
     A7A:	AA9C      	bsr        +0x18AA <PioSetMode:0x2324[p]>
                   PioEnablePWM(2, TRUE);
     A7B:	0214      	ld         al, #+0x2
     A7C:	0110      	ld         ah, #+0x1
     A7D:	0100      	**prefx    0x1
     A7E:	EC00      	**prefx    0xEC
     A7F:	499C      	bsr        +0xEC49 <PioEnablePWM:0xF6C8[p]>
                   PioConfigPWM(2, pio_pwm_mode_push_pull,
     A80:	0014      	ld         al, #+0x0
     A81:	0027      	st         al, @(0x0, y)
     A82:	2114      	ld         al, #+0x21
     A83:	0127      	st         al, @(+0x1, y)
     A84:	0A14      	ld         al, #+0xA
     A85:	0227      	st         al, @(+0x2, y)
     A86:	2114      	ld         al, #+0x21
     A87:	0327      	st         al, @(+0x3, y)
     A88:	0014      	ld         al, #+0x0
     A89:	0427      	st         al, @(+0x4, y)
     A8A:	0A14      	ld         al, #+0xA
     A8B:	0527      	st         al, @(+0x5, y)
     A8C:	2114      	ld         al, #+0x21
     A8D:	0627      	st         al, @(+0x6, y)
     A8E:	0214      	ld         al, #+0x2
     A8F:	0010      	ld         ah, #+0x0
     A90:	1800      	**prefx    0x18
     A91:	689C      	bsr        +0x1868 <PioConfigPWM:0x22F9[p]>
     A92:	66E0      	bra        +0x66 <L0+0x9D:0xAF8[p]>
                     0,33, 10,33,0, 10,33);
               }
               else if(Flag4)
               {
                   
                   VFPWMStart(0xFF,0xFF);      
     A93:	0100      	**prefx    0x1
     A94:	FF14      	ld         al, #+0xFF
     A95:	E111      	ld         ah, @0xFFE1 <register al>
     A96:	0B00      	**prefx    0xB
     A97:	C19C      	bsr        +0xAC1 <VFPWMStart:0x1558[p]>
                   
                   PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     A98:	0B14      	ld         al, #+0xB
     A99:	0010      	ld         ah, #+0x0
     A9A:	1900      	**prefx    0x19
     A9B:	899C      	bsr        +0x1889 <PioSetMode:0x2324[p]>
                   PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     A9C:	0B14      	ld         al, #+0xB
     A9D:	0110      	ld         ah, #+0x1
     A9E:	0100      	**prefx    0x1
     A9F:	ED00      	**prefx    0xED
     AA0:	D49C      	bsr        +0xECD4 <PioSetDir:0xF774[p]>
                   PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     AA1:	0714      	ld         al, #+0x7
     AA2:	0027      	st         al, @(0x0, y)
     AA3:	0010      	ld         ah, #+0x0
     AA4:	0800      	**prefx    0x8
     AA5:	0014      	ld         al, #+0x800
     AA6:	0100      	**prefx    0x1
     AA7:	EB00      	**prefx    0xEB
     AA8:	649C      	bsr        +0xEB64 <PioSetPullModes:0xF60C[p]>
                   PioSet(LED_CTD,FALSE);
     AA9:	0B14      	ld         al, #+0xB
     AAA:	0010      	ld         ah, #+0x0
     AAB:	0100      	**prefx    0x1
     AAC:	EB00      	**prefx    0xEB
     AAD:	FF9C      	bsr        +0xEAFF <PioSet:0xF5AC[p]>
                                 
                   
                   PioSetMode(GLED, pio_mode_user);         
     AAE:	0614      	ld         al, #+0x6
     AAF:	0010      	ld         ah, #+0x0
     AB0:	1800      	**prefx    0x18
     AB1:	739C      	bsr        +0x1873 <PioSetMode:0x2324[p]>
                   PioEnablePWM(3, FALSE);
     AB2:	0314      	ld         al, #+0x3
     AB3:	0010      	ld         ah, #+0x0
     AB4:	0100      	**prefx    0x1
     AB5:	EC00      	**prefx    0xEC
     AB6:	129C      	bsr        +0xEC12 <PioEnablePWM:0xF6C8[p]>
                   PioSetDir(GLED, PIO_DIRECTION_OUTPUT);
     AB7:	0614      	ld         al, #+0x6
     AB8:	0110      	ld         ah, #+0x1
     AB9:	0100      	**prefx    0x1
     ABA:	ED00      	**prefx    0xED
     ABB:	B99C      	bsr        +0xECB9 <PioSetDir:0xF774[p]>
                   PioSetPullModes((1UL<<GLED), pio_mode_strong_pull_up);
     ABC:	0714      	ld         al, #+0x7
     ABD:	0027      	st         al, @(0x0, y)
     ABE:	0010      	ld         ah, #+0x0
     ABF:	4014      	ld         al, #+0x40
     AC0:	0100      	**prefx    0x1
     AC1:	EB00      	**prefx    0xEB
     AC2:	4A9C      	bsr        +0xEB4A <PioSetPullModes:0xF60C[p]>
                   PioSet(GLED,FALSE); 
     AC3:	0614      	ld         al, #+0x6
     AC4:	0010      	ld         ah, #+0x0
     AC5:	0100      	**prefx    0x1
     AC6:	EB00      	**prefx    0xEB
     AC7:	E59C      	bsr        +0xEAE5 <PioSet:0xF5AC[p]>
                   
                   
                   PioSetMode(RLED, pio_mode_user);         
     AC8:	0514      	ld         al, #+0x5
     AC9:	0010      	ld         ah, #+0x0
     ACA:	1800      	**prefx    0x18
     ACB:	599C      	bsr        +0x1859 <PioSetMode:0x2324[p]>
                   PioEnablePWM(2, FALSE);
     ACC:	0214      	ld         al, #+0x2
     ACD:	0010      	ld         ah, #+0x0
     ACE:	0100      	**prefx    0x1
     ACF:	EC00      	**prefx    0xEC
     AD0:	F89C      	bsr        +0xEBF8 <PioEnablePWM:0xF6C8[p]>
                   PioSetDir(RLED, PIO_DIRECTION_OUTPUT);
     AD1:	0514      	ld         al, #+0x5
     AD2:	0110      	ld         ah, #+0x1
     AD3:	0100      	**prefx    0x1
     AD4:	ED00      	**prefx    0xED
     AD5:	9F9C      	bsr        +0xEC9F <PioSetDir:0xF774[p]>
                   PioSetPullModes((1UL<<RLED), pio_mode_strong_pull_up);
     AD6:	0714      	ld         al, #+0x7
     AD7:	0027      	st         al, @(0x0, y)
     AD8:	0010      	ld         ah, #+0x0
     AD9:	2014      	ld         al, #+0x20
     ADA:	0100      	**prefx    0x1
     ADB:	EB00      	**prefx    0xEB
     ADC:	309C      	bsr        +0xEB30 <PioSetPullModes:0xF60C[p]>
                   PioSet(RLED,FALSE);
     ADD:	0514      	ld         al, #+0x5
     ADE:	0010      	ld         ah, #+0x0
     ADF:	0100      	**prefx    0x1
     AE0:	EB00      	**prefx    0xEB
     AE1:	CB9C      	bsr        +0xEACB <PioSet:0xF5AC[p]>
                   
                   
                   
                   if (g_app_data.app_tid != TIMER_INVALID)
     AE2:	4C00      	**prefx    0x4C
     AE3:	8B15      	ld         al, @0x4B8B <g_app_data+0x17>
     AE4:	07F4      	beq        +0x7 <L0+0x90:0xAEB[p]>
                    {
                        TimerDelete(g_app_data.app_tid);
     AE5:	0100      	**prefx    0x1
     AE6:	D500      	**prefx    0xD5
     AE7:	589C      	bsr        +0xD558 <TimerDelete:0xE03F[p]>
                        g_app_data.app_tid = TIMER_INVALID;
     AE8:	0014      	ld         al, #+0x0
     AE9:	4C00      	**prefx    0x4C
     AEA:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
                    }
                
                    /* Start the Idle timer again.*/
                    g_app_data.app_tid  = TimerCreate(10*MILLISECOND,
     AEB:	0114      	ld         al, #+0x1
     AEC:	0027      	st         al, @(0x0, y)
     AED:	0C00      	**prefx    0xC
     AEE:	5614      	ld         al, #+0xC56
     AEF:	0127      	st         al, @(+0x1, y)
     AF0:	0010      	ld         ah, #+0x0
     AF1:	2700      	**prefx    0x27
     AF2:	1014      	ld         al, #+0x2710
     AF3:	0100      	**prefx    0x1
     AF4:	D600      	**prefx    0xD6
     AF5:	069C      	bsr        +0xD606 <TimerCreate:0xE0FB[p]>
     AF6:	4C00      	**prefx    0x4C
     AF7:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
                                                    TRUE, appIdleTimerHandler);
                
                }
           }
           
          F1=0;
     AF8:	0014      	ld         al, #+0x0
     AF9:	4B00      	**prefx    0x4B
     AFA:	EB25      	st         al, @0x4AEB <F1>
          F2=0;
     AFB:	4B00      	**prefx    0x4B
     AFC:	EC25      	st         al, @0x4AEC <F2>
          TimerDelete(tim_tid1);	
     AFD:	4B00      	**prefx    0x4B
     AFE:	7315      	ld         al, @0x4B73 <tim_tid1>
     AFF:	0100      	**prefx    0x1
     B00:	D500      	**prefx    0xD5
     B01:	3E9C      	bsr        +0xD53E <TimerDelete:0xE03F[p]>
          tim_tid1 = TIMER_INVALID; 
     B02:	0014      	ld         al, #+0x0
     B03:	1CE0      	bra        +0x1C <L0+0xC4:0xB1F[p]>
          
     }
     else if(Adp)
     {
         Flag0=0;
     B04:	0014      	ld         al, #+0x0
     B05:	4B00      	**prefx    0x4B
     B06:	E425      	st         al, @0x4AE4 <Flag0>
         Flag1=0;
     B07:	4B00      	**prefx    0x4B
     B08:	E525      	st         al, @0x4AE5 <Flag1>
         Flag2=0;
     B09:	4B00      	**prefx    0x4B
     B0A:	E625      	st         al, @0x4AE6 <Flag2>
         Flag3=0;
     B0B:	4B00      	**prefx    0x4B
     B0C:	E725      	st         al, @0x4AE7 <Flag3>
         Flag4=0;
     B0D:	4B00      	**prefx    0x4B
     B0E:	E825      	st         al, @0x4AE8 <Flag4>
         
         
            
         
               if(!F2)
     B0F:	4B00      	**prefx    0x4B
     B10:	EC99      	tst        @0x4AEC <F2>
     B11:	10F0      	bne        +0x10 <L0+0xC6:0xB21[p]>
               { 
                 F2=1;
     B12:	0114      	ld         al, #+0x1
     B13:	4B00      	**prefx    0x4B
     B14:	EC25      	st         al, @0x4AEC <F2>
                tim_tid1 = TimerCreate(10*MILLISECOND,TRUE,Led_handler);
     B15:	0027      	st         al, @(0x0, y)
     B16:	0900      	**prefx    0x9
     B17:	AE14      	ld         al, #+0x8AE
     B18:	0127      	st         al, @(+0x1, y)
     B19:	0010      	ld         ah, #+0x0
     B1A:	2700      	**prefx    0x27
     B1B:	1014      	ld         al, #+0x2710
     B1C:	0100      	**prefx    0x1
     B1D:	D600      	**prefx    0xD6
     B1E:	DD9C      	bsr        +0xD5DD <TimerCreate:0xE0FB[p]>
     B1F:	4B00      	**prefx    0x4B
     B20:	7325      	st         al, @0x4B73 <tim_tid1>
            }
     }
     
     
    tim_tid = TimerCreate(1*SECOND,TRUE,handler);
     B21:	0114      	ld         al, #+0x1
     B22:	0027      	st         al, @(0x0, y)
     B23:	0900      	**prefx    0x9
     B24:	2F14      	ld         al, #+0x92F
     B25:	0127      	st         al, @(+0x1, y)
     B26:	0F10      	ld         ah, #+0xF
     B27:	4200      	**prefx    0x42
     B28:	4014      	ld         al, #+0x4240
     B29:	0100      	**prefx    0x1
     B2A:	D600      	**prefx    0xD6
     B2B:	D09C      	bsr        +0xD5D0 <TimerCreate:0xE0FB[p]>
     B2C:	4B00      	**prefx    0x4B
     B2D:	6F25      	st         al, @0x4B6F <tim_tid>
}
     B2E:	090F      	leave      #+0x9

0x00000B2F <appAdvertTimerHandler>:
 *      Nothing
 *----------------------------------------------------------------------------*/
static void appAdvertTimerHandler(timer_id tid)
{
    /* Based upon the timer id, stop on-going advertisements */
    if(g_app_data.app_tid == tid)
     B2F:	4C00      	**prefx    0x4C
     B30:	8B11      	ld         ah, @0x4B8B <g_app_data+0x17>
     B31:	E181      	cmp        ah, @0xFFE1 <register al>
     B32:	06F0      	bne        +0x6 <appAdvertTimerHandler+0x9:0xB38[p]>
    {
        /* Timer has just expired so mark it as invalid */
        g_app_data.app_tid = TIMER_INVALID;
     B33:	0014      	ld         al, #+0x0
     B34:	4C00      	**prefx    0x4C
     B35:	8B25      	st         al, @0x4B8B <g_app_data+0x17>

        GattStopAdverts();
     B36:	0500      	**prefx    0x5
     B37:	FCE0      	bra        +0x4FC <GattStopAdverts:0x1033[p]>
     B38:	00E2      	bra        0x0, x

0x00000B39 <HandleExtTrigger>:
    /* Raise panic */
    Panic(panic_code);
}

extern void HandleExtTrigger(void)
{
     B39:	040B      	enter      #+0x4
    uint8 temp= 0x43;
     B3A:	4314      	ld         al, #+0x43
     B3B:	0227      	st         al, @(+0x2, y)
    reg=0x00;
     B3C:	0018      	ld         x, #+0x0
     B3D:	4B00      	**prefx    0x4B
     B3E:	ED29      	st         x, @0x4AED <reg>
    if(I2CAcquire())
     B3F:	0B00      	**prefx    0xB
     B40:	059C      	bsr        +0xB05 <I2CAcquire:0x1645[p]>
     B41:	E199      	tst        @0xFFE1 <register al>
     B42:	0EF4      	beq        +0xE <HandleExtTrigger+0x17:0xB50[p]>
    {
       I2CcommsInit();
     B43:	0B00      	**prefx    0xB
     B44:	3B9C      	bsr        +0xB3B <I2CcommsInit:0x167F[p]>
       I2C_IO_Write(reg);
     B45:	4B00      	**prefx    0x4B
     B46:	ED15      	ld         al, @0x4AED <reg>
     B47:	0B00      	**prefx    0xB
     B48:	069C      	bsr        +0xB06 <I2C_IO_Write:0x164E[p]>
       I2CRelease(); 
     B49:	0B00      	**prefx    0xB
     B4A:	6D9C      	bsr        +0xB6D <I2CRelease:0x16B7[p]>
       TimeDelayUSec(2* MILLISECOND);
     B4B:	0800      	**prefx    0x8
     B4C:	D014      	ld         al, #+0x7D0
     B4D:	0100      	**prefx    0x1
     B4E:	A800      	**prefx    0xA8
     B4F:	0D9C      	bsr        +0xA80D <TimeDelayUSec:0xB35C[p]>
     }
    if( mode == 0x31)
     B50:	4B00      	**prefx    0x4B
     B51:	7015      	ld         al, @0x4B70 <mode>
     B52:	3184      	cmp        al, #+0x31
     B53:	04F0      	bne        +0x4 <HandleExtTrigger+0x1E:0xB57[p]>
    {
        /*WLED_PWM(w_int);
        IR_PWM(0xFF);  */   
        /*VFPWMStart(0xFF,w_int);*/
        GattCharValueNotification(GetConnectionID(),HANDLE_SERIAL_DATA_TRANSFER,1,&temp); 
     B54:	FB00      	**prefx    0xFB
     B55:	6A9C      	bsr        -0x496 <GetConnectionID:0x6BF[p]>
     B56:	05E0      	bra        +0x5 <HandleExtTrigger+0x22:0xB5B[p]>
    }
    else if(mode == 0x32)
     B57:	3284      	cmp        al, #+0x32
     B58:	0CF0      	bne        +0xC <HandleExtTrigger+0x2B:0xB64[p]>
    {
        /*VFPWMStart(0xFF,w_int);*/
        /*WLED_PWM(w_int);
        IR_PWM(0xFF);*/
        GattCharValueNotification(GetConnectionID(),HANDLE_SERIAL_DATA_TRANSFER,1,&temp);
     B59:	FB00      	**prefx    0xFB
     B5A:	659C      	bsr        -0x49B <GetConnectionID:0x6BF[p]>
     B5B:	0118      	ld         x, #+0x1
     B5C:	002B      	st         x, @(0x0, y)
     B5D:	E419      	ld         x, @0xFFE4 <register uy>
     B5E:	0238      	add        x, #+0x2
     B5F:	012B      	st         x, @(+0x1, y)
     B60:	1D10      	ld         ah, #+0x1D
     B61:	0100      	**prefx    0x1
     B62:	A600      	**prefx    0xA6
     B63:	4D9C      	bsr        +0xA64D <GattCharValueNotification:0xB1B0[p]>
    }
        
    
    
}
     B64:	040F      	leave      #+0x4

0x00000B65 <ReportPanic>:
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void ReportPanic(app_panic_code panic_code)
{
    /* Raise panic */
    Panic(panic_code);
     B65:	0100      	**prefx    0x1
     B66:	EC00      	**prefx    0xEC
     B67:	1EE0      	bra        +0xEC1E <Panic:0xF785[p]>

0x00000B68 <AppSetState>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void AppSetState(app_state new_state)
{
     B68:	040B      	enter      #+0x4
     B69:	0227      	st         al, @(+0x2, y)
    /* Check that the new state is not the same as the current state */
    app_state old_state = g_app_data.state;
     B6A:	4B00      	**prefx    0x4B
     B6B:	7419      	ld         x, @0x4B74 <g_app_data>

    if (old_state != new_state)
     B6C:	E189      	cmp        x, @0xFFE1 <register al>
     B6D:	0100      	**prefx    0x1
     B6E:	CEF4      	beq        +0xCE <.JTBASE117+0x49:0xC3C[p]>
    {
        /* Exit current state */
        switch (old_state)
     B6F:	0788      	cmp        x, #+0x7
     B70:	79F8      	bcc        +0x79 <.JTBASE110+0x75:0xBE9[p]>
     B71:	4A00      	**prefx    0x4A
     B72:	621A      	ld         x, @(+0x4A62, x)
     B73:	FE09      	brxl       

0x00000B74 <.JTBASE110>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void appInitExit(void)
{
    if(g_app_data.bonded &&
     B74:	4B00      	**prefx    0x4B
     B75:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     B76:	5DF4      	beq        +0x5D <.JTBASE110+0x5F:0xBD3[p]>
     B77:	4B00      	**prefx    0x4B
     B78:	7C14      	ld         al, #+0x4B7C
     B79:	0500      	**prefx    0x5
     B7A:	A89C      	bsr        +0x4A8 <GattIsAddressResolvableRandom:0x1022[p]>
     B7B:	E199      	tst        @0xFFE1 <register al>
     B7C:	57F0      	bne        +0x57 <.JTBASE110+0x5F:0xBD3[p]>
    {
        /* If the device is bonded and the bonded device address is not
         * resolvable random, configure the white list with the bonded
         * host address.
         */
        if(LsAddWhiteListDevice(&g_app_data.bonded_bd_addr) != ls_err_none)
     B7D:	4B00      	**prefx    0x4B
     B7E:	7C14      	ld         al, #+0x4B7C
     B7F:	0100      	**prefx    0x1
     B80:	8600      	**prefx    0x86
     B81:	F79C      	bsr        +0x85F7 <LsAddWhiteListDevice:0x9178[p]>
     B82:	E199      	tst        @0xFFE1 <register al>
     B83:	50F4      	beq        +0x50 <.JTBASE110+0x5F:0xBD3[p]>
        {
            ReportPanic(app_panic_add_whitelist);
     B84:	0814      	ld         al, #+0x8
     B85:	E09C      	bsr        -0x20 <ReportPanic:0xB65[p]>
     B86:	4DE0      	bra        +0x4D <.JTBASE110+0x5F:0xBD3[p]>

            case app_state_disconnecting:
                /* Common things to do whenever application exits
                 * app_state_disconnecting state.
                 */
                PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     B87:	0B14      	ld         al, #+0xB
     B88:	0010      	ld         ah, #+0x0
     B89:	1800      	**prefx    0x18
     B8A:	9A9C      	bsr        +0x179A <PioSetMode:0x2324[p]>
                PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     B8B:	0B14      	ld         al, #+0xB
     B8C:	0110      	ld         ah, #+0x1
     B8D:	0100      	**prefx    0x1
     B8E:	EC00      	**prefx    0xEC
     B8F:	E59C      	bsr        +0xEBE5 <PioSetDir:0xF774[p]>
                PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     B90:	0714      	ld         al, #+0x7
     B91:	0027      	st         al, @(0x0, y)
     B92:	0010      	ld         ah, #+0x0
     B93:	0800      	**prefx    0x8
     B94:	0014      	ld         al, #+0x800
     B95:	0100      	**prefx    0x1
     B96:	EA00      	**prefx    0xEA
     B97:	759C      	bsr        +0xEA75 <PioSetPullModes:0xF60C[p]>
                PioSet(LED_CTD,FALSE);
     B98:	0B14      	ld         al, #+0xB
     B99:	0010      	ld         ah, #+0x0
     B9A:	0100      	**prefx    0x1
     B9B:	EA00      	**prefx    0xEA
     B9C:	109C      	bsr        +0xEA10 <PioSet:0xF5AC[p]>

                
                appDataInit();
     B9D:	FC00      	**prefx    0xFC
     B9E:	BE9C      	bsr        -0x442 <appDataInit:0x75C[p]>
     B9F:	4AE0      	bra        +0x4A <.JTBASE110+0x75:0xBE9[p]>
            case app_state_fast_advertising:  /* FALLTHROUGH */
            case app_state_slow_advertising:
                /* Common things to do whenever application exits
                 * APP_*_ADVERTISING state.
                 */
                PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     BA0:	0B14      	ld         al, #+0xB
     BA1:	0010      	ld         ah, #+0x0
     BA2:	1800      	**prefx    0x18
     BA3:	819C      	bsr        +0x1781 <PioSetMode:0x2324[p]>
                PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     BA4:	0B14      	ld         al, #+0xB
     BA5:	0110      	ld         ah, #+0x1
     BA6:	0100      	**prefx    0x1
     BA7:	EC00      	**prefx    0xEC
     BA8:	CC9C      	bsr        +0xEBCC <PioSetDir:0xF774[p]>
                PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     BA9:	0714      	ld         al, #+0x7
     BAA:	0027      	st         al, @(0x0, y)
     BAB:	0010      	ld         ah, #+0x0
     BAC:	0800      	**prefx    0x8
     BAD:	0014      	ld         al, #+0x800
     BAE:	0100      	**prefx    0x1
     BAF:	EA00      	**prefx    0xEA
     BB0:	5C9C      	bsr        +0xEA5C <PioSetPullModes:0xF60C[p]>
                PioSet(LED_CTD,FALSE);
     BB1:	0B14      	ld         al, #+0xB
     BB2:	0010      	ld         ah, #+0x0
     BB3:	0100      	**prefx    0x1
     BB4:	EA00      	**prefx    0xEA
     BB5:	F79C      	bsr        +0xE9F7 <PioSet:0xF5AC[p]>
static void appExitAdvertising(void)
{
    /* Cancel advertisement timer. Must be valid because timer is active
     * during app_state_fast_advertising and app_state_slow_advertising states.
     */
    TimerDelete(g_app_data.app_tid);
     BB6:	4C00      	**prefx    0x4C
     BB7:	8B15      	ld         al, @0x4B8B <g_app_data+0x17>
     BB8:	0100      	**prefx    0x1
     BB9:	D500      	**prefx    0xD5
     BBA:	859C      	bsr        +0xD485 <TimerDelete:0xE03F[p]>
    g_app_data.app_tid = TIMER_INVALID;
     BBB:	0014      	ld         al, #+0x0
     BBC:	4C00      	**prefx    0x4C
     BBD:	8B25      	st         al, @0x4B8B <g_app_data+0x17>
     BBE:	2BE0      	bra        +0x2B <.JTBASE110+0x75:0xBE9[p]>
                /* The application may need to maintain the values of some
                 * profile specific data across connections and power cycles.
                 * These values would have changed in 'connected' state. So,
                 * update the values of this data stored in the NVM.
                 */
                PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     BBF:	0B14      	ld         al, #+0xB
     BC0:	0010      	ld         ah, #+0x0
     BC1:	1700      	**prefx    0x17
     BC2:	629C      	bsr        +0x1762 <PioSetMode:0x2324[p]>
                PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     BC3:	0B14      	ld         al, #+0xB
     BC4:	0110      	ld         ah, #+0x1
     BC5:	0100      	**prefx    0x1
     BC6:	EC00      	**prefx    0xEC
     BC7:	AD9C      	bsr        +0xEBAD <PioSetDir:0xF774[p]>
                PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     BC8:	0714      	ld         al, #+0x7
     BC9:	0027      	st         al, @(0x0, y)
     BCA:	0010      	ld         ah, #+0x0
     BCB:	0800      	**prefx    0x8
     BCC:	0014      	ld         al, #+0x800
     BCD:	0100      	**prefx    0x1
     BCE:	EA00      	**prefx    0xEA
     BCF:	3D9C      	bsr        +0xEA3D <PioSetPullModes:0xF60C[p]>
                PioSet(LED_CTD,TRUE);
     BD0:	0B14      	ld         al, #+0xB
     BD1:	0110      	ld         ah, #+0x1
     BD2:	14E0      	bra        +0x14 <.JTBASE110+0x72:0xBE6[p]>

           
            break;

            case app_state_idle:
                PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     BD3:	0B14      	ld         al, #+0xB
     BD4:	0010      	ld         ah, #+0x0
     BD5:	1700      	**prefx    0x17
     BD6:	4E9C      	bsr        +0x174E <PioSetMode:0x2324[p]>
                PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     BD7:	0B14      	ld         al, #+0xB
     BD8:	0110      	ld         ah, #+0x1
     BD9:	0100      	**prefx    0x1
     BDA:	EC00      	**prefx    0xEC
     BDB:	999C      	bsr        +0xEB99 <PioSetDir:0xF774[p]>
                PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     BDC:	0714      	ld         al, #+0x7
     BDD:	0027      	st         al, @(0x0, y)
     BDE:	0010      	ld         ah, #+0x0
     BDF:	0800      	**prefx    0x8
     BE0:	0014      	ld         al, #+0x800
     BE1:	0100      	**prefx    0x1
     BE2:	EA00      	**prefx    0xEA
     BE3:	299C      	bsr        +0xEA29 <PioSetPullModes:0xF60C[p]>
                PioSet(LED_CTD,FALSE);
     BE4:	0B14      	ld         al, #+0xB
     BE5:	0010      	ld         ah, #+0x0
     BE6:	0100      	**prefx    0x1
     BE7:	EA00      	**prefx    0xEA
     BE8:	C49C      	bsr        +0xE9C4 <PioSet:0xF5AC[p]>
                /* Nothing to do */
            break;
        }
        
        /* Set new state */
        g_app_data.state = new_state;
     BE9:	0217      	ld         al, @(+0x2, y)
     BEA:	4B00      	**prefx    0x4B
     BEB:	7425      	st         al, @0x4B74 <g_app_data>

        /* Enter new state */
        switch (new_state)
     BEC:	E119      	ld         x, @0xFFE1 <register al>
     BED:	FF38      	add        x, #-0x1
     BEE:	0588      	cmp        x, #+0x5
     BEF:	4DF8      	bcc        +0x4D <.JTBASE117+0x49:0xC3C[p]>
     BF0:	4A00      	**prefx    0x4A
     BF1:	691A      	ld         x, @(+0x4A69, x)
     BF2:	FE09      	brxl       

0x00000BF3 <.JTBASE117>:
        {
            case app_state_directed_advertising:
            {
                /* Start directed advertisement */
                GattStartAdverts(FALSE,gap_mode_connect_directed);
     BF3:	0014      	ld         al, #+0x0
     BF4:	0210      	ld         ah, #+0x2
     BF5:	15E0      	bra        +0x15 <.JTBASE117+0x17:0xC0A[p]>
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void enableWhiteList(void)
{
    if(IsDeviceBonded())
     BF6:	FB00      	**prefx    0xFB
     BF7:	C59C      	bsr        -0x53B <IsDeviceBonded:0x6BC[p]>
     BF8:	E199      	tst        @0xFFE1 <register al>
     BF9:	0AF4      	beq        +0xA <.JTBASE117+0x10:0xC03[p]>
    {
        if(!GattIsAddressResolvableRandom(&g_app_data.bonded_bd_addr))
     BFA:	4B00      	**prefx    0x4B
     BFB:	7C14      	ld         al, #+0x4B7C
     BFC:	0400      	**prefx    0x4
     BFD:	259C      	bsr        +0x425 <GattIsAddressResolvableRandom:0x1022[p]>
     BFE:	E199      	tst        @0xFFE1 <register al>
     BFF:	04F0      	bne        +0x4 <.JTBASE117+0x10:0xC03[p]>
        {
            /* Enable white list if the device is bonded and the bonded host
             * is not using resolvable random address.
             */
            g_app_data.enable_white_list = TRUE;
     C00:	0114      	ld         al, #+0x1
     C01:	4C00      	**prefx    0x4C
     C02:	8C25      	st         al, @0x4B8C <g_app_data+0x18>
                 * device and that device is not using resolvable random
                 * address.
                 */
                enableWhiteList();
                /* Trigger fast advertisements. */
                GattTriggerFastAdverts(&g_app_data.bonded_bd_addr);
     C03:	4B00      	**prefx    0x4B
     C04:	7C14      	ld         al, #+0x4B7C
     C05:	0500      	**prefx    0x5
     C06:	E49C      	bsr        +0x4E4 <GattTriggerFastAdverts:0x10EA[p]>
     C07:	05E0      	bra        +0x5 <.JTBASE117+0x19:0xC0C[p]>
            }
            break;

            case app_state_slow_advertising:
                /* Start slow advertisements */
                GattStartAdverts(FALSE,gap_mode_connect_undirected);
     C08:	0014      	ld         al, #+0x0
     C09:	0310      	ld         ah, #+0x3
     C0A:	0500      	**prefx    0x5
     C0B:	B79C      	bsr        +0x4B7 <GattStartAdverts:0x10C2[p]>
   
                if( g_app_data.led_timer_tid  == TIMER_INVALID)
     C0C:	4C00      	**prefx    0x4C
     C0D:	8F99      	tst        @0x4B8F <g_app_data+0x1B>
     C0E:	2EF0      	bne        +0x2E <.JTBASE117+0x49:0xC3C[p]>
                {
                    /* Recreate 500ms timer */
                    g_app_data.led_timer_tid = TimerCreate(
     C0F:	0114      	ld         al, #+0x1
     C10:	0027      	st         al, @(0x0, y)
     C11:	0700      	**prefx    0x7
     C12:	F914      	ld         al, #+0x6F9
     C13:	0127      	st         al, @(+0x1, y)
     C14:	0710      	ld         ah, #+0x7
     C15:	A100      	**prefx    0xA1
     C16:	2014      	ld         al, #-0x5EE0
     C17:	18E0      	bra        +0x18 <.JTBASE117+0x3C:0xC2F[p]>
                 * app_state_connected state.
                 */
                /* Trigger SM Slave Security request only if the remote
                 * host is not using resolvable random address
                 */
                if(!GattIsAddressResolvableRandom(&g_app_data.con_bd_addr))
     C18:	4B00      	**prefx    0x4B
     C19:	7514      	ld         al, #+0x4B75
     C1A:	0400      	**prefx    0x4
     C1B:	079C      	bsr        +0x407 <GattIsAddressResolvableRandom:0x1022[p]>
     C1C:	E199      	tst        @0xFFE1 <register al>
     C1D:	05F0      	bne        +0x5 <.JTBASE117+0x2F:0xC22[p]>
                {
                    SMRequestSecurityLevel(&g_app_data.con_bd_addr);
     C1E:	4B00      	**prefx    0x4B
     C1F:	7514      	ld         al, #+0x4B75
     C20:	F800      	**prefx    0xF8
     C21:	389C      	bsr        -0x7C8 <SMRequestSecurityLevel:0x459[p]>
                }

                /* Reset the idle timer */
                resetIdleTimer();
     C22:	FB00      	**prefx    0xFB
     C23:	BD9C      	bsr        -0x543 <resetIdleTimer:0x6E0[p]>
                
                if( g_app_data.led_timer_tid  == TIMER_INVALID)
     C24:	4C00      	**prefx    0x4C
     C25:	8F99      	tst        @0x4B8F <g_app_data+0x1B>
     C26:	16F0      	bne        +0x16 <.JTBASE117+0x49:0xC3C[p]>
                {
                    /* Recreate 500ms timer */
                    g_app_data.led_timer_tid = TimerCreate(
     C27:	0114      	ld         al, #+0x1
     C28:	0027      	st         al, @(0x0, y)
     C29:	0700      	**prefx    0x7
     C2A:	F914      	ld         al, #+0x6F9
     C2B:	0127      	st         al, @(+0x1, y)
     C2C:	0110      	ld         ah, #+0x1
     C2D:	8700      	**prefx    0x87
     C2E:	A014      	ld         al, #-0x7960
     C2F:	0100      	**prefx    0x1
     C30:	D500      	**prefx    0xD5
     C31:	CA9C      	bsr        +0xD4CA <TimerCreate:0xE0FB[p]>
     C32:	4C00      	**prefx    0x4C
     C33:	8F25      	st         al, @0x4B8F <g_app_data+0x1B>
     C34:	08E0      	bra        +0x8 <.JTBASE117+0x49:0xC3C[p]>
             }
            break;

            case app_state_disconnecting:
                /* Disconnect the link */
                GattDisconnectReq(g_app_data.st_ucid);
     C35:	4B00      	**prefx    0x4B
     C36:	7A15      	ld         al, @0x4B7A <g_app_data+0x6>

            default:
            break;
        }
    }
}
     C37:	031B      	ld         x, @(+0x3, y)
     C38:	043C      	add        y, #+0x4
             }
            break;

            case app_state_disconnecting:
                /* Disconnect the link */
                GattDisconnectReq(g_app_data.st_ucid);
     C39:	0100      	**prefx    0x1
     C3A:	A300      	**prefx    0xA3
     C3B:	1FE0      	bra        +0xA31F <GattDisconnectReq:0xAF5A[p]>

            default:
            break;
        }
    }
}
     C3C:	040F      	leave      #+0x4

0x00000C3D <appStartAdvert>:
static void appStartAdvert(void)
{
    app_state advert_type;

    /* Check if the app is bonded */
    if(g_app_data.bonded)
     C3D:	4B00      	**prefx    0x4B
     C3E:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     C3F:	03F0      	bne        +0x3 <appStartAdvert+0x5:0xC42[p]>
     C40:	0114      	ld         al, #+0x1
     C41:	02E0      	bra        +0x2 <appStartAdvert+0x6:0xC43[p]>
     C42:	0314      	ld         al, #+0x3
        /* Start with fast advertisements */
        advert_type = app_state_fast_advertising;
    }

    /* Set the application state */
    AppSetState(advert_type);
     C43:	FF00      	**prefx    0xFF
     C44:	24E0      	bra        -0xDC <AppSetState:0xB68[p]>

0x00000C45 <HandleShortButtonPress>:
 *----------------------------------------------------------------------------*/
extern void HandleShortButtonPress(void)
{
    /*uint8 temp[2]={0x47,0x02};*/
    /* Handle signal as per current state */
    switch(g_app_data.state)
     C45:	4B00      	**prefx    0x4B
     C46:	7415      	ld         al, @0x4B74 <g_app_data>
     C47:	0684      	cmp        al, #+0x6
     C48:	02F0      	bne        +0x2 <HandleShortButtonPress+0x5:0xC4A[p]>
    {
        case app_state_idle:
            appStartAdvert();
     C49:	F4E0      	bra        -0xC <appStartAdvert:0xC3D[p]>
     C4A:	00E2      	bra        0x0, x

0x00000C4B <handleBondingChanceTimerExpiry>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleBondingChanceTimerExpiry(timer_id tid)
{
    if(g_app_data.bonding_reattempt_tid == tid)
     C4B:	4C00      	**prefx    0x4C
     C4C:	8E11      	ld         ah, @0x4B8E <g_app_data+0x1A>
     C4D:	E181      	cmp        ah, @0xFFE1 <register al>
     C4E:	07F0      	bne        +0x7 <handleBondingChanceTimerExpiry+0xA:0xC55[p]>
    {
        /* The timer has just expired, so mark it as invalid */
        g_app_data.bonding_reattempt_tid = TIMER_INVALID;
     C4F:	0014      	ld         al, #+0x0
     C50:	4C00      	**prefx    0x4C
     C51:	8E25      	st         al, @0x4B8E <g_app_data+0x1A>
        /* The bonding chance timer has expired. This means the remote has not
         * encrypted the link using old keys. Disconnect the link.
         */
        AppSetState(app_state_disconnecting);
     C52:	0514      	ld         al, #+0x5
     C53:	FF00      	**prefx    0xFF
     C54:	14E0      	bra        -0xEC <AppSetState:0xB68[p]>
     C55:	00E2      	bra        0x0, x

0x00000C56 <appIdleTimerHandler>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void appIdleTimerHandler(timer_id tid)
{
    if(tid == g_app_data.app_tid)
     C56:	4C00      	**prefx    0x4C
     C57:	8B85      	cmp        al, @0x4B8B <g_app_data+0x17>
     C58:	0BF0      	bne        +0xB <appIdleTimerHandler+0xD:0xC63[p]>
    {
        /* Timer has just expired, so mark it as invalid */
        g_app_data.app_tid = TIMER_INVALID;
     C59:	0014      	ld         al, #+0x0
     C5A:	4C00      	**prefx    0x4C
     C5B:	8B25      	st         al, @0x4B8B <g_app_data+0x17>

        /* Handle signal as per current state */
        switch(g_app_data.state)
     C5C:	4B00      	**prefx    0x4B
     C5D:	7415      	ld         al, @0x4B74 <g_app_data>
     C5E:	0484      	cmp        al, #+0x4
     C5F:	04F0      	bne        +0x4 <appIdleTimerHandler+0xD:0xC63[p]>
            case app_state_connected:
            {
                /* Trigger Disconnect and move to app_state_disconnecting
                 * state
                 */
                AppSetState(app_state_disconnecting);
     C60:	0514      	ld         al, #+0x5
     C61:	FF00      	**prefx    0xFF
     C62:	06E0      	bra        -0xFA <AppSetState:0xB68[p]>
     C63:	00E2      	bra        0x0, x

0x00000C64 <HandlePairingRemoval>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HandlePairingRemoval(void)
{
     C64:	020B      	enter      #+0x2
    /* Remove bonding information */
    /* The device will no longer be bonded */
    g_app_data.bonded = FALSE;
     C65:	0014      	ld         al, #+0x0
     C66:	4B00      	**prefx    0x4B
     C67:	7B25      	st         al, @0x4B7B <g_app_data+0x7>

    /* Write bonded status to NVM */
    Nvm_Write((uint16*)&g_app_data.bonded,
     C68:	0114      	ld         al, #+0x1
     C69:	0027      	st         al, @(0x0, y)
     C6A:	4B00      	**prefx    0x4B
     C6B:	7B14      	ld         al, #+0x4B7B
     C6C:	0110      	ld         ah, #+0x1
     C6D:	F900      	**prefx    0xF9
     C6E:	019C      	bsr        -0x6FF <Nvm_Write:0x56F[p]>
              sizeof(g_app_data.bonded),
              NVM_OFFSET_BONDED_FLAG);

    switch(g_app_data.state)
     C6F:	4B00      	**prefx    0x4B
     C70:	7415      	ld         al, @0x4B74 <g_app_data>
     C71:	0484      	cmp        al, #+0x4
     C72:	09F4      	beq        +0x9 <HandlePairingRemoval+0x17:0xC7B[p]>
     C73:	0584      	cmp        al, #+0x5
     C74:	04F8      	bcc        +0x4 <HandlePairingRemoval+0x14:0xC78[p]>
     C75:	0184      	cmp        al, #+0x1
     C76:	13FC      	bcs        +0x13 <HandlePairingRemoval+0x25:0xC89[p]>
     C77:	08E0      	bra        +0x8 <HandlePairingRemoval+0x1B:0xC7F[p]>
     C78:	0584      	cmp        al, #+0x5
     C79:	10F0      	bne        +0x10 <HandlePairingRemoval+0x25:0xC89[p]>
     C7A:	0BE0      	bra        +0xB <HandlePairingRemoval+0x21:0xC85[p]>
            /* Disconnect from the connected host before triggering
             * advertisements again for any host to connect. Application
             * and services data related to bonding status will get
             * updated while exiting disconnecting state.
             */
            AppSetState(app_state_disconnecting);
     C7B:	0514      	ld         al, #+0x5
     C7C:	FF00      	**prefx    0xFF
     C7D:	EB9C      	bsr        -0x115 <AppSetState:0xB68[p]>
     C7E:	07E0      	bra        +0x7 <HandlePairingRemoval+0x21:0xC85[p]>
        case app_state_fast_advertising:
        case app_state_slow_advertising:
        {

            /* Set flag for pairing / bonding removal */
            g_app_data.pairing_button_pressed = TRUE;
     C7F:	0114      	ld         al, #+0x1
     C80:	4C00      	**prefx    0x4C
     C81:	8A25      	st         al, @0x4B8A <g_app_data+0x16>

            /* Stop advertisements first as it may be making use of the white
             * list. Once advertisements are stopped, reset the white list
             * and trigger advertisements again for any host to connect.
             */
            GattStopAdverts();
     C82:	0400      	**prefx    0x4
     C83:	B09C      	bsr        +0x3B0 <GattStopAdverts:0x1033[p]>
     C84:	0BE0      	bra        +0xB <HandlePairingRemoval+0x2B:0xC8F[p]>
             * and wait for the procedure to complete before triggering
             * advertisements again for any host to connect. Application
             * and services data related to bonding status will get
             * updated while exiting disconnecting state.
             */
            LsResetWhiteList();
     C85:	0100      	**prefx    0x1
     C86:	8500      	**prefx    0x85
     C87:	FA9C      	bsr        +0x84FA <LsResetWhiteList:0x9181[p]>
     C88:	07E0      	bra        +0x7 <HandlePairingRemoval+0x2B:0xC8F[p]>
        break;

        default: /* app_state_init / app_state_idle handling */
        {
            /* Reset and clear the white list */
            LsResetWhiteList();
     C89:	0100      	**prefx    0x1
     C8A:	8500      	**prefx    0x85
     C8B:	F69C      	bsr        +0x84F6 <LsResetWhiteList:0x9181[p]>

            /* Start fast undirected advertisements */
            AppSetState(app_state_fast_advertising);
     C8C:	0114      	ld         al, #+0x1
     C8D:	FF00      	**prefx    0xFF
     C8E:	DA9C      	bsr        -0x126 <AppSetState:0xB68[p]>
        }
        break;

    }
}
     C8F:	020F      	leave      #+0x2

0x00000C90 <AppProcessLmEvent>:
 *  RETURNS
 *      TRUE if the app has finished with the event data; the control layer
 *      will free the buffer.
 *----------------------------------------------------------------------------*/
bool AppProcessLmEvent(lm_event_code event_code, LM_EVENT_T *p_event_data)
{
     C90:	060B      	enter      #+0x6
     C91:	0423      	st         ah, @(+0x4, y)
    switch (event_code)
     C92:	0B00      	**prefx    0xB
     C93:	9B84      	cmp        al, #+0xA9B
     C94:	0300      	**prefx    0x3
     C95:	40F4      	beq        +0x340 <.JTBASE239+0x113:0xFD5[p]>
     C96:	0B00      	**prefx    0xB
     C97:	9C84      	cmp        al, #+0xA9C
     C98:	1BF8      	bcc        +0x1B <AppProcessLmEvent+0x23:0xCB3[p]>
     C99:	0B00      	**prefx    0xB
     C9A:	8084      	cmp        al, #+0xA80
     C9B:	37F4      	beq        +0x37 <AppProcessLmEvent+0x42:0xCD2[p]>
     C9C:	0B00      	**prefx    0xB
     C9D:	8184      	cmp        al, #+0xA81
     C9E:	09F8      	bcc        +0x9 <AppProcessLmEvent+0x17:0xCA7[p]>
     C9F:	0584      	cmp        al, #+0x5
     CA0:	0300      	**prefx    0x3
     CA1:	DBF4      	beq        +0x2DB <.JTBASE239+0xBA:0xF7C[p]>
     CA2:	0884      	cmp        al, #+0x8
     CA3:	0300      	**prefx    0x3
     CA4:	50F0      	bne        +0x350 <.JTBASE239+0x132:0xFF4[p]>
     CA5:	0100      	**prefx    0x1
     CA6:	36E0      	bra        +0x136 <AppProcessLmEvent+0x14C:0xDDC[p]>
     CA7:	0B00      	**prefx    0xB
     CA8:	8484      	cmp        al, #+0xA84
     CA9:	37F4      	beq        +0x37 <AppProcessLmEvent+0x50:0xCE0[p]>
     CAA:	0B00      	**prefx    0xB
     CAB:	8684      	cmp        al, #+0xA86
     CAC:	0300      	**prefx    0x3
     CAD:	B1F4      	beq        +0x2B1 <.JTBASE239+0x9C:0xF5E[p]>
     CAE:	0B00      	**prefx    0xB
     CAF:	8284      	cmp        al, #+0xA82
     CB0:	0300      	**prefx    0x3
     CB1:	43F0      	bne        +0x343 <.JTBASE239+0x132:0xFF4[p]>
     CB2:	52E0      	bra        +0x52 <AppProcessLmEvent+0x74:0xD04[p]>
     CB3:	0B00      	**prefx    0xB
     CB4:	C384      	cmp        al, #+0xAC3
     CB5:	0100      	**prefx    0x1
     CB6:	8FF4      	beq        +0x8F <AppProcessLmEvent+0xB5:0xD45[p]>
     CB7:	0B00      	**prefx    0xB
     CB8:	C484      	cmp        al, #+0xAC4
     CB9:	0BF8      	bcc        +0xB <AppProcessLmEvent+0x34:0xCC4[p]>
     CBA:	0B00      	**prefx    0xB
     CBB:	9C84      	cmp        al, #+0xA9C
     CBC:	0100      	**prefx    0x1
     CBD:	5DF4      	beq        +0x15D <AppProcessLmEvent+0x18A:0xE1A[p]>
     CBE:	0B00      	**prefx    0xB
     CBF:	C084      	cmp        al, #+0xAC0
     CC0:	0300      	**prefx    0x3
     CC1:	33F0      	bne        +0x333 <.JTBASE239+0x132:0xFF4[p]>
     CC2:	0100      	**prefx    0x1
     CC3:	C6E0      	bra        +0xC6 <AppProcessLmEvent+0xF9:0xD89[p]>
     CC4:	0B00      	**prefx    0xB
     CC5:	CB84      	cmp        al, #+0xACB
     CC6:	0100      	**prefx    0x1
     CC7:	B1F4      	beq        +0xB1 <AppProcessLmEvent+0xE8:0xD78[p]>
     CC8:	0B00      	**prefx    0xB
     CC9:	F884      	cmp        al, #+0xAF8
     CCA:	0300      	**prefx    0x3
     CCB:	FAF4      	beq        +0x2FA <.JTBASE239+0x103:0xFC5[p]>
     CCC:	0B00      	**prefx    0xB
     CCD:	CA84      	cmp        al, #+0xACA
     CCE:	0300      	**prefx    0x3
     CCF:	25F0      	bne        +0x325 <.JTBASE239+0x132:0xFF4[p]>
     CD0:	0100      	**prefx    0x1
     CD1:	34E0      	bra        +0x134 <AppProcessLmEvent+0x175:0xE05[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalGattAddDbCfm(GATT_ADD_DB_CFM_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     CD2:	4B00      	**prefx    0x4B
     CD3:	7499      	tst        @0x4B74 <g_app_data>
     CD4:	0300      	**prefx    0x3
     CD5:	ECF0      	bne        +0x2EC <.JTBASE239+0xFF:0xFC1[p]>
    {
        case app_state_init:
        {
            if(p_event_data->result == sys_status_success)
     CD6:	041B      	ld         x, @(+0x4, y)
     CD7:	019A      	tst        @(+0x1, x)
     CD8:	05F0      	bne        +0x5 <AppProcessLmEvent+0x4D:0xCDD[p]>
            {
                /* Start advertising. */
                appStartAdvert();
     CD9:	FF00      	**prefx    0xFF
     CDA:	639C      	bsr        -0x9D <appStartAdvert:0xC3D[p]>
     CDB:	0300      	**prefx    0x3
     CDC:	18E0      	bra        +0x318 <.JTBASE239+0x132:0xFF4[p]>
            }
            else
            {
                /* This should never happen */
                ReportPanic(app_panic_db_registration);
     CDD:	0314      	ld         al, #+0x3
     CDE:	0300      	**prefx    0x3
     CDF:	E3E0      	bra        +0x2E3 <.JTBASE239+0x100:0xFC2[p]>
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalGattCancelConnectCfm(void)
{
    if(g_app_data.pairing_button_pressed)
     CE0:	4C00      	**prefx    0x4C
     CE1:	8A99      	tst        @0x4B8A <g_app_data+0x16>
     CE2:	14F4      	beq        +0x14 <AppProcessLmEvent+0x66:0xCF6[p]>
    {
        /* Pairing removal has been initiated by the user */
        g_app_data.pairing_button_pressed = FALSE;
     CE3:	0014      	ld         al, #+0x0
     CE4:	4C00      	**prefx    0x4C
     CE5:	8A25      	st         al, @0x4B8A <g_app_data+0x16>

        /* Disable white list */
        g_app_data.enable_white_list = FALSE;
     CE6:	4C00      	**prefx    0x4C
     CE7:	8C25      	st         al, @0x4B8C <g_app_data+0x18>

        /* Reset and clear the white list */
        LsResetWhiteList();
     CE8:	0100      	**prefx    0x1
     CE9:	8500      	**prefx    0x85
     CEA:	979C      	bsr        +0x8497 <LsResetWhiteList:0x9181[p]>

        /* Trigger fast advertisements */
        if(g_app_data.state == app_state_fast_advertising)
     CEB:	4B00      	**prefx    0x4B
     CEC:	7415      	ld         al, @0x4B74 <g_app_data>
     CED:	0184      	cmp        al, #+0x1
     CEE:	0300      	**prefx    0x3
     CEF:	CAF0      	bne        +0x2CA <.JTBASE239+0xF7:0xFB9[p]>
        {
            GattTriggerFastAdverts(&g_app_data.bonded_bd_addr);
     CF0:	4B00      	**prefx    0x4B
     CF1:	7C14      	ld         al, #+0x4B7C
     CF2:	0400      	**prefx    0x4
     CF3:	F79C      	bsr        +0x3F7 <GattTriggerFastAdverts:0x10EA[p]>
     CF4:	0300      	**prefx    0x3
     CF5:	FFE0      	bra        +0x2FF <.JTBASE239+0x132:0xFF4[p]>
         *
         * 1. Fast advertising for FAST_CONNECTION_ADVERT_TIMEOUT_VALUE seconds:
         *
         * 2. Slow advertising for SLOW_CONNECTION_ADVERT_TIMEOUT_VALUE seconds
         */
        switch(g_app_data.state)
     CF6:	4B00      	**prefx    0x4B
     CF7:	7415      	ld         al, @0x4B74 <g_app_data>
     CF8:	0184      	cmp        al, #+0x1
     CF9:	06F4      	beq        +0x6 <AppProcessLmEvent+0x6F:0xCFF[p]>
     CFA:	0284      	cmp        al, #+0x2
     CFB:	0300      	**prefx    0x3
     CFC:	C5F0      	bne        +0x2C5 <.JTBASE239+0xFF:0xFC1[p]>
     CFD:	0300      	**prefx    0x3
     CFE:	C0E0      	bra        +0x2C0 <.JTBASE239+0xFC:0xFBE[p]>
        {
            case app_state_fast_advertising:
            {
                 AppSetState(app_state_slow_advertising);
     CFF:	0214      	ld         al, #+0x2
     D00:	FE00      	**prefx    0xFE
     D01:	679C      	bsr        -0x199 <AppSetState:0xB68[p]>
     D02:	0300      	**prefx    0x3
     D03:	F1E0      	bra        +0x2F1 <.JTBASE239+0x132:0xFF4[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalGattConnectCfm(GATT_CONNECT_CFM_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     D04:	4B00      	**prefx    0x4B
     D05:	7415      	ld         al, @0x4B74 <g_app_data>
     D06:	FF34      	add        al, #-0x1
     D07:	0384      	cmp        al, #+0x3
     D08:	0300      	**prefx    0x3
     D09:	B8F8      	bcc        +0x2B8 <.JTBASE239+0xFF:0xFC1[p]>
    {
        case app_state_directed_advertising:
        case app_state_fast_advertising:   /* FALLTHROUGH */
        case app_state_slow_advertising:
        {
            if(p_event_data->result == sys_status_success)
     D0A:	041B      	ld         x, @(+0x4, y)
     D0B:	0712      	ld         ah, @(+0x7, x)
     D0C:	2FF0      	bne        +0x2F <AppProcessLmEvent+0xAB:0xD3B[p]>
            {

                /* Store received UCID */
                g_app_data.st_ucid = p_event_data->cid;
     D0D:	0616      	ld         al, @(+0x6, x)
     D0E:	4B00      	**prefx    0x4B
     D0F:	7A25      	st         al, @0x4B7A <g_app_data+0x6>

                /* Store connected BD Address */
                g_app_data.con_bd_addr = p_event_data->bd_addr;
     D10:	0514      	ld         al, #+0x5
     D11:	4B00      	**prefx    0x4B
     D12:	7510      	ld         ah, #+0x4B75
     D13:	0138      	add        x, #+0x1
     D14:	FD09      	bc2        

                if(g_app_data.bonded &&
     D15:	4B00      	**prefx    0x4B
     D16:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     D17:	15F4      	beq        +0x15 <AppProcessLmEvent+0x9C:0xD2C[p]>
     D18:	4B00      	**prefx    0x4B
     D19:	7C14      	ld         al, #+0x4B7C
     D1A:	0300      	**prefx    0x3
     D1B:	079C      	bsr        +0x307 <GattIsAddressResolvableRandom:0x1022[p]>
     D1C:	E199      	tst        @0xFFE1 <register al>
     D1D:	0FF4      	beq        +0xF <AppProcessLmEvent+0x9C:0xD2C[p]>
     D1E:	0417      	ld         al, @(+0x4, y)
     D1F:	0134      	add        al, #+0x1
     D20:	0118      	ld         x, #+0x1
     D21:	002B      	st         x, @(0x0, y)
     D22:	0818      	ld         x, #+0x8
     D23:	012B      	st         x, @(+0x1, y)
     D24:	4C00      	**prefx    0x4C
     D25:	8210      	ld         ah, #+0x4B82
     D26:	7F00      	**prefx    0x7F
     D27:	1E9C      	bsr        +0x7F1E <SMPrivacyMatchAddress:0x8C45[p]>
     D28:	E199      	tst        @0xFFE1 <register al>
     D29:	03E8      	bpl        +0x3 <AppProcessLmEvent+0x9C:0xD2C[p]>
     D2A:	0100      	**prefx    0x1
     D2B:	97E0      	bra        +0x97 <AppProcessLmEvent+0x132:0xDC2[p]>
                     *   support Resolvable Random address OR
                     * - If the device is bonded and connected host supports
                     *   Resolvable Random address and the address gets resolved
                     *   using the stored IRK key
                     */
                    AppSetState(app_state_connected);
     D2C:	0414      	ld         al, #+0x4
     D2D:	FE00      	**prefx    0xFE
     D2E:	3A9C      	bsr        -0x1C6 <AppSetState:0xB68[p]>
#ifdef ENABLE_OTA
                /* If we are bonded to this host, then it may be appropriate
                 * to indicate that the database is not now what it had
                 * previously.
                 */
                if(g_app_data.bonded)
     D2F:	4B00      	**prefx    0x4B
     D30:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     D31:	05F4      	beq        +0x5 <AppProcessLmEvent+0xA6:0xD36[p]>
                {
                    GattOnConnection(p_event_data->cid);
     D32:	041B      	ld         x, @(+0x4, y)
     D33:	0616      	ld         al, @(+0x6, x)
     D34:	0700      	**prefx    0x7
     D35:	7A9C      	bsr        +0x77A <GattOnConnection:0x14AF[p]>
                }
#endif /* ENABLE_OTA */
                     
                /* Reset the radio events configured flag */
                g_radio_event_configured = FALSE;
     D36:	0014      	ld         al, #+0x0
     D37:	4B00      	**prefx    0x4B
     D38:	E225      	st         al, @0x4AE2 <g_radio_event_configured>
     D39:	0300      	**prefx    0x3
     D3A:	BAE0      	bra        +0x2BA <.JTBASE239+0x132:0xFF4[p]>
            else
            {
                /* Connect Failed. Increment the advertising attempt count
                 * and enter fast advertising state
                 */
                if(g_adv_count<MAX_RETRY_ADVERT_ATTEMPT)
     D3B:	4B00      	**prefx    0x4B
     D3C:	E315      	ld         al, @0x4AE3 <g_adv_count>
     D3D:	0384      	cmp        al, #+0x3
     D3E:	0200      	**prefx    0x2
     D3F:	7FF8      	bcc        +0x27F <.JTBASE239+0xFC:0xFBE[p]>
                {
                    if((p_event_data)->result == 
     D40:	3C80      	cmp        ah, #+0x3C
     D41:	0300      	**prefx    0x3
     D42:	B2F0      	bne        +0x2B2 <.JTBASE239+0x132:0xFF4[p]>
     D43:	0200      	**prefx    0x2
     D44:	75E0      	bra        +0x275 <.JTBASE239+0xF7:0xFB9[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalSmKeysInd(SM_KEYS_IND_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     D45:	4B00      	**prefx    0x4B
     D46:	7415      	ld         al, @0x4B74 <g_app_data>
     D47:	0484      	cmp        al, #+0x4
     D48:	0200      	**prefx    0x2
     D49:	78F0      	bne        +0x278 <.JTBASE239+0xFF:0xFC1[p]>
    {
        case app_state_connected:
        {
          /* If keys are present, save them */
          if((p_event_data->keys)->keys_present & (1 << SM_KEY_TYPE_DIV))
     D4A:	041B      	ld         x, @(+0x4, y)
     D4B:	0612      	ld         ah, @(+0x6, x)
     D4C:	E019      	ld         x, @0xFFE0 <register ah>
     D4D:	0016      	ld         al, @(0x0, x)
     D4E:	04C4      	and        al, #0x4
     D4F:	0BF4      	beq        +0xB <AppProcessLmEvent+0xCA:0xD5A[p]>
          { 
            /* Store the diversifier which will be used for accepting/rejecting
             * the encryption requests.
             */
            g_app_data.diversifier = (p_event_data->keys)->div;
     D50:	0212      	ld         ah, @(+0x2, x)
     D51:	4C00      	**prefx    0x4C
     D52:	8121      	st         ah, @0x4B81 <g_app_data+0xD>

            /* Write the new diversifier to NVM */
            Nvm_Write(&g_app_data.diversifier,
     D53:	0714      	ld         al, #+0x7
     D54:	0027      	st         al, @(0x0, y)
     D55:	4C00      	**prefx    0x4C
     D56:	8114      	ld         al, #+0x4B81
     D57:	0110      	ld         ah, #+0x1
     D58:	F800      	**prefx    0xF8
     D59:	169C      	bsr        -0x7EA <Nvm_Write:0x56F[p]>

            /* Store IRK if the connected host is using random resolvable
             * address. IRK is used afterwards to validate the identity of
             * connected host
             */
            if(GattIsAddressResolvableRandom(&g_app_data.con_bd_addr)&&
     D5A:	4B00      	**prefx    0x4B
     D5B:	7514      	ld         al, #+0x4B75
     D5C:	0300      	**prefx    0x3
     D5D:	C59C      	bsr        +0x2C5 <GattIsAddressResolvableRandom:0x1022[p]>
     D5E:	E199      	tst        @0xFFE1 <register al>
     D5F:	0300      	**prefx    0x3
     D60:	94F4      	beq        +0x294 <.JTBASE239+0x132:0xFF4[p]>
     D61:	041B      	ld         x, @(+0x4, y)
     D62:	061A      	ld         x, @(+0x6, x)
     D63:	0016      	ld         al, @(0x0, x)
     D64:	10C4      	and        al, #0x10
     D65:	0300      	**prefx    0x3
     D66:	8EF4      	beq        +0x28E <.JTBASE239+0x132:0xFF4[p]>
               ((p_event_data->keys)->keys_present & (1 << SM_KEY_TYPE_ID)))
            {
                MemCopy(g_app_data.irk,
     D67:	E315      	ld         al, @0xFFE3 <register uxl>
     D68:	1034      	add        al, #+0x10
     D69:	F825      	st         al, @0xFFF8 <(scratchpad)>
     D6A:	0814      	ld         al, #+0x8
     D6B:	4C00      	**prefx    0x4C
     D6C:	8210      	ld         ah, #+0x4B82
     D6D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
     D6E:	FD09      	bc2        
                        MAX_WORDS_IRK);

                /* If bonded device address is resolvable random
                 * then store IRK to NVM
                 */
                Nvm_Write(g_app_data.irk,
     D6F:	0818      	ld         x, #+0x8
     D70:	002B      	st         x, @(0x0, y)
     D71:	4C00      	**prefx    0x4C
     D72:	8214      	ld         al, #+0x4B82
     D73:	0810      	ld         ah, #+0x8
     D74:	F800      	**prefx    0xF8
     D75:	FA9C      	bsr        -0x806 <Nvm_Write:0x56F[p]>
     D76:	0200      	**prefx    0x2
     D77:	7DE0      	bra        +0x27D <.JTBASE239+0x132:0xFF4[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalSmPairingAuthInd(SM_PAIRING_AUTH_IND_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     D78:	4B00      	**prefx    0x4B
     D79:	7415      	ld         al, @0x4B74 <g_app_data>
     D7A:	0484      	cmp        al, #+0x4
     D7B:	0200      	**prefx    0x2
     D7C:	45F0      	bne        +0x245 <.JTBASE239+0xFF:0xFC1[p]>
     D7D:	041B      	ld         x, @(+0x4, y)
     D7E:	0216      	ld         al, @(+0x2, x)
    {
        case app_state_connected:
        {
            /* Authorise the pairing request if the application is NOT bonded */
            if(!g_app_data.bonded)
     D7F:	4B00      	**prefx    0x4B
     D80:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     D81:	03F0      	bne        +0x3 <AppProcessLmEvent+0xF4:0xD84[p]>
            {
                SMPairingAuthRsp(p_event_data->data, TRUE);
     D82:	0110      	ld         ah, #+0x1
     D83:	02E0      	bra        +0x2 <AppProcessLmEvent+0xF5:0xD85[p]>
            }
            else /* Otherwise Reject the pairing request */
            {
                SMPairingAuthRsp(p_event_data->data, FALSE);
     D84:	0010      	ld         ah, #+0x0
     D85:	F400      	**prefx    0xF4
     D86:	629C      	bsr        -0xB9E <SMPairingAuthRsp:0x1E8[p]>
     D87:	0200      	**prefx    0x2
     D88:	6CE0      	bra        +0x26C <.JTBASE239+0x132:0xFF4[p]>
static void handleSignalSmSimplePairingCompleteInd(
                                 SM_SIMPLE_PAIRING_COMPLETE_IND_T *p_event_data)
{

    /* Handle signal as per current state */
    switch(g_app_data.state)
     D89:	4B00      	**prefx    0x4B
     D8A:	7415      	ld         al, @0x4B74 <g_app_data>
     D8B:	0484      	cmp        al, #+0x4
     D8C:	0200      	**prefx    0x2
     D8D:	67F0      	bne        +0x267 <.JTBASE239+0x132:0xFF4[p]>
    {
        case app_state_connected:
        {
            if(p_event_data->status == sys_status_success)
     D8E:	041B      	ld         x, @(+0x4, y)
     D8F:	0616      	ld         al, @(+0x6, x)
     D90:	2FF0      	bne        +0x2F <AppProcessLmEvent+0x12F:0xDBF[p]>
            {
                /* Store bonded host information to NVM. This includes
                 * application and service specific information.
                 */
                g_app_data.bonded = TRUE;
     D91:	0114      	ld         al, #+0x1
     D92:	4B00      	**prefx    0x4B
     D93:	7B25      	st         al, @0x4B7B <g_app_data+0x7>
                g_app_data.bonded_bd_addr = p_event_data->bd_addr;
     D94:	0514      	ld         al, #+0x5
     D95:	4B00      	**prefx    0x4B
     D96:	7C10      	ld         ah, #+0x4B7C
     D97:	0138      	add        x, #+0x1
     D98:	FD09      	bc2        

                /* Store bonded host typed bd address to NVM */

                /* Write one word bonded flag */
                Nvm_Write((uint16*)&g_app_data.bonded,
     D99:	0118      	ld         x, #+0x1
     D9A:	002B      	st         x, @(0x0, y)
     D9B:	4B00      	**prefx    0x4B
     D9C:	7B14      	ld         al, #+0x4B7B
     D9D:	0110      	ld         ah, #+0x1
     D9E:	F800      	**prefx    0xF8
     D9F:	D09C      	bsr        -0x830 <Nvm_Write:0x56F[p]>
                          sizeof(g_app_data.bonded),
                          NVM_OFFSET_BONDED_FLAG);

                /* Write typed bd address of bonded host */
                Nvm_Write((uint16*)&g_app_data.bonded_bd_addr,
     DA0:	0214      	ld         al, #+0x2
     DA1:	0027      	st         al, @(0x0, y)
     DA2:	4B00      	**prefx    0x4B
     DA3:	7C14      	ld         al, #+0x4B7C
     DA4:	0510      	ld         ah, #+0x5
     DA5:	F800      	**prefx    0xF8
     DA6:	C99C      	bsr        -0x837 <Nvm_Write:0x56F[p]>

                /* Configure white list with the Bonded host address only
                 * if the connected host doesn't support random resolvable
                 * addresses
                 */
                if(!GattIsAddressResolvableRandom(&g_app_data.bonded_bd_addr))
     DA7:	4B00      	**prefx    0x4B
     DA8:	7C14      	ld         al, #+0x4B7C
     DA9:	0200      	**prefx    0x2
     DAA:	789C      	bsr        +0x278 <GattIsAddressResolvableRandom:0x1022[p]>
     DAB:	E199      	tst        @0xFFE1 <register al>
     DAC:	0BF0      	bne        +0xB <AppProcessLmEvent+0x127:0xDB7[p]>
                     * support Reconnection Address. In future, if the
                     * application is enhanced to support Reconnection Address,
                     * make sure that we don't add Reconnection Address to the
                     * white list
                     */
                    if(LsAddWhiteListDevice(&g_app_data.bonded_bd_addr) !=
     DAD:	4B00      	**prefx    0x4B
     DAE:	7C14      	ld         al, #+0x4B7C
     DAF:	0100      	**prefx    0x1
     DB0:	8400      	**prefx    0x84
     DB1:	C79C      	bsr        +0x83C7 <LsAddWhiteListDevice:0x9178[p]>
     DB2:	E199      	tst        @0xFFE1 <register al>
     DB3:	04F4      	beq        +0x4 <AppProcessLmEvent+0x127:0xDB7[p]>
                        ls_err_none)
                    {
                        ReportPanic(app_panic_add_whitelist);
     DB4:	0814      	ld         al, #+0x8
     DB5:	FE00      	**prefx    0xFE
     DB6:	AF9C      	bsr        -0x251 <ReportPanic:0xB65[p]>
                 * required data to NVM.
                 */

#ifdef ENABLE_OTA
                /* Notify the Gatt service about the pairing */
                GattBondingNotify();
     DB7:	0600      	**prefx    0x6
     DB8:	789C      	bsr        +0x678 <GattBondingNotify:0x1430[p]>
#endif /* ENABLE_OTA */            

                BatteryBondingNotify();
     DB9:	F700      	**prefx    0xF7
     DBA:	D09C      	bsr        -0x930 <BatteryBondingNotify:0x48A[p]>
                
                 /* Add the Service Bonding Notify API here */
                SerialBondingNotify();
     DBB:	0400      	**prefx    0x4
     DBC:	369C      	bsr        +0x436 <SerialBondingNotify:0x11F2[p]>
     DBD:	0200      	**prefx    0x2
     DBE:	36E0      	bra        +0x236 <.JTBASE239+0x132:0xFF4[p]>
                 *    not allow bonding again if we are already bonded but we
                 *    will give the connected device some time to encrypt the
                 *    link using the old keys. If the remote device fails to
                 *    encrypt the link in that time we will disconnect the link.
                 */
                 if(p_event_data->status == sm_status_repeated_attempts)
     DBF:	0B00      	**prefx    0xB
     DC0:	0984      	cmp        al, #+0xB09
     DC1:	04F0      	bne        +0x4 <AppProcessLmEvent+0x135:0xDC5[p]>
                 {
                    AppSetState(app_state_disconnecting);
     DC2:	0514      	ld         al, #+0x5
     DC3:	FF00      	**prefx    0xFF
     DC4:	3CE0      	bra        -0xC4 <AppProcessLmEvent+0x70:0xD00[p]>
                 }
                 else if(g_app_data.bonded)
     DC5:	4B00      	**prefx    0x4B
     DC6:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     DC7:	0200      	**prefx    0x2
     DC8:	2CF4      	beq        +0x22C <.JTBASE239+0x132:0xFF4[p]>
                 {
                    g_app_data.encrypt_enabled = FALSE;
     DC9:	0018      	ld         x, #+0x0
     DCA:	4C00      	**prefx    0x4C
     DCB:	8D29      	st         x, @0x4B8D <g_app_data+0x19>
                    g_app_data.bonding_reattempt_tid =
     DCC:	0114      	ld         al, #+0x1
     DCD:	0027      	st         al, @(0x0, y)
     DCE:	0C00      	**prefx    0xC
     DCF:	4B18      	ld         x, #+0xC4B
     DD0:	012B      	st         x, @(+0x1, y)
     DD1:	0200      	**prefx    0x2
     DD2:	C910      	ld         ah, #+0x1C9
     DD3:	C400      	**prefx    0xC4
     DD4:	8014      	ld         al, #-0x3C80
     DD5:	0100      	**prefx    0x1
     DD6:	D300      	**prefx    0xD3
     DD7:	249C      	bsr        +0xD324 <TimerCreate:0xE0FB[p]>
     DD8:	4C00      	**prefx    0x4C
     DD9:	8E25      	st         al, @0x4B8E <g_app_data+0x1A>
     DDA:	0200      	**prefx    0x2
     DDB:	19E0      	bra        +0x219 <.JTBASE239+0x132:0xFF4[p]>
 *----------------------------------------------------------------------------*/
static void handleSignalLMEncryptionChange(
                    HCI_EV_DATA_ENCRYPTION_CHANGE_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     DDC:	4B00      	**prefx    0x4B
     DDD:	7415      	ld         al, @0x4B74 <g_app_data>
     DDE:	0484      	cmp        al, #+0x4
     DDF:	0200      	**prefx    0x2
     DE0:	E1F0      	bne        +0x1E1 <.JTBASE239+0xFF:0xFC1[p]>
    {
        case app_state_connected:
        {
            if(p_event_data->status == sys_status_success)
     DE1:	041B      	ld         x, @(+0x4, y)
     DE2:	019A      	tst        @(+0x1, x)
     DE3:	0200      	**prefx    0x2
     DE4:	10F0      	bne        +0x210 <.JTBASE239+0x132:0xFF4[p]>
            {
                if(g_adv_count != 0)
     DE5:	4B00      	**prefx    0x4B
     DE6:	E399      	tst        @0x4AE3 <g_adv_count>
     DE7:	07F4      	beq        +0x7 <AppProcessLmEvent+0x15E:0xDEE[p]>
                {
                   /* A link loss reconnect had succeeded.
                    * Reset retry attempts.
                    */
                   g_adv_count = 0;
     DE8:	0014      	ld         al, #+0x0
     DE9:	4B00      	**prefx    0x4B
     DEA:	E325      	st         al, @0x4AE3 <g_adv_count>
                   
                   /* Try to send data, if any pending in queue */
                   ProcessRxData();
     DEB:	0400      	**prefx    0x4
     DEC:	8B9C      	bsr        +0x38B <ProcessRxData:0x1177[p]>
     DED:	03E0      	bra        +0x3 <AppProcessLmEvent+0x160:0xDF0[p]>
                }
                else
                {
                    /* Fresh Connection.Clear UART buffers */
                    emptySendRecvBuffers();
     DEE:	F900      	**prefx    0xF9
     DEF:	659C      	bsr        -0x69B <emptySendRecvBuffers:0x754[p]>
                } 
                
                g_app_data.encrypt_enabled = p_event_data->enc_enable;
     DF0:	041B      	ld         x, @(+0x4, y)
     DF1:	0316      	ld         al, @(+0x3, x)
     DF2:	4C00      	**prefx    0x4C
     DF3:	8D25      	st         al, @0x4B8D <g_app_data+0x19>

                if(g_app_data.encrypt_enabled)
     DF4:	0200      	**prefx    0x2
     DF5:	FFF4      	beq        +0x1FF <.JTBASE239+0x132:0xFF4[p]>
                {
                    /* Delete the bonding chance timer, if running */
                    if (g_app_data.bonding_reattempt_tid != TIMER_INVALID)
     DF6:	4C00      	**prefx    0x4C
     DF7:	8E15      	ld         al, @0x4B8E <g_app_data+0x1A>
     DF8:	07F4      	beq        +0x7 <AppProcessLmEvent+0x16F:0xDFF[p]>
                    {
                        TimerDelete(g_app_data.bonding_reattempt_tid);
     DF9:	0100      	**prefx    0x1
     DFA:	D200      	**prefx    0xD2
     DFB:	449C      	bsr        +0xD244 <TimerDelete:0xE03F[p]>
                        g_app_data.bonding_reattempt_tid = TIMER_INVALID;
     DFC:	0014      	ld         al, #+0x0
     DFD:	4C00      	**prefx    0x4C
     DFE:	8E25      	st         al, @0x4B8E <g_app_data+0x1A>

                    /* Update battery status at every connection instance. It
                     * may not be worth updating timer this often, but this will
                     * depend upon application requirements.
                     */
                    BatteryUpdateLevel(g_app_data.st_ucid);
     DFF:	4B00      	**prefx    0x4B
     E00:	7A15      	ld         al, @0x4B7A <g_app_data+0x6>
     E01:	F700      	**prefx    0xF7
     E02:	D59C      	bsr        -0x92B <BatteryUpdateLevel:0x4D7[p]>
     E03:	0200      	**prefx    0x2
     E04:	F0E0      	bra        +0x1F0 <.JTBASE239+0x132:0xFF4[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalSmDivApproveInd(SM_DIV_APPROVE_IND_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     E05:	4B00      	**prefx    0x4B
     E06:	7415      	ld         al, @0x4B74 <g_app_data>
     E07:	0484      	cmp        al, #+0x4
     E08:	0200      	**prefx    0x2
     E09:	B8F0      	bne        +0x1B8 <.JTBASE239+0xFF:0xFC1[p]>
            /* Check whether the application is still bonded (bonded flag gets
             * reset upon 'connect' button press by the user). Then check
             * whether the diversifier is the same as the one stored by the
             * application
             */
            if(g_app_data.bonded)
     E0A:	4B00      	**prefx    0x4B
     E0B:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     E0C:	07F4      	beq        +0x7 <AppProcessLmEvent+0x183:0xE13[p]>
     E0D:	0010      	ld         ah, #+0x0
     E0E:	4C00      	**prefx    0x4C
     E0F:	8115      	ld         al, @0x4B81 <g_app_data+0xD>
     E10:	041B      	ld         x, @(+0x4, y)
     E11:	0286      	cmp        al, @(+0x2, x)
     E12:	02F4      	beq        +0x2 <AppProcessLmEvent+0x184:0xE14[p]>
     E13:	0110      	ld         ah, #+0x1
                {
                    approve_div = SM_DIV_APPROVED;
                }
            }

            SMDivApproval(p_event_data->cid, approve_div);
     E14:	041B      	ld         x, @(+0x4, y)
     E15:	0116      	ld         al, @(+0x1, x)
     E16:	F400      	**prefx    0xF4
     E17:	4D9C      	bsr        -0xBB3 <SMDivApproval:0x264[p]>
     E18:	0200      	**prefx    0x2
     E19:	DBE0      	bra        +0x1DB <.JTBASE239+0x132:0xFF4[p]>
        case GATT_ACCESS_IND:
            /* Indicates that an attribute controlled directly by the
             * application (ATT_ATTR_IRQ attribute flag is set) is being
             * read from or written to.
             */
            PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     E1A:	0B14      	ld         al, #+0xB
     E1B:	0010      	ld         ah, #+0x0
     E1C:	1500      	**prefx    0x15
     E1D:	079C      	bsr        +0x1507 <PioSetMode:0x2324[p]>
            PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     E1E:	0B14      	ld         al, #+0xB
     E1F:	0110      	ld         ah, #+0x1
     E20:	0100      	**prefx    0x1
     E21:	E900      	**prefx    0xE9
     E22:	529C      	bsr        +0xE952 <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     E23:	0714      	ld         al, #+0x7
     E24:	0027      	st         al, @(0x0, y)
     E25:	0010      	ld         ah, #+0x0
     E26:	0800      	**prefx    0x8
     E27:	0014      	ld         al, #+0x800
     E28:	0100      	**prefx    0x1
     E29:	E800      	**prefx    0xE8
     E2A:	E29C      	bsr        +0xE7E2 <PioSetPullModes:0xF60C[p]>
            PioSet(LED_CTD,TRUE);
     E2B:	0B14      	ld         al, #+0xB
     E2C:	0110      	ld         ah, #+0x1
     E2D:	0100      	**prefx    0x1
     E2E:	E700      	**prefx    0xE7
     E2F:	7D9C      	bsr        +0xE77D <PioSet:0xF5AC[p]>
 *      Nothing
 *----------------------------------------------------------------------------*/
static void handleSignalGattAccessInd(GATT_ACCESS_IND_T *p_event_data)
{

    unsigned char *ch= p_event_data->value;
     E30:	041B      	ld         x, @(+0x4, y)
     E31:	061A      	ld         x, @(+0x6, x)
     E32:	032B      	st         x, @(+0x3, y)
    /* Handle signal as per current state */
    switch(g_app_data.state)
     E33:	4B00      	**prefx    0x4B
     E34:	7415      	ld         al, @0x4B74 <g_app_data>
     E35:	0484      	cmp        al, #+0x4
     E36:	0200      	**prefx    0x2
     E37:	8AF0      	bne        +0x18A <.JTBASE239+0xFF:0xFC1[p]>
    {
        case app_state_connected:
        {
            if(!Flag3)
     E38:	4B00      	**prefx    0x4B
     E39:	E799      	tst        @0x4AE7 <Flag3>
     E3A:	0100      	**prefx    0x1
     E3B:	FFF0      	bne        +0xFF <.JTBASE239+0x78:0xF3A[p]>
            {
                if(p_event_data->size_value ==1)
     E3C:	041B      	ld         x, @(+0x4, y)
     E3D:	0516      	ld         al, @(+0x5, x)
     E3E:	0184      	cmp        al, #+0x1
     E3F:	53F0      	bne        +0x53 <AppProcessLmEvent+0x202:0xE92[p]>
                {
                     Flag7=1;
     E40:	4B00      	**prefx    0x4B
     E41:	EA25      	st         al, @0x4AEA <Flag7>
                     switch((*ch))
     E42:	031B      	ld         x, @(+0x3, y)
     E43:	0016      	ld         al, @(0x0, x)
     E44:	0484      	cmp        al, #+0x4
     E45:	22F4      	beq        +0x22 <AppProcessLmEvent+0x1D7:0xE67[p]>
     E46:	0584      	cmp        al, #+0x5
     E47:	08F8      	bcc        +0x8 <AppProcessLmEvent+0x1BF:0xE4F[p]>
     E48:	0284      	cmp        al, #+0x2
     E49:	27F4      	beq        +0x27 <AppProcessLmEvent+0x1E0:0xE70[p]>
     E4A:	0384      	cmp        al, #+0x3
     E4B:	13F8      	bcc        +0x13 <AppProcessLmEvent+0x1CE:0xE5E[p]>
     E4C:	0184      	cmp        al, #+0x1
     E4D:	45F0      	bne        +0x45 <AppProcessLmEvent+0x202:0xE92[p]>
     E4E:	30E0      	bra        +0x30 <AppProcessLmEvent+0x1EE:0xE7E[p]>
     E4F:	3184      	cmp        al, #+0x31
     E50:	06F4      	beq        +0x6 <AppProcessLmEvent+0x1C6:0xE56[p]>
     E51:	3284      	cmp        al, #+0x32
     E52:	08F4      	beq        +0x8 <AppProcessLmEvent+0x1CA:0xE5A[p]>
     E53:	0584      	cmp        al, #+0x5
     E54:	3EF0      	bne        +0x3E <AppProcessLmEvent+0x202:0xE92[p]>
     E55:	22E0      	bra        +0x22 <AppProcessLmEvent+0x1E7:0xE77[p]>
                    {
                    case 0x31:
                              mode = MODE1;
     E56:	3114      	ld         al, #+0x31
     E57:	4B00      	**prefx    0x4B
     E58:	7025      	st         al, @0x4B70 <mode>
     E59:	39E0      	bra        +0x39 <AppProcessLmEvent+0x202:0xE92[p]>
                              
                              
                              break;
                    case 0x32:
                              mode = MODE2;
     E5A:	3218      	ld         x, #+0x32
     E5B:	4B00      	**prefx    0x4B
     E5C:	7029      	st         x, @0x4B70 <mode>
     E5D:	35E0      	bra        +0x35 <AppProcessLmEvent+0x202:0xE92[p]>
                              
                              break;
                              
                    case 0x03: 
                              
                              mode = MODE1;
     E5E:	3114      	ld         al, #+0x31
     E5F:	4B00      	**prefx    0x4B
     E60:	7025      	st         al, @0x4B70 <mode>
                              Flag4=0;
     E61:	0018      	ld         x, #+0x0
     E62:	4B00      	**prefx    0x4B
     E63:	E829      	st         x, @0x4AE8 <Flag4>
                              reg=0x00;
     E64:	4B00      	**prefx    0x4B
     E65:	ED29      	st         x, @0x4AED <reg>
     E66:	1BE0      	bra        +0x1B <AppProcessLmEvent+0x1F1:0xE81[p]>
                                 }
                              break;
                                        
                    case 0x04: 
                              
                              Flag4=1;
     E67:	0114      	ld         al, #+0x1
     E68:	4B00      	**prefx    0x4B
     E69:	E825      	st         al, @0x4AE8 <Flag4>
                              VFPWMStart(0xFF,0xFF);
     E6A:	0100      	**prefx    0x1
     E6B:	FF14      	ld         al, #+0xFF
     E6C:	E111      	ld         ah, @0xFFE1 <register al>
     E6D:	0700      	**prefx    0x7
     E6E:	EA9C      	bsr        +0x6EA <VFPWMStart:0x1558[p]>
     E6F:	23E0      	bra        +0x23 <AppProcessLmEvent+0x202:0xE92[p]>
                              /*DebugWriteString("Debug 04");*/
                              break;
                              
                    case 0x02:
                              
                              VFPWMStart(0xFF,0xFF);
     E70:	0100      	**prefx    0x1
     E71:	FF14      	ld         al, #+0xFF
     E72:	E111      	ld         ah, @0xFFE1 <register al>
     E73:	0700      	**prefx    0x7
     E74:	E49C      	bsr        +0x6E4 <VFPWMStart:0x1558[p]>
                              Flag5=1;
     E75:	0118      	ld         x, #+0x1
     E76:	05E0      	bra        +0x5 <AppProcessLmEvent+0x1EB:0xE7B[p]>
                              break;
                    
                    case 0x05:
                              
                              mode = MODE2;
     E77:	3214      	ld         al, #+0x32
     E78:	4B00      	**prefx    0x4B
     E79:	7025      	st         al, @0x4B70 <mode>
                              Flag5=0;
     E7A:	0018      	ld         x, #+0x0
     E7B:	4B00      	**prefx    0x4B
     E7C:	E929      	st         x, @0x4AE9 <Flag5>
     E7D:	15E0      	bra        +0x15 <AppProcessLmEvent+0x202:0xE92[p]>
                              break;
                   case 0x01:
                              reg=0x00;
     E7E:	0014      	ld         al, #+0x0
     E7F:	4B00      	**prefx    0x4B
     E80:	ED25      	st         al, @0x4AED <reg>
                                if(I2CAcquire())
     E81:	0800      	**prefx    0x8
     E82:	C39C      	bsr        +0x7C3 <I2CAcquire:0x1645[p]>
     E83:	E199      	tst        @0xFFE1 <register al>
     E84:	0EF4      	beq        +0xE <AppProcessLmEvent+0x202:0xE92[p]>
                                {
                                   I2CcommsInit();
     E85:	0800      	**prefx    0x8
     E86:	F99C      	bsr        +0x7F9 <I2CcommsInit:0x167F[p]>
                                   I2C_IO_Write(reg);
     E87:	4B00      	**prefx    0x4B
     E88:	ED15      	ld         al, @0x4AED <reg>
     E89:	0800      	**prefx    0x8
     E8A:	C49C      	bsr        +0x7C4 <I2C_IO_Write:0x164E[p]>
                                   I2CRelease(); 
     E8B:	0800      	**prefx    0x8
     E8C:	2B9C      	bsr        +0x82B <I2CRelease:0x16B7[p]>
                                   TimeDelayUSec(2* MILLISECOND);
     E8D:	0800      	**prefx    0x8
     E8E:	D014      	ld         al, #+0x7D0
     E8F:	0100      	**prefx    0x1
     E90:	A500      	**prefx    0xA5
     E91:	CB9C      	bsr        +0xA4CB <TimeDelayUSec:0xB35C[p]>
                
            }
            
            
            
            if(p_event_data->size_value ==2)
     E92:	041B      	ld         x, @(+0x4, y)
     E93:	0516      	ld         al, @(+0x5, x)
     E94:	0284      	cmp        al, #+0x2
     E95:	0100      	**prefx    0x1
     E96:	82F0      	bne        +0x82 <.JTBASE239+0x56:0xF18[p]>
            {
                 switch((*ch++))
     E97:	031B      	ld         x, @(+0x3, y)
     E98:	0016      	ld         al, @(0x0, x)
     E99:	5284      	cmp        al, #+0x52
     E9A:	10F4      	beq        +0x10 <AppProcessLmEvent+0x21A:0xEAA[p]>
     E9B:	5784      	cmp        al, #+0x57
     E9C:	04F4      	beq        +0x4 <AppProcessLmEvent+0x210:0xEA0[p]>
     E9D:	4984      	cmp        al, #+0x49
     E9E:	7AF0      	bne        +0x7A <.JTBASE239+0x56:0xF18[p]>
     E9F:	15E0      	bra        +0x15 <AppProcessLmEvent+0x224:0xEB4[p]>
                 {
                     case 0x57:
                             Flag7=1;
     EA0:	0114      	ld         al, #+0x1
     EA1:	4B00      	**prefx    0x4B
     EA2:	EA25      	st         al, @0x4AEA <Flag7>
                            {
                                 w_int = (uint8)*ch++;
                                 w_int = 0Xff- w_int;
     EA3:	0100      	**prefx    0x1
     EA4:	FF14      	ld         al, #+0xFF
     EA5:	031B      	ld         x, @(+0x3, y)
     EA6:	0156      	sub        al, @(+0x1, x)
     EA7:	8D00      	**prefx    0x8D
     EA8:	9625      	st         al, @0x8C96 <w_int>
     EA9:	6FE0      	bra        +0x6F <.JTBASE239+0x56:0xF18[p]>
                         
                            }
                            break;
                            
                       case 0x52:
                            Flag7=1;
     EAA:	0118      	ld         x, #+0x1
     EAB:	4B00      	**prefx    0x4B
     EAC:	EA29      	st         x, @0x4AEA <Flag7>
                            {
                                ir_int = (uint8)*ch++;
                                ir_int = 0Xff- ir_int;
     EAD:	0100      	**prefx    0x1
     EAE:	FF14      	ld         al, #+0xFF
     EAF:	031B      	ld         x, @(+0x3, y)
     EB0:	0156      	sub        al, @(+0x1, x)
     EB1:	8D00      	**prefx    0x8D
     EB2:	9725      	st         al, @0x8C97 <ir_int>
     EB3:	65E0      	bra        +0x65 <.JTBASE239+0x56:0xF18[p]>
                                
                            }
                            break;
                            
                       case 0x49:
                            Flag7=0;
     EB4:	0018      	ld         x, #+0x0
     EB5:	4B00      	**prefx    0x4B
     EB6:	EA29      	st         x, @0x4AEA <Flag7>
                            {
                                io_led = (uint8)*ch++;
     EB7:	031B      	ld         x, @(+0x3, y)
     EB8:	0116      	ld         al, @(+0x1, x)
     EB9:	4B00      	**prefx    0x4B
     EBA:	7125      	st         al, @0x4B71 <io_led>
                                
                                switch(io_led)
     EBB:	1084      	cmp        al, #+0x10
     EBC:	4BF8      	bcc        +0x4B <.JTBASE239+0x45:0xF07[p]>
     EBD:	E119      	ld         x, @0xFFE1 <register al>
     EBE:	4A00      	**prefx    0x4A
     EBF:	6E16      	ld         al, @(+0x4A6E, x)
     EC0:	E119      	ld         x, @0xFFE1 <register al>
     EC1:	FE09      	brxl       

0x00000EC2 <.JTBASE239>:
                                { 
                                    case 0x00:
                                              {
                                                reg &= ~(0x01);
     EC2:	4B00      	**prefx    0x4B
     EC3:	ED15      	ld         al, @0x4AED <reg>
     EC4:	FEC4      	and        al, #0xFFFE
     EC5:	08E0      	bra        +0x8 <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;
                                    case 0x01:
                                              {
                                                reg |= (0x01);
     EC6:	4B00      	**prefx    0x4B
     EC7:	ED19      	ld         x, @0x4AED <reg>
     EC8:	01B8      	or         x, #+0x1
     EC9:	3CE0      	bra        +0x3C <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break;
                                    case 0x02:
                                              {
                                                reg &= ~(0x02);
     ECA:	4B00      	**prefx    0x4B
     ECB:	ED15      	ld         al, @0x4AED <reg>
     ECC:	FDC4      	and        al, #0xFFFD
     ECD:	4B00      	**prefx    0x4B
     ECE:	ED25      	st         al, @0x4AED <reg>
     ECF:	38E0      	bra        +0x38 <.JTBASE239+0x45:0xF07[p]>
                                              }
                                              break;  
                                    case 0x03:
                                              {
                                                reg |= (0x02);
     ED0:	4B00      	**prefx    0x4B
     ED1:	ED19      	ld         x, @0x4AED <reg>
     ED2:	02B8      	or         x, #+0x2
     ED3:	32E0      	bra        +0x32 <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break;
                                    case 0x04:
                                              {
                                                reg &= ~(0x04); 
     ED4:	4B00      	**prefx    0x4B
     ED5:	ED15      	ld         al, @0x4AED <reg>
     ED6:	FBC4      	and        al, #0xFFFB
     ED7:	F6E0      	bra        -0xA <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;
                                              
                                    case 0x05:
                                              {
                                                reg |= (0x04); 
     ED8:	4B00      	**prefx    0x4B
     ED9:	ED19      	ld         x, @0x4AED <reg>
     EDA:	04B8      	or         x, #+0x4
     EDB:	2AE0      	bra        +0x2A <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break;
                                             
                                    case 0x06:
                                              {
                                                reg &= ~(0x08); 
     EDC:	4B00      	**prefx    0x4B
     EDD:	ED15      	ld         al, @0x4AED <reg>
     EDE:	F7C4      	and        al, #0xFFF7
     EDF:	EEE0      	bra        -0x12 <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;
                                              
                                     case 0x07:
                                              {
                                                reg |= (0x08); 
     EE0:	4B00      	**prefx    0x4B
     EE1:	ED19      	ld         x, @0x4AED <reg>
     EE2:	08B8      	or         x, #+0x8
     EE3:	22E0      	bra        +0x22 <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break;
                                      case 0x08:
                                              {
                                                reg &= ~(0x10);
     EE4:	4B00      	**prefx    0x4B
     EE5:	ED15      	ld         al, @0x4AED <reg>
     EE6:	EFC4      	and        al, #0xFFEF
     EE7:	E6E0      	bra        -0x1A <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;  
                                              
                                      case 0x09:
                                              {
                                                reg |= (0x10);
     EE8:	4B00      	**prefx    0x4B
     EE9:	ED19      	ld         x, @0x4AED <reg>
     EEA:	10B8      	or         x, #+0x10
     EEB:	1AE0      	bra        +0x1A <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break; 
                                              
                                      case 0x0a:
                                              {
                                                reg &= ~(0x01<<5);
     EEC:	4B00      	**prefx    0x4B
     EED:	ED15      	ld         al, @0x4AED <reg>
     EEE:	DFC4      	and        al, #0xFFDF
     EEF:	DEE0      	bra        -0x22 <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;
                                              
                                      case 0x0b:
                                              {
                                                reg |= (0x20);
     EF0:	4B00      	**prefx    0x4B
     EF1:	ED19      	ld         x, @0x4AED <reg>
     EF2:	20B8      	or         x, #+0x20
     EF3:	12E0      	bra        +0x12 <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break;
                                              
                                       case 0x0c:
                                              {
                                                reg &= ~(0x40);
     EF4:	4B00      	**prefx    0x4B
     EF5:	ED15      	ld         al, @0x4AED <reg>
     EF6:	BFC4      	and        al, #0xFFBF
     EF7:	D6E0      	bra        -0x2A <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;
                                              
                                       case 0x0d:
                                              {
                                                reg |= (0x40);
     EF8:	4B00      	**prefx    0x4B
     EF9:	ED19      	ld         x, @0x4AED <reg>
     EFA:	40B8      	or         x, #+0x40
     EFB:	0AE0      	bra        +0xA <.JTBASE239+0x43:0xF05[p]>
                                              }
                                              break;
                                              
                                       case 0x0e:
                                              {
                                                reg &= ~(0x80);
     EFC:	4B00      	**prefx    0x4B
     EFD:	ED15      	ld         al, @0x4AED <reg>
     EFE:	FF00      	**prefx    0xFF
     EFF:	7FC4      	and        al, #0xFF7F
     F00:	CDE0      	bra        -0x33 <.JTBASE239+0xB:0xECD[p]>
                                              }
                                              break;
                                              
                                       case 0x0f:
                                              {
                                               reg |= (0x80);
     F01:	4B00      	**prefx    0x4B
     F02:	ED19      	ld         x, @0x4AED <reg>
     F03:	0100      	**prefx    0x1
     F04:	80B8      	or         x, #+0x80
     F05:	4B00      	**prefx    0x4B
     F06:	ED29      	st         x, @0x4AED <reg>
                                              }
                                              break;
                                }
                                
                                if(I2CAcquire())
     F07:	0700      	**prefx    0x7
     F08:	3D9C      	bsr        +0x73D <I2CAcquire:0x1645[p]>
     F09:	E199      	tst        @0xFFE1 <register al>
     F0A:	0EF4      	beq        +0xE <.JTBASE239+0x56:0xF18[p]>
                                {
                                    I2CcommsInit();
     F0B:	0700      	**prefx    0x7
     F0C:	739C      	bsr        +0x773 <I2CcommsInit:0x167F[p]>
                                    I2C_IO_Write(reg);
     F0D:	4B00      	**prefx    0x4B
     F0E:	ED15      	ld         al, @0x4AED <reg>
     F0F:	0700      	**prefx    0x7
     F10:	3E9C      	bsr        +0x73E <I2C_IO_Write:0x164E[p]>
                                    I2CRelease(); 
     F11:	0800      	**prefx    0x8
     F12:	A59C      	bsr        +0x7A5 <I2CRelease:0x16B7[p]>
                                    TimeDelayUSec(2* MILLISECOND);
     F13:	0800      	**prefx    0x8
     F14:	D014      	ld         al, #+0x7D0
     F15:	0100      	**prefx    0x1
     F16:	A400      	**prefx    0xA4
     F17:	459C      	bsr        +0xA445 <TimeDelayUSec:0xB35C[p]>
                }*/
            }
            
          
           
            if((!Flag5)&&(Flag7))
     F18:	4B00      	**prefx    0x4B
     F19:	E999      	tst        @0x4AE9 <Flag5>
     F1A:	20F0      	bne        +0x20 <.JTBASE239+0x78:0xF3A[p]>
     F1B:	4B00      	**prefx    0x4B
     F1C:	EA99      	tst        @0x4AEA <Flag7>
     F1D:	1DF4      	beq        +0x1D <.JTBASE239+0x78:0xF3A[p]>
            {
          if(!Flag4)
     F1E:	4B00      	**prefx    0x4B
     F1F:	E899      	tst        @0x4AE8 <Flag4>
     F20:	1AF0      	bne        +0x1A <.JTBASE239+0x78:0xF3A[p]>
          {  
            if(mode == MODE1)
     F21:	4B00      	**prefx    0x4B
     F22:	7015      	ld         al, @0x4B70 <mode>
     F23:	3184      	cmp        al, #+0x31
     F24:	0BF0      	bne        +0xB <.JTBASE239+0x6D:0xF2F[p]>
            {
                VFPWMStart(0xFF,w_int);
     F25:	0100      	**prefx    0x1
     F26:	FF14      	ld         al, #+0xFF
     F27:	8D00      	**prefx    0x8D
     F28:	9611      	ld         ah, @0x8C96 <w_int>
     F29:	0600      	**prefx    0x6
     F2A:	2E9C      	bsr        +0x62E <VFPWMStart:0x1558[p]>
                   I2CcommsInit();
                   I2C_IO_Write(reg);
                   I2CRelease(); 
                   TimeDelayUSec(2* MILLISECOND);
                 }*/
                Flag7=0;
     F2B:	0014      	ld         al, #+0x0
     F2C:	4B00      	**prefx    0x4B
     F2D:	EA25      	st         al, @0x4AEA <Flag7>
     F2E:	0CE0      	bra        +0xC <.JTBASE239+0x78:0xF3A[p]>
            }
            else if(mode == MODE2)
     F2F:	3284      	cmp        al, #+0x32
     F30:	0AF0      	bne        +0xA <.JTBASE239+0x78:0xF3A[p]>
            {
                       
               VFPWMStart(ir_int,0xFF);
     F31:	8D00      	**prefx    0x8D
     F32:	9715      	ld         al, @0x8C97 <ir_int>
     F33:	0100      	**prefx    0x1
     F34:	FF10      	ld         ah, #+0xFF
     F35:	0600      	**prefx    0x6
     F36:	229C      	bsr        +0x622 <VFPWMStart:0x1558[p]>
               Flag7=0;
     F37:	0018      	ld         x, #+0x0
     F38:	4B00      	**prefx    0x4B
     F39:	EA29      	st         x, @0x4AEA <Flag7>
        
            }
            
     
            /* Received GATT ACCESS IND with write access */
            if(p_event_data->flags ==
     F3A:	041B      	ld         x, @(+0x4, y)
     F3B:	0316      	ld         al, @(+0x3, x)
     F3C:	C000      	**prefx    0xC0
     F3D:	0284      	cmp        al, #-0x3FFE
     F3E:	08F0      	bne        +0x8 <.JTBASE239+0x84:0xF46[p]>
                (ATT_ACCESS_WRITE |
                 ATT_ACCESS_PERMISSION |
                 ATT_ACCESS_WRITE_COMPLETE))
            { 
                /* Reset the idle timer */
                resetIdleTimer();
     F3F:	F800      	**prefx    0xF8
     F40:	A09C      	bsr        -0x860 <resetIdleTimer:0x6E0[p]>
                
                HandleAccessWrite(p_event_data);
     F41:	0417      	ld         al, @(+0x4, y)
     F42:	0200      	**prefx    0x2
     F43:	B29C      	bsr        +0x1B2 <HandleAccessWrite:0x10F5[p]>
     F44:	0100      	**prefx    0x1
     F45:	AFE0      	bra        +0xAF <.JTBASE239+0x132:0xFF4[p]>
            }
            /* Received GATT ACCESS IND with read access */
            else if(p_event_data->flags ==
     F46:	8000      	**prefx    0x80
     F47:	0184      	cmp        al, #-0x7FFF
     F48:	08F0      	bne        +0x8 <.JTBASE239+0x8E:0xF50[p]>
                (ATT_ACCESS_READ |
                ATT_ACCESS_PERMISSION))
            {
                /* Reset the idle timer */
                resetIdleTimer();
     F49:	F800      	**prefx    0xF8
     F4A:	969C      	bsr        -0x86A <resetIdleTimer:0x6E0[p]>
                
                HandleAccessRead(p_event_data);
     F4B:	0417      	ld         al, @(+0x4, y)
     F4C:	0200      	**prefx    0x2
     F4D:	DF9C      	bsr        +0x1DF <HandleAccessRead:0x112C[p]>
     F4E:	0100      	**prefx    0x1
     F4F:	A5E0      	bra        +0xA5 <.JTBASE239+0x132:0xFF4[p]>
            }
            else
            {
                /* No other request is supported */
                GattAccessRsp(p_event_data->cid, p_event_data->handle,
     F50:	041B      	ld         x, @(+0x4, y)
     F51:	0116      	ld         al, @(+0x1, x)
     F52:	0212      	ld         ah, @(+0x2, x)
     F53:	0A00      	**prefx    0xA
     F54:	0618      	ld         x, #+0xA06
     F55:	002B      	st         x, @(0x0, y)
     F56:	0018      	ld         x, #+0x0
     F57:	012B      	st         x, @(+0x1, y)
     F58:	022B      	st         x, @(+0x2, y)
     F59:	0100      	**prefx    0x1
     F5A:	A100      	**prefx    0xA1
     F5B:	239C      	bsr        +0xA123 <GattAccessRsp:0xB07E[p]>
     F5C:	0100      	**prefx    0x1
     F5D:	97E0      	bra        +0x97 <.JTBASE239+0x132:0xFF4[p]>
            /* Disconnect procedure triggered by remote host or due to
             * link loss is considered complete on reception of
             * LM_EV_DISCONNECT_COMPLETE event. So, it gets handled on
             * reception of LM_EV_DISCONNECT_COMPLETE event.
             */
            PioSetMode(LED_CTD, pio_mode_user);         /*000 ====================> State-0 */
     F5E:	0B14      	ld         al, #+0xB
     F5F:	0010      	ld         ah, #+0x0
     F60:	1400      	**prefx    0x14
     F61:	C39C      	bsr        +0x13C3 <PioSetMode:0x2324[p]>
            PioSetDir(LED_CTD, PIO_DIRECTION_OUTPUT);
     F62:	0B14      	ld         al, #+0xB
     F63:	0110      	ld         ah, #+0x1
     F64:	0100      	**prefx    0x1
     F65:	E800      	**prefx    0xE8
     F66:	0E9C      	bsr        +0xE80E <PioSetDir:0xF774[p]>
            PioSetPullModes((1UL<<LED_CTD), pio_mode_strong_pull_up);
     F67:	0714      	ld         al, #+0x7
     F68:	0027      	st         al, @(0x0, y)
     F69:	0010      	ld         ah, #+0x0
     F6A:	0800      	**prefx    0x8
     F6B:	0014      	ld         al, #+0x800
     F6C:	0100      	**prefx    0x1
     F6D:	E700      	**prefx    0xE7
     F6E:	9E9C      	bsr        +0xE69E <PioSetPullModes:0xF60C[p]>
            PioSet(LED_CTD,FALSE);   
     F6F:	0B14      	ld         al, #+0xB
     F70:	0010      	ld         ah, #+0x0
     F71:	0100      	**prefx    0x1
     F72:	E600      	**prefx    0xE6
     F73:	399C      	bsr        +0xE639 <PioSet:0xF5AC[p]>
            VFPWMStart(0xFF,0xFF);
     F74:	0100      	**prefx    0x1
     F75:	FF14      	ld         al, #+0xFF
     F76:	E111      	ld         ah, @0xFFE1 <register al>
     F77:	0600      	**prefx    0x6
     F78:	E09C      	bsr        +0x5E0 <VFPWMStart:0x1558[p]>
             HandlePairingRemoval();
     F79:	FD00      	**prefx    0xFD
     F7A:	EA9C      	bsr        -0x316 <HandlePairingRemoval:0xC64[p]>
     F7B:	79E0      	bra        +0x79 <.JTBASE239+0x132:0xFF4[p]>
 *----------------------------------------------------------------------------*/
static void handleSignalLmDisconnectComplete(
                HCI_EV_DATA_DISCONNECT_COMPLETE_T *p_event_data)
{
#ifdef ENABLE_OTA
    if(OtaResetRequired())
     F7C:	0400      	**prefx    0x4
     F7D:	B89C      	bsr        +0x3B8 <OtaResetRequired:0x1335[p]>
     F7E:	E199      	tst        @0xFFE1 <register al>
     F7F:	04F4      	beq        +0x4 <.JTBASE239+0xC1:0xF83[p]>
    {
        OtaReset();
     F80:	0700      	**prefx    0x7
     F81:	3B9C      	bsr        +0x73B <OtaReset:0x16BC[p]>
     F82:	72E0      	bra        +0x72 <.JTBASE239+0x132:0xFF4[p]>
    }
    else
#endif /* ENABLE_OTA */
    {
        /* Set UCID to INVALID_UCID */
        g_app_data.st_ucid = GATT_INVALID_UCID;
     F83:	FF18      	ld         x, #-0x1
     F84:	4B00      	**prefx    0x4B
     F85:	7A29      	st         x, @0x4B7A <g_app_data+0x6>
         * HCI_ERROR_CONN_TERM_LOCAL_HOST - Disconnect triggered by device
         * HCI_ERROR_OETC_* - Other end (i.e., remote host) terminated 
         * connection
         */
        /* Handle signal as per current state */
        switch(g_app_data.state)
     F86:	4B00      	**prefx    0x4B
     F87:	7415      	ld         al, @0x4B74 <g_app_data>
     F88:	0484      	cmp        al, #+0x4
     F89:	04F4      	beq        +0x4 <.JTBASE239+0xCB:0xF8D[p]>
     F8A:	0584      	cmp        al, #+0x5
     F8B:	36F0      	bne        +0x36 <.JTBASE239+0xFF:0xFC1[p]>
     F8C:	03E0      	bra        +0x3 <.JTBASE239+0xCD:0xF8F[p]>
        {
            case app_state_connected:
                /* Initialise Application data instance */
                appDataInit();
     F8D:	F800      	**prefx    0xF8
     F8E:	CE9C      	bsr        -0x832 <appDataInit:0x75C[p]>
                /* FALLTHROUGH */

            case app_state_disconnecting:
            {
                /* Link Loss Case */
                if(p_event_data->reason == HCI_ERROR_CONN_TIMEOUT)
     F8F:	041B      	ld         x, @(+0x4, y)
     F90:	0312      	ld         ah, @(+0x3, x)
     F91:	0880      	cmp        ah, #+0x8
     F92:	13F0      	bne        +0x13 <.JTBASE239+0xE3:0xFA5[p]>
                {
                    /* If advertising count is less than retry
                     * attempts,start advertisements 
                     */
                    if(g_adv_count<MAX_RETRY_ADVERT_ATTEMPT) 
     F93:	4B00      	**prefx    0x4B
     F94:	E315      	ld         al, @0x4AE3 <g_adv_count>
     F95:	0384      	cmp        al, #+0x3
     F96:	09F8      	bcc        +0x9 <.JTBASE239+0xDD:0xF9F[p]>
                    {
                        /* Start either directed or fast advertisment */        
                        appStartAdvert();
     F97:	FD00      	**prefx    0xFD
     F98:	A59C      	bsr        -0x35B <appStartAdvert:0xC3D[p]>
                        
                        /* Increment the number of times we have started
                         * advertisements in case of link loss
                         */ 
                        g_adv_count++;
     F99:	4B00      	**prefx    0x4B
     F9A:	E315      	ld         al, @0x4AE3 <g_adv_count>
     F9B:	0134      	add        al, #+0x1
     F9C:	4B00      	**prefx    0x4B
     F9D:	E325      	st         al, @0x4AE3 <g_adv_count>
     F9E:	56E0      	bra        +0x56 <.JTBASE239+0x132:0xFF4[p]>
                    }
                    else
                    {
                        /* Clear the UART buffers with existing data */
                        emptySendRecvBuffers();
     F9F:	F800      	**prefx    0xF8
     FA0:	B49C      	bsr        -0x84C <emptySendRecvBuffers:0x754[p]>
                        
                        /* Reset the advertisment count */                  
                        g_adv_count = 0;
     FA1:	0014      	ld         al, #+0x0
     FA2:	4B00      	**prefx    0x4B
     FA3:	E325      	st         al, @0x4AE3 <g_adv_count>
     FA4:	1AE0      	bra        +0x1A <.JTBASE239+0xFC:0xFBE[p]>
                        
                        /* Set the app to idle state */
                        AppSetState(app_state_idle);
                    }
                }
                else if(p_event_data->reason == HCI_ERROR_CONN_TERM_LOCAL_HOST)
     FA5:	1680      	cmp        ah, #+0x16
     FA6:	0EF0      	bne        +0xE <.JTBASE239+0xF2:0xFB4[p]>
                {
                    if(g_app_data.state == app_state_connected)
     FA7:	4B00      	**prefx    0x4B
     FA8:	7415      	ld         al, @0x4B74 <g_app_data>
     FA9:	0484      	cmp        al, #+0x4
     FAA:	0FF4      	beq        +0xF <.JTBASE239+0xF7:0xFB9[p]>
                        AppSetState(app_state_fast_advertising);
                    }
                    else
                    {
                        /* Case when application has triggered disconnect */
                        if(g_app_data.bonded)
     FAB:	4B00      	**prefx    0x4B
     FAC:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     FAD:	0AF4      	beq        +0xA <.JTBASE239+0xF5:0xFB7[p]>
                        {
                            /* Move to idle state */
                            AppSetState(app_state_idle);
     FAE:	0614      	ld         al, #+0x6
     FAF:	FC00      	**prefx    0xFC
     FB0:	B89C      	bsr        -0x448 <AppSetState:0xB68[p]>
                            
                            /* Clear the UART buffers with existing data */
                            emptySendRecvBuffers();
     FB1:	F800      	**prefx    0xF8
     FB2:	A29C      	bsr        -0x85E <emptySendRecvBuffers:0x754[p]>
     FB3:	41E0      	bra        +0x41 <.JTBASE239+0x132:0xFF4[p]>
                     * value like device name and disconnected. The application
                     * should be connectable because the same remote device may
                     * want to reconnect and bond. If not the application
                     * should be discoverable by other devices.
                     */
                    if(!g_app_data.bonded)
     FB4:	4B00      	**prefx    0x4B
     FB5:	7B99      	tst        @0x4B7B <g_app_data+0x7>
     FB6:	06F0      	bne        +0x6 <.JTBASE239+0xFA:0xFBC[p]>
                    {
                        /* Clear the UART buffers with existing data */
                        emptySendRecvBuffers();
     FB7:	F800      	**prefx    0xF8
     FB8:	9C9C      	bsr        -0x864 <emptySendRecvBuffers:0x754[p]>
                        
                        AppSetState( app_state_fast_advertising);
     FB9:	0114      	ld         al, #+0x1
     FBA:	FD00      	**prefx    0xFD
     FBB:	45E0      	bra        -0x2BB <AppProcessLmEvent+0x70:0xD00[p]>
                    }
                    /* Case when disconnect is triggered by a bonded Host */
                    else 
                    {
                        /* Clear the UART buffers with existing data */
                        emptySendRecvBuffers();
     FBC:	F800      	**prefx    0xF8
     FBD:	979C      	bsr        -0x869 <emptySendRecvBuffers:0x754[p]>
                        
                        AppSetState( app_state_idle);
     FBE:	0614      	ld         al, #+0x6
     FBF:	FD00      	**prefx    0xFD
     FC0:	40E0      	bra        -0x2C0 <AppProcessLmEvent+0x70:0xD00[p]>
            }
            break;

            default:
                /* Control should never come here */
                ReportPanic(app_panic_invalid_state);
     FC1:	0A14      	ld         al, #+0xA
     FC2:	FC00      	**prefx    0xFC
     FC3:	A29C      	bsr        -0x45E <ReportPanic:0xB65[p]>
     FC4:	30E0      	bra        +0x30 <.JTBASE239+0x132:0xFF4[p]>
 *---------------------------------------------------------------------------*/

static void handleSignalLsRadioEventInd(LS_RADIO_EVENT_IND_T * p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     FC5:	4B00      	**prefx    0x4B
     FC6:	7415      	ld         al, @0x4B74 <g_app_data>
     FC7:	0484      	cmp        al, #+0x4
     FC8:	2CF0      	bne        +0x2C <.JTBASE239+0x132:0xFF4[p]>
    {
        case app_state_connected:
        {
            /* Check whether the channel is free to send data */
            if( p_event_data->radio == radio_event_tx_data )
     FC9:	041B      	ld         x, @(+0x4, y)
     FCA:	0216      	ld         al, @(+0x2, x)
     FCB:	0184      	cmp        al, #+0x1
     FCC:	28F0      	bne        +0x28 <.JTBASE239+0x132:0xFF4[p]>
            {
                g_radio_event_configured = FALSE;
     FCD:	0014      	ld         al, #+0x0
     FCE:	4B00      	**prefx    0x4B
     FCF:	E225      	st         al, @0x4AE2 <g_radio_event_configured>
                
                /* Disable further radio events. */
                LsRadioEventNotification(p_event_data->cid, radio_event_none);
     FD0:	0116      	ld         al, @(+0x1, x)
     FD1:	0010      	ld         ah, #+0x0
     FD2:	0900      	**prefx    0x9
     FD3:	109C      	bsr        +0x910 <LsRadioEventNotification:0x18E3[p]>
     FD4:	0DE0      	bra        +0xD <.JTBASE239+0x11F:0xFE1[p]>
 *----------------------------------------------------------------------------*/
static void handleSignalGattNotificationCfm(
                                         GATT_CHAR_VAL_IND_CFM_T *p_event_data)
{
    /* Handle signal as per current state */
    switch(g_app_data.state)
     FD5:	4B00      	**prefx    0x4B
     FD6:	7415      	ld         al, @0x4B74 <g_app_data>
     FD7:	0484      	cmp        al, #+0x4
     FD8:	1CF0      	bne        +0x1C <.JTBASE239+0x132:0xFF4[p]>
    {
        case app_state_connected:
        {
            if(p_event_data->result == sys_status_success)
     FD9:	041B      	ld         x, @(+0x4, y)
     FDA:	0216      	ld         al, @(+0x2, x)
     FDB:	09F0      	bne        +0x9 <.JTBASE239+0x122:0xFE4[p]>
            {
                /* remove the last sent message from the queue */
                setLastNotificationResult(TRUE);
     FDC:	0114      	ld         al, #+0x1
     FDD:	F800      	**prefx    0xF8
     FDE:	BB9C      	bsr        -0x845 <setLastNotificationResult:0x799[p]>
                
                /* reset idle timer */
                resetIdleTimer();
     FDF:	F700      	**prefx    0xF7
     FE0:	009C      	bsr        -0x900 <resetIdleTimer:0x6E0[p]>
                
                /* Process Data */
                ProcessRxData();
     FE1:	0200      	**prefx    0x2
     FE2:	959C      	bsr        +0x195 <ProcessRxData:0x1177[p]>
     FE3:	11E0      	bra        +0x11 <.JTBASE239+0x132:0xFF4[p]>
            }
            else if(p_event_data->result == gatt_status_busy)
     FE4:	0A00      	**prefx    0xA
     FE5:	3584      	cmp        al, #+0xA35
     FE6:	0EF0      	bne        +0xE <.JTBASE239+0x132:0xFF4[p]>
            {
                 g_radio_event_configured = TRUE;
     FE7:	0114      	ld         al, #+0x1
     FE8:	4B00      	**prefx    0x4B
     FE9:	E225      	st         al, @0x4AE2 <g_radio_event_configured>
                 /* Enable radio events on Tx data. */
                 LsRadioEventNotification(p_event_data->cid, 
     FEA:	041B      	ld         x, @(+0x4, y)
     FEB:	0116      	ld         al, @(+0x1, x)
     FEC:	0110      	ld         ah, #+0x1
     FED:	0900      	**prefx    0x9
     FEE:	F59C      	bsr        +0x8F5 <LsRadioEventNotification:0x18E3[p]>
                                             radio_event_tx_data);
                 
                 /* Last notification failed. set the notification status */
                 setLastNotificationResult(FALSE);
     FEF:	0014      	ld         al, #+0x0
     FF0:	F800      	**prefx    0xF8
     FF1:	A89C      	bsr        -0x858 <setLastNotificationResult:0x799[p]>
                 
                 /* reset idle timer */
                resetIdleTimer();
     FF2:	F700      	**prefx    0xF7
     FF3:	ED9C      	bsr        -0x913 <resetIdleTimer:0x6E0[p]>
            /* Ignore any other event */
        break;

    }
    return TRUE;
}
     FF4:	0114      	ld         al, #+0x1
     FF5:	060F      	leave      #+0x6

0x00000FF6 <InitGattData>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void InitGattData(void)
{
    g_gatt_data.advert_timer_value = TIMER_INVALID;
     FF6:	0014      	ld         al, #+0x0
     FF7:	4B00      	**prefx    0x4B
     FF8:	1E25      	st         al, @0x4B1E <g_gatt_data>
     FF9:	4B00      	**prefx    0x4B
     FFA:	1F25      	st         al, @0x4B1F <g_gatt_data+0x1>
}
     FFB:	00E2      	bra        0x0, x

0x00000FFC <GetSupported128BitUUIDServiceList>:
 *
 *  RETURNS
 *      Size of AD Service UUID list
 *----------------------------------------------------------------------------*/
extern uint16 GetSupported128BitUUIDServiceList(uint8 *p_service_uuid_ad)
{
     FFC:	010B      	enter      #+0x1
     FFD:	E119      	ld         x, @0xFFE1 <register al>
    uint8   size_data = 0;              /* Size of AD Service UUID list */

    /* Add 128-bit UUID for supported main service */
    p_service_uuid_ad[size_data++] = AD_TYPE_SERVICE_UUID_128BIT_LIST;
     FFE:	0714      	ld         al, #+0x7
     FFF:	0026      	st         al, @(0x0, x)

    /* Add serial service UUID*/
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_16;
    1000:	0100      	**prefx    0x1
    1001:	A514      	ld         al, #+0xA5
    1002:	0126      	st         al, @(+0x1, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_15;
    1003:	0226      	st         al, @(+0x2, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_14;
    1004:	0014      	ld         al, #+0x0
    1005:	0326      	st         al, @(+0x3, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_13;
    1006:	5B14      	ld         al, #+0x5B
    1007:	0426      	st         al, @(+0x4, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_12;
    1008:	0214      	ld         al, #+0x2
    1009:	0526      	st         al, @(+0x5, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_11;
    100A:	0014      	ld         al, #+0x0
    100B:	0626      	st         al, @(+0x6, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_10;
    100C:	2314      	ld         al, #+0x23
    100D:	0726      	st         al, @(+0x7, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_9;
    100E:	7834      	add        al, #+0x78
    100F:	0826      	st         al, @(+0x8, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_8;
    1010:	4634      	add        al, #+0x46
    1011:	0926      	st         al, @(+0x9, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_7;
    1012:	1114      	ld         al, #+0x11
    1013:	0A26      	st         al, @(+0xA, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_6;
    1014:	0214      	ld         al, #+0x2
    1015:	0B26      	st         al, @(+0xB, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_5;
    1016:	0100      	**prefx    0x1
    1017:	D114      	ld         al, #+0xD1
    1018:	0C26      	st         al, @(+0xC, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_4;
    1019:	0014      	ld         al, #+0x0
    101A:	0D26      	st         al, @(+0xD, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_3;
    101B:	5514      	ld         al, #+0x55
    101C:	0E26      	st         al, @(+0xE, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_2;
    101D:	0014      	ld         al, #+0x0
    101E:	0F26      	st         al, @(+0xF, x)
    p_service_uuid_ad[size_data++] = UUID_SERIAL_SERVICE_1;
    101F:	1026      	st         al, @(+0x10, x)
    /* Add all the supported UUIDs in this function*/

    /* Return the size of AD service data. */
    return ((uint16)size_data);

}
    1020:	1114      	ld         al, #+0x11
    1021:	010F      	leave      #+0x1

0x00001022 <GattIsAddressResolvableRandom>:
 *  RETURNS
 *      TRUE if supplied address is a resolvable private address
 *      FALSE if supplied address is non-resolvable private address
 *----------------------------------------------------------------------------*/
extern bool GattIsAddressResolvableRandom(TYPED_BD_ADDR_T *p_addr)
{
    1022:	010B      	enter      #+0x1
    1023:	E119      	ld         x, @0xFFE1 <register al>
    if(p_addr->type != L2CA_RANDOM_ADDR_TYPE ||
    1024:	0016      	ld         al, @(0x0, x)
    1025:	0184      	cmp        al, #+0x1
    1026:	03F4      	beq        +0x3 <GattIsAddressResolvableRandom+0x7:0x1029[p]>
    1027:	0010      	ld         ah, #+0x0
    1028:	09E0      	bra        +0x9 <GattIsAddressResolvableRandom+0xF:0x1031[p]>
    1029:	0010      	ld         ah, #+0x0
    102A:	0416      	ld         al, @(+0x4, x)
    102B:	C000      	**prefx    0xC0
    102C:	00C4      	and        al, #0xC000
    102D:	4000      	**prefx    0x40
    102E:	0084      	cmp        al, #+0x4000
    102F:	02F0      	bne        +0x2 <GattIsAddressResolvableRandom+0xF:0x1031[p]>
    1030:	0110      	ld         ah, #+0x1
    {
        /* This is not a resolvable private address  */
        return FALSE;
    }
    return TRUE;
}
    1031:	E015      	ld         al, @0xFFE0 <register ah>
    1032:	010F      	leave      #+0x1

0x00001033 <GattStopAdverts>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void GattStopAdverts(void)
{
    1033:	010B      	enter      #+0x1
    switch(AppGetState())
    1034:	F700      	**prefx    0xF7
    1035:	849C      	bsr        -0x97C <AppGetState:0x6B9[p]>
    1036:	0184      	cmp        al, #+0x1
    1037:	04F4      	beq        +0x4 <GattStopAdverts+0x8:0x103B[p]>
    1038:	0284      	cmp        al, #+0x2
    1039:	0CF0      	bne        +0xC <GattStopAdverts+0x12:0x1045[p]>
    103A:	09E0      	bra        +0x9 <GattStopAdverts+0x10:0x1043[p]>
    {
        case app_state_fast_advertising:
        {
               /* Slow advertisement timer for reduced power connections. */
                g_gatt_data.advert_timer_value =
    103B:	0400      	**prefx    0x4
    103C:	9314      	ld         al, #+0x393
    103D:	4B00      	**prefx    0x4B
    103E:	1E25      	st         al, @0x4B1E <g_gatt_data>
    103F:	8700      	**prefx    0x87
    1040:	0014      	ld         al, #-0x7900
    1041:	4B00      	**prefx    0x4B
    1042:	1F25      	st         al, @0x4B1F <g_gatt_data+0x1>
         }
         break;

        case app_state_slow_advertising:
            /* Stop on-going advertisements */
            GattCancelConnectReq();
    1043:	0900      	**prefx    0x9
    1044:	5F9C      	bsr        +0x95F <GattCancelConnectReq:0x19A3[p]>

        default:
            /* Ignore timer in remaining states */
        break;
    }
}
    1045:	010F      	leave      #+0x1

0x00001046 <gattSetAdvertParams>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void gattSetAdvertParams(bool fast_connection,
                                gap_mode_connect connect_mode)
{
    1046:	300B      	enter      #+0x30
    1047:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1048:	2A23      	st         ah, @(+0x2A, y)
    /* Device appearance */
    uint8 device_appearance[ATTR_LEN_DEVICE_APPEARANCE + 1] = {
                AD_TYPE_APPEARANCE,
                WORD_LSB(APPEARANCE_APPLICATION_VALUE),
                WORD_MSB(APPEARANCE_APPLICATION_VALUE)
                };
    1049:	0314      	ld         al, #+0x3
    104A:	E411      	ld         ah, @0xFFE4 <register uy>
    104B:	0330      	add        ah, #+0x3
    104C:	4A00      	**prefx    0x4A
    104D:	7E18      	ld         x, #+0x4A7E
    104E:	FD09      	bc2        
     * Third byte is Flags description
     */
    uint16 length_added_to_adv = 3;
    
    temp_addr.type = ls_addr_type_public;
    MemCopy(&temp_addr.addr,
    104F:	4C00      	**prefx    0x4C
    1050:	8015      	ld         al, @0x4B80 <g_app_data+0xC>
    1051:	0A27      	st         al, @(+0xA, y)
    1052:	4B00      	**prefx    0x4B
    1053:	7F19      	ld         x, @0x4B7F <g_app_data+0xB>
    1054:	092B      	st         x, @(+0x9, y)
    1055:	4B00      	**prefx    0x4B
    1056:	7E15      	ld         al, @0x4B7E <g_app_data+0xA>
    1057:	0827      	st         al, @(+0x8, y)
    1058:	4B00      	**prefx    0x4B
    1059:	7D19      	ld         x, @0x4B7D <g_app_data+0x9>
    105A:	072B      	st         x, @(+0x7, y)
            &g_app_data.bonded_bd_addr.addr,
            sizeof(BD_ADDR_T));

    if(fast_connection)
    105B:	F899      	tst        @0xFFF8 <(scratchpad)>
    105C:	06F4      	beq        +0x6 <gattSetAdvertParams+0x1C:0x1062[p]>
    105D:	0014      	ld         al, #+0x0
    105E:	2D27      	st         al, @(+0x2D, y)
    105F:	EA00      	**prefx    0xEA
    1060:	6018      	ld         x, #-0x15A0
    1061:	05E0      	bra        +0x5 <gattSetAdvertParams+0x20:0x1066[p]>
    1062:	1314      	ld         al, #+0x13
    1063:	2D27      	st         al, @(+0x2D, y)
    1064:	8800      	**prefx    0x88
    1065:	0018      	ld         x, #-0x7800
    1066:	2E2B      	st         x, @(+0x2E, y)
    1067:	2B27      	st         al, @(+0x2B, y)
    1068:	2C2B      	st         x, @(+0x2C, y)
     * second byte is AD TYPE = 0x1
     * Third byte is Flags description
     */
    uint16 length_added_to_adv = 3;
    
    temp_addr.type = ls_addr_type_public;
    1069:	0014      	ld         al, #+0x0
    106A:	0627      	st         al, @(+0x6, y)
    {
        adv_interval_min = FC_ADVERTISING_INTERVAL_MIN;
        adv_interval_max = FC_ADVERTISING_INTERVAL_MAX;
    }
    
    if((GapSetMode(gap_role_peripheral, gap_mode_discover_general,
    106B:	2A1B      	ld         x, @(+0x2A, y)
    106C:	002B      	st         x, @(0x0, y)
    106D:	0214      	ld         al, #+0x2
    106E:	0127      	st         al, @(+0x1, y)
    106F:	0118      	ld         x, #+0x1
    1070:	022B      	st         x, @(+0x2, y)
    1071:	0314      	ld         al, #+0x3
    1072:	0310      	ld         ah, #+0x3
    1073:	7E00      	**prefx    0x7E
    1074:	889C      	bsr        +0x7D88 <GapSetMode:0x8DFC[p]>
    1075:	E199      	tst        @0xFFE1 <register al>
    1076:	14F0      	bne        +0x14 <gattSetAdvertParams+0x44:0x108A[p]>
    1077:	2A17      	ld         al, @(+0x2A, y)
    1078:	0284      	cmp        al, #+0x2
    1079:	07F0      	bne        +0x7 <gattSetAdvertParams+0x3A:0x1080[p]>
    107A:	E415      	ld         al, @0xFFE4 <register uy>
    107B:	0634      	add        al, #+0x6
    107C:	7E00      	**prefx    0x7E
    107D:	1A9C      	bsr        +0x7E1A <GapSetAdvAddress:0x8E97[p]>
    107E:	E199      	tst        @0xFFE1 <register al>
    107F:	0BF0      	bne        +0xB <gattSetAdvertParams+0x44:0x108A[p]>
    1080:	2B1B      	ld         x, @(+0x2B, y)
    1081:	002B      	st         x, @(0x0, y)
    1082:	2C17      	ld         al, @(+0x2C, y)
    1083:	0127      	st         al, @(+0x1, y)
    1084:	2D13      	ld         ah, @(+0x2D, y)
    1085:	2E17      	ld         al, @(+0x2E, y)
    1086:	7E00      	**prefx    0x7E
    1087:	E89C      	bsr        +0x7DE8 <GapSetAdvInterval:0x8E6F[p]>
    1088:	E199      	tst        @0xFFE1 <register al>
    1089:	04F4      	beq        +0x4 <gattSetAdvertParams+0x47:0x108D[p]>
                   GapSetAdvAddress(&temp_addr) 
                   != ls_err_none) ||
       (GapSetAdvInterval(adv_interval_min, adv_interval_max)
                        != ls_err_none))
    {
        ReportPanic(app_panic_set_advert_params);
    108A:	0014      	ld         al, #+0x0
    108B:	FB00      	**prefx    0xFB
    108C:	D99C      	bsr        -0x527 <ReportPanic:0xB65[p]>
    }

    /* Reset existing advertising data */
    if(LsStoreAdvScanData(0, NULL, ad_src_advertise) != ls_err_none)
    108D:	0018      	ld         x, #+0x0
    108E:	002B      	st         x, @(0x0, y)
    108F:	0014      	ld         al, #+0x0
    1090:	0010      	ld         ah, #+0x0
    1091:	0900      	**prefx    0x9
    1092:	B99C      	bsr        +0x8B9 <LsStoreAdvScanData:0x194B[p]>
    1093:	E199      	tst        @0xFFE1 <register al>
    1094:	04F4      	beq        +0x4 <gattSetAdvertParams+0x52:0x1098[p]>
    {
        ReportPanic(app_panic_set_advert_data);
    1095:	0114      	ld         al, #+0x1
    1096:	FB00      	**prefx    0xFB
    1097:	CE9C      	bsr        -0x532 <ReportPanic:0xB65[p]>
    }

    /* Reset existing scan response data */
    if(LsStoreAdvScanData(0, NULL, ad_src_scan_rsp) != ls_err_none)
    1098:	0114      	ld         al, #+0x1
    1099:	0027      	st         al, @(0x0, y)
    109A:	0014      	ld         al, #+0x0
    109B:	0010      	ld         ah, #+0x0
    109C:	0900      	**prefx    0x9
    109D:	AE9C      	bsr        +0x8AE <LsStoreAdvScanData:0x194B[p]>
    109E:	E199      	tst        @0xFFE1 <register al>
    109F:	04F4      	beq        +0x4 <gattSetAdvertParams+0x5D:0x10A3[p]>
    {
        ReportPanic(app_panic_set_scan_rsp_data);
    10A0:	0214      	ld         al, #+0x2
    10A1:	FB00      	**prefx    0xFB
    10A2:	C39C      	bsr        -0x53D <ReportPanic:0xB65[p]>
    }

    /* Setup ADVERTISEMENT DATA */
    /* Add to advData only if undirected advertisements are to be done. */
    if(connect_mode == gap_mode_connect_undirected)
    10A3:	2A1B      	ld         x, @(+0x2A, y)
    10A4:	0388      	cmp        x, #+0x3
    10A5:	1CF0      	bne        +0x1C <gattSetAdvertParams+0x7B:0x10C1[p]>
    {
    
       /* Add UUID list of the services supported by the device */
        length = GetSupported128BitUUIDServiceList(advert_data);
    10A6:	E415      	ld         al, @0xFFE4 <register uy>
    10A7:	0B34      	add        al, #+0xB
    10A8:	FF00      	**prefx    0xFF
    10A9:	539C      	bsr        -0xAD <GetSupported128BitUUIDServiceList:0xFFC[p]>
        /* One added for Length field, which will be added to Adv Data by GAP
         * layer
         */
        length_added_to_adv += (length + 1);

        if (LsStoreAdvScanData(length, advert_data,
    10AA:	0018      	ld         x, #+0x0
    10AB:	002B      	st         x, @(0x0, y)
    10AC:	E411      	ld         ah, @0xFFE4 <register uy>
    10AD:	0B30      	add        ah, #+0xB
    10AE:	0900      	**prefx    0x9
    10AF:	9C9C      	bsr        +0x89C <LsStoreAdvScanData:0x194B[p]>
    10B0:	E199      	tst        @0xFFE1 <register al>
    10B1:	04F4      	beq        +0x4 <gattSetAdvertParams+0x6F:0x10B5[p]>
                            ad_src_advertise) != ls_err_none)
        {
            ReportPanic(app_panic_set_advert_data);
    10B2:	0114      	ld         al, #+0x1
    10B3:	FB00      	**prefx    0xFB
    10B4:	B19C      	bsr        -0x54F <ReportPanic:0xB65[p]>
         * layer
         */
        length_added_to_adv += (sizeof(device_appearance) + 1);

        /* Add device appearance to the advertisements */
        if (LsStoreAdvScanData(ATTR_LEN_DEVICE_APPEARANCE + 1,
    10B5:	0014      	ld         al, #+0x0
    10B6:	0027      	st         al, @(0x0, y)
    10B7:	0314      	ld         al, #+0x3
    10B8:	E411      	ld         ah, @0xFFE4 <register uy>
    10B9:	0330      	add        ah, #+0x3
    10BA:	0900      	**prefx    0x9
    10BB:	909C      	bsr        +0x890 <LsStoreAdvScanData:0x194B[p]>
    10BC:	E199      	tst        @0xFFE1 <register al>
    10BD:	04F4      	beq        +0x4 <gattSetAdvertParams+0x7B:0x10C1[p]>
            device_appearance, ad_src_advertise) != ls_err_none)
        {
            ReportPanic(app_panic_set_advert_data);
    10BE:	0114      	ld         al, #+0x1
    10BF:	FB00      	**prefx    0xFB
    10C0:	A59C      	bsr        -0x55B <ReportPanic:0xB65[p]>
        }
    }
}
    10C1:	300F      	leave      #+0x30

0x000010C2 <GattStartAdverts>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void GattStartAdverts(bool fast_connection,gap_mode_connect connect_mode)
{
    10C2:	020B      	enter      #+0x2
    10C3:	0023      	st         ah, @(0x0, y)
    uint16 connect_flags = L2CAP_CONNECTION_SLAVE_UNDIRECTED |
                           L2CAP_OWN_ADDR_TYPE_PUBLIC;
#endif /* USE_STATIC_RANDOM_ADDRESS */
    
    /* Set advertisement parameters */
    gattSetAdvertParams(fast_connection,connect_mode);
    10C4:	829C      	bsr        -0x7E <gattSetAdvertParams:0x1046[p]>

    if(g_app_data.bonded &&
    10C5:	4B00      	**prefx    0x4B
    10C6:	7B99      	tst        @0x4B7B <g_app_data+0x7>
    10C7:	13F4      	beq        +0x13 <GattStartAdverts+0x18:0x10DA[p]>
    10C8:	4B00      	**prefx    0x4B
    10C9:	7C14      	ld         al, #+0x4B7C
    10CA:	FF00      	**prefx    0xFF
    10CB:	579C      	bsr        -0xA9 <GattIsAddressResolvableRandom:0x1022[p]>
    10CC:	E199      	tst        @0xFFE1 <register al>
    10CD:	0DF0      	bne        +0xD <GattStartAdverts+0x18:0x10DA[p]>
       (!GattIsAddressResolvableRandom(&g_app_data.bonded_bd_addr)))
    {
        if(connect_mode == gap_mode_connect_directed)
    10CE:	0017      	ld         al, @(0x0, y)
    10CF:	0284      	cmp        al, #+0x2
    10D0:	03F4      	beq        +0x3 <GattStartAdverts+0x11:0x10D3[p]>
    10D1:	0310      	ld         ah, #+0x3
    10D2:	09E0      	bra        +0x9 <GattStartAdverts+0x19:0x10DB[p]>
        {
            g_gatt_data.advert_timer_value = TIMER_INVALID;
    10D3:	0014      	ld         al, #+0x0
    10D4:	4B00      	**prefx    0x4B
    10D5:	1E25      	st         al, @0x4B1E <g_gatt_data>
    10D6:	4B00      	**prefx    0x4B
    10D7:	1F25      	st         al, @0x4B1F <g_gatt_data+0x1>
    10D8:	0210      	ld         ah, #+0x2
    10D9:	02E0      	bra        +0x2 <GattStartAdverts+0x19:0x10DB[p]>
    10DA:	0410      	ld         ah, #+0x4
                            L2CAP_OWN_ADDR_TYPE_PUBLIC;
        }
    }

    /* Start GATT connection in Slave role */
    GattConnectReq(NULL, connect_flags);
    10DB:	0014      	ld         al, #+0x0
    10DC:	0100      	**prefx    0x1
    10DD:	9F00      	**prefx    0x9F
    10DE:	819C      	bsr        +0x9E81 <GattConnectReq:0xAF5F[p]>

     /* Start advertisement timer */
    if(g_gatt_data.advert_timer_value)
    10DF:	4B00      	**prefx    0x4B
    10E0:	1E11      	ld         ah, @0x4B1E <g_gatt_data>
    10E1:	4B00      	**prefx    0x4B
    10E2:	1F19      	ld         x, @0x4B1F <g_gatt_data+0x1>
    10E3:	E015      	ld         al, @0xFFE0 <register ah>
    10E4:	E3B5      	or         al, @0xFFE3 <register uxl>
    10E5:	04F4      	beq        +0x4 <GattStartAdverts+0x27:0x10E9[p]>
    {
        StartAdvertTimer(g_gatt_data.advert_timer_value);
    10E6:	E315      	ld         al, @0xFFE3 <register uxl>
    10E7:	F600      	**prefx    0xF6
    10E8:	569C      	bsr        -0x9AA <StartAdvertTimer:0x73E[p]>
    }
}
    10E9:	020F      	leave      #+0x2

0x000010EA <GattTriggerFastAdverts>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void GattTriggerFastAdverts(TYPED_BD_ADDR_T *p_addr)
{
    g_gatt_data.advert_timer_value = FAST_CONNECTION_ADVERT_TIMEOUT_VALUE;
    10EA:	0200      	**prefx    0x2
    10EB:	C914      	ld         al, #+0x1C9
    10EC:	4B00      	**prefx    0x4B
    10ED:	1E25      	st         al, @0x4B1E <g_gatt_data>
    10EE:	C400      	**prefx    0xC4
    10EF:	8014      	ld         al, #-0x3C80
    10F0:	4B00      	**prefx    0x4B
    10F1:	1F25      	st         al, @0x4B1F <g_gatt_data+0x1>
  
    /* Trigger fast connections */
    GattStartAdverts(TRUE,gap_mode_connect_undirected);
    10F2:	0114      	ld         al, #+0x1
    10F3:	0310      	ld         ah, #+0x3
    10F4:	CEE0      	bra        -0x32 <GattStartAdverts:0x10C2[p]>

0x000010F5 <HandleAccessWrite>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HandleAccessWrite(GATT_ACCESS_IND_T *p_ind)
{
    10F5:	050B      	enter      #+0x5
    10F6:	0327      	st         al, @(+0x3, y)
    /* For the received attribute handle, check all the services that support
     * attribute 'Write' operation handled by application.
     */
    /* More services may be added here to support their write operations */
    if(BatteryCheckHandleRange(p_ind->handle))
    10F7:	E119      	ld         x, @0xFFE1 <register al>
    10F8:	0216      	ld         al, @(+0x2, x)
    10F9:	F400      	**prefx    0xF4
    10FA:	829C      	bsr        -0xC7E <BatteryCheckHandleRange:0x47C[p]>
    10FB:	E199      	tst        @0xFFE1 <register al>
    10FC:	05F4      	beq        +0x5 <HandleAccessWrite+0xC:0x1101[p]>
    {
         /* Attribute handle belongs to BATTERY service */
        BatteryHandleAccessWrite(p_ind);
    10FD:	0317      	ld         al, @(+0x3, y)
    10FE:	F400      	**prefx    0xF4
    10FF:	F59C      	bsr        -0xC0B <BatteryHandleAccessWrite:0x4F4[p]>
    1100:	2BE0      	bra        +0x2B <HandleAccessWrite+0x36:0x112B[p]>
    }
#ifdef ENABLE_OTA
    else if(GattCheckHandleRange(p_ind->handle))
    1101:	031B      	ld         x, @(+0x3, y)
    1102:	0216      	ld         al, @(+0x2, x)
    1103:	0300      	**prefx    0x3
    1104:	0B9C      	bsr        +0x30B <GattCheckHandleRange:0x140F[p]>
    1105:	E199      	tst        @0xFFE1 <register al>
    1106:	05F4      	beq        +0x5 <HandleAccessWrite+0x16:0x110B[p]>
    {
        /* Attribute handle belongs to Gatt service */
        GattHandleAccessWrite(p_ind);
    1107:	0317      	ld         al, @(+0x3, y)
    1108:	0300      	**prefx    0x3
    1109:	4B9C      	bsr        +0x34B <GattHandleAccessWrite:0x1454[p]>
    110A:	21E0      	bra        +0x21 <HandleAccessWrite+0x36:0x112B[p]>
    }
    else if(OtaCheckHandleRange(p_ind->handle))
    110B:	031B      	ld         x, @(+0x3, y)
    110C:	0216      	ld         al, @(+0x2, x)
    110D:	0200      	**prefx    0x2
    110E:	209C      	bsr        +0x220 <OtaCheckHandleRange:0x132E[p]>
    110F:	E199      	tst        @0xFFE1 <register al>
    1110:	05F4      	beq        +0x5 <HandleAccessWrite+0x20:0x1115[p]>
    {
        /* Attribute handle belongs to OTA service */
        OtaHandleAccessWrite(p_ind);
    1111:	0317      	ld         al, @(+0x3, y)
    1112:	0200      	**prefx    0x2
    1113:	259C      	bsr        +0x225 <OtaHandleAccessWrite:0x1338[p]>
    1114:	17E0      	bra        +0x17 <HandleAccessWrite+0x36:0x112B[p]>
    }
#endif /* ENABLE_OTA */
    else if(SerialCheckHandleRange(p_ind->handle))
    1115:	031B      	ld         x, @(+0x3, y)
    1116:	0216      	ld         al, @(+0x2, x)
    1117:	0100      	**prefx    0x1
    1118:	D39C      	bsr        +0xD3 <SerialCheckHandleRange:0x11EB[p]>
    1119:	E199      	tst        @0xFFE1 <register al>
    111A:	05F4      	beq        +0x5 <HandleAccessWrite+0x2A:0x111F[p]>
    {
        /* Attribute handle belongs to Serial service */
        SerialHandleAccessWrite(p_ind);
    111B:	0317      	ld         al, @(+0x3, y)
    111C:	0100      	**prefx    0x1
    111D:	159C      	bsr        +0x115 <SerialHandleAccessWrite:0x1232[p]>
    111E:	0DE0      	bra        +0xD <HandleAccessWrite+0x36:0x112B[p]>
    else
    {
        /* Application doesn't support 'Write' operation on received  attribute
         * handle, so return 'gatt_status_write_not_permitted' status
         */
        GattAccessRsp(p_ind->cid, p_ind->handle,
    111F:	031B      	ld         x, @(+0x3, y)
    1120:	0116      	ld         al, @(+0x1, x)
    1121:	0212      	ld         ah, @(+0x2, x)
    1122:	0A00      	**prefx    0xA
    1123:	0318      	ld         x, #+0xA03
    1124:	002B      	st         x, @(0x0, y)
    1125:	0018      	ld         x, #+0x0
    1126:	012B      	st         x, @(+0x1, y)
    1127:	022B      	st         x, @(+0x2, y)
    1128:	0100      	**prefx    0x1
    1129:	9F00      	**prefx    0x9F
    112A:	549C      	bsr        +0x9F54 <GattAccessRsp:0xB07E[p]>
                      gatt_status_write_not_permitted,
                      0, NULL);
    }
}
    112B:	050F      	leave      #+0x5

0x0000112C <HandleAccessRead>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HandleAccessRead(GATT_ACCESS_IND_T *p_ind)
{
    112C:	050B      	enter      #+0x5
    112D:	0327      	st         al, @(+0x3, y)
    /* For the received attribute handle, check all the services that support
     * attribute 'Read' operation handled by application.
     */
    /* More services may be added here to support their read operations */
    if(DeviceInfoCheckHandleRange(p_ind->handle))
    112E:	E119      	ld         x, @0xFFE1 <register al>
    112F:	0216      	ld         al, @(+0x2, x)
    1130:	F400      	**prefx    0xF4
    1131:	5A9C      	bsr        -0xBA6 <DeviceInfoCheckHandleRange:0x58B[p]>
    1132:	E199      	tst        @0xFFE1 <register al>
    1133:	05F4      	beq        +0x5 <HandleAccessRead+0xC:0x1138[p]>
    {
        /* Attribute handle belongs to the DEVICE INFORMATION service */
        DeviceInfoHandleAccessRead(p_ind);
    1134:	0317      	ld         al, @(+0x3, y)
    1135:	F400      	**prefx    0xF4
    1136:	5C9C      	bsr        -0xBA4 <DeviceInfoHandleAccessRead:0x592[p]>
    1137:	35E0      	bra        +0x35 <HandleAccessRead+0x40:0x116C[p]>
    }
#ifdef ENABLE_OTA
    else if(GattCheckHandleRange(p_ind->handle))
    1138:	031B      	ld         x, @(+0x3, y)
    1139:	0216      	ld         al, @(+0x2, x)
    113A:	0300      	**prefx    0x3
    113B:	D49C      	bsr        +0x2D4 <GattCheckHandleRange:0x140F[p]>
    113C:	E199      	tst        @0xFFE1 <register al>
    113D:	05F4      	beq        +0x5 <HandleAccessRead+0x16:0x1142[p]>
    {
        /* Attribute handle belongs to Gatt service */
        GattHandleAccessRead(p_ind);
    113E:	0317      	ld         al, @(+0x3, y)
    113F:	0300      	**prefx    0x3
    1140:	489C      	bsr        +0x348 <GattHandleAccessRead:0x1488[p]>
    1141:	2BE0      	bra        +0x2B <HandleAccessRead+0x40:0x116C[p]>
    }
    else if(OtaCheckHandleRange(p_ind->handle))
    1142:	031B      	ld         x, @(+0x3, y)
    1143:	0216      	ld         al, @(+0x2, x)
    1144:	0200      	**prefx    0x2
    1145:	E99C      	bsr        +0x1E9 <OtaCheckHandleRange:0x132E[p]>
    1146:	E199      	tst        @0xFFE1 <register al>
    1147:	05F4      	beq        +0x5 <HandleAccessRead+0x20:0x114C[p]>
    {
        /* Attribute handle belongs to OTA service */
        OtaHandleAccessRead(p_ind);
    1148:	0317      	ld         al, @(+0x3, y)
    1149:	0300      	**prefx    0x3
    114A:	849C      	bsr        +0x284 <OtaHandleAccessRead:0x13CE[p]>
    114B:	21E0      	bra        +0x21 <HandleAccessRead+0x40:0x116C[p]>
    }
#endif /* ENABLE_OTA */
    else if(BatteryCheckHandleRange(p_ind->handle))
    114C:	031B      	ld         x, @(+0x3, y)
    114D:	0216      	ld         al, @(+0x2, x)
    114E:	F300      	**prefx    0xF3
    114F:	2D9C      	bsr        -0xCD3 <BatteryCheckHandleRange:0x47C[p]>
    1150:	E199      	tst        @0xFFE1 <register al>
    1151:	05F4      	beq        +0x5 <HandleAccessRead+0x2A:0x1156[p]>
    {
        /* Attribute handle belongs to BATTERY service */
        BatteryHandleAccessRead(p_ind);
    1152:	0317      	ld         al, @(+0x3, y)
    1153:	F400      	**prefx    0xF4
    1154:	DE9C      	bsr        -0xC22 <BatteryHandleAccessRead:0x532[p]>
    1155:	17E0      	bra        +0x17 <HandleAccessRead+0x40:0x116C[p]>
    }
    else if(SerialCheckHandleRange(p_ind->handle))
    1156:	031B      	ld         x, @(+0x3, y)
    1157:	0216      	ld         al, @(+0x2, x)
    1158:	0100      	**prefx    0x1
    1159:	929C      	bsr        +0x92 <SerialCheckHandleRange:0x11EB[p]>
    115A:	E199      	tst        @0xFFE1 <register al>
    115B:	05F4      	beq        +0x5 <HandleAccessRead+0x34:0x1160[p]>
    {
        SerialHandleAccessRead(p_ind);
    115C:	0317      	ld         al, @(+0x3, y)
    115D:	0100      	**prefx    0x1
    115E:	0B9C      	bsr        +0x10B <SerialHandleAccessRead:0x1269[p]>
    115F:	0DE0      	bra        +0xD <HandleAccessRead+0x40:0x116C[p]>
    else
    {
        /* Application doesn't support 'Read' operation on received attribute
         * handle, so return 'gatt_status_read_not_permitted' status.
         */
        GattAccessRsp(p_ind->cid, p_ind->handle,
    1160:	031B      	ld         x, @(+0x3, y)
    1161:	0116      	ld         al, @(+0x1, x)
    1162:	0212      	ld         ah, @(+0x2, x)
    1163:	0A00      	**prefx    0xA
    1164:	0218      	ld         x, #+0xA02
    1165:	002B      	st         x, @(0x0, y)
    1166:	0018      	ld         x, #+0x0
    1167:	012B      	st         x, @(+0x1, y)
    1168:	022B      	st         x, @(+0x2, y)
    1169:	0100      	**prefx    0x1
    116A:	9F00      	**prefx    0x9F
    116B:	139C      	bsr        +0x9F13 <GattAccessRsp:0xB07E[p]>
                      gatt_status_read_not_permitted,
                      0, NULL);
    }

}
    116C:	050F      	leave      #+0x5

0x0000116D <SendDataToUart>:
    /* We initially attempt to directly write to the UART and from there on
     * we send the data using callback mechanism, whenever the UART is ready
     * to accept more incoming data. This is to avoid data loss. The data is
     * buffered and sent to UART using callback mechanism.
     */
    if(!g_trigger_write_callback)
    116D:	4B00      	**prefx    0x4B
    116E:	2099      	tst        @0x4B20 <g_trigger_write_callback>
    116F:	04F0      	bne        +0x4 <SendDataToUart+0x6:0x1173[p]>
    {
        /*UartWrite(data, size);*/
        
        g_trigger_write_callback = TRUE;
    1170:	0114      	ld         al, #+0x1
    1171:	4B00      	**prefx    0x4B
    1172:	2025      	st         al, @0x4B20 <g_trigger_write_callback>
    1173:	00E2      	bra        0x0, x

0x00001174 <SetLastNotificationStatus>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void SetLastNotificationStatus(bool bsuccess)
{
    g_last_notification_success = bsuccess;
    1174:	8D00      	**prefx    0x8D
    1175:	9A25      	st         al, @0x8C9A <g_last_notification_success>
}
    1176:	00E2      	bra        0x0, x

0x00001177 <ProcessRxData>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/

extern void ProcessRxData(void)
{
    1177:	190B      	enter      #+0x19
    
    /* Length of the data to be sent */    
    uint16 size_val; 
    
    /* Length of data available in the queue */
    uint16 length = BQGetDataSize(SEND_QUEUE_ID); 
    1178:	0014      	ld         al, #+0x0
    1179:	0100      	**prefx    0x1
    117A:	139C      	bsr        +0x113 <BQGetDataSize:0x128D[p]>
    117B:	1627      	st         al, @(+0x16, y)

    /* Proceed only if byte queue is not empty */
    if(length > 0)
    117C:	49F4      	beq        +0x49 <ProcessRxData+0x4E:0x11C5[p]>
    {
        /* Make sure that the maximum data length is not exceeded */
        size_val = length > SERIAL_RX_DATA_LENGTH ?
                   SERIAL_RX_DATA_LENGTH : length;

        if( length<SERIAL_RX_DATA_LENGTH ) 
    117D:	1484      	cmp        al, #+0x14
    117E:	21F8      	bcc        +0x21 <ProcessRxData+0x28:0x119F[p]>
        {
            /* Length of the data is less than serial data length. */
            if(g_is_current_baud_rate_high)
    117F:	4B00      	**prefx    0x4B
    1180:	2199      	tst        @0x4B21 <g_is_current_baud_rate_high>
    1181:	0DF4      	beq        +0xD <ProcessRxData+0x17:0x118E[p]>
            {
                if (g_partial_buffer_timer_tid == TIMER_INVALID)
    1182:	4C00      	**prefx    0x4C
    1183:	9199      	tst        @0x4B91 <g_partial_buffer_timer_tid>
    1184:	41F0      	bne        +0x41 <ProcessRxData+0x4E:0x11C5[p]>
                {
                  /* Create the partial buffer timer */
                   g_partial_buffer_timer_tid = TimerCreate(
    1185:	0114      	ld         al, #+0x1
    1186:	0027      	st         al, @(0x0, y)
    1187:	1200      	**prefx    0x12
    1188:	C614      	ld         al, #+0x11C6
    1189:	0127      	st         al, @(+0x1, y)
    118A:	0010      	ld         ah, #+0x0
    118B:	2700      	**prefx    0x27
    118C:	1014      	ld         al, #+0x2710
    118D:	0CE0      	bra        +0xC <ProcessRxData+0x22:0x1199[p]>
                                                 SendPartialBuffer);
                }
            }
            else
            {
               if (g_partial_buffer_timer_tid == TIMER_INVALID)
    118E:	4C00      	**prefx    0x4C
    118F:	9199      	tst        @0x4B91 <g_partial_buffer_timer_tid>
    1190:	35F0      	bne        +0x35 <ProcessRxData+0x4E:0x11C5[p]>
               {
                /* Create the partial buffer timer */
                g_partial_buffer_timer_tid = TimerCreate(
    1191:	0114      	ld         al, #+0x1
    1192:	0027      	st         al, @(0x0, y)
    1193:	1200      	**prefx    0x12
    1194:	C614      	ld         al, #+0x11C6
    1195:	0127      	st         al, @(+0x1, y)
    1196:	0110      	ld         ah, #+0x1
    1197:	8700      	**prefx    0x87
    1198:	A014      	ld         al, #-0x7960
    1199:	0100      	**prefx    0x1
    119A:	CF00      	**prefx    0xCF
    119B:	609C      	bsr        +0xCF60 <TimerCreate:0xE0FB[p]>
    119C:	4C00      	**prefx    0x4C
    119D:	9125      	st         al, @0x4B91 <g_partial_buffer_timer_tid>
    119E:	27E0      	bra        +0x27 <ProcessRxData+0x4E:0x11C5[p]>
               }
            }
        }
        else
        {
            if (g_partial_buffer_timer_tid != TIMER_INVALID)
    119F:	4C00      	**prefx    0x4C
    11A0:	9115      	ld         al, @0x4B91 <g_partial_buffer_timer_tid>
    11A1:	07F4      	beq        +0x7 <ProcessRxData+0x31:0x11A8[p]>
            {
                /* Kill the partial buffer timer. */
                TimerDelete(g_partial_buffer_timer_tid);
    11A2:	0100      	**prefx    0x1
    11A3:	CF00      	**prefx    0xCF
    11A4:	9B9C      	bsr        +0xCE9B <TimerDelete:0xE03F[p]>
                g_partial_buffer_timer_tid = TIMER_INVALID;
    11A5:	0014      	ld         al, #+0x0
    11A6:	4C00      	**prefx    0x4C
    11A7:	9125      	st         al, @0x4B91 <g_partial_buffer_timer_tid>

    /* Proceed only if byte queue is not empty */
    if(length > 0)
    {
        /* Make sure that the maximum data length is not exceeded */
        size_val = length > SERIAL_RX_DATA_LENGTH ?
    11A8:	1617      	ld         al, @(+0x16, y)
    11A9:	1727      	st         al, @(+0x17, y)
    11AA:	1484      	cmp        al, #+0x14
    11AB:	032C      	bcz        +0x3 <ProcessRxData+0x37:0x11AE[p]>
    11AC:	1414      	ld         al, #+0x14
    11AD:	1727      	st         al, @(+0x17, y)
                g_partial_buffer_timer_tid = TIMER_INVALID;
            }
           
            
            /* Peek data and send it. */
            if (BQPeekBytes(data, size_val,SEND_QUEUE_ID) > 0)
    11AE:	0014      	ld         al, #+0x0
    11AF:	0027      	st         al, @(0x0, y)
    11B0:	E415      	ld         al, @0xFFE4 <register uy>
    11B1:	0234      	add        al, #+0x2
    11B2:	1713      	ld         ah, @(+0x17, y)
    11B3:	0100      	**prefx    0x1
    11B4:	6B9C      	bsr        +0x16B <BQPeekBytes:0x131F[p]>
    11B5:	E199      	tst        @0xFFE1 <register al>
    11B6:	05F4      	beq        +0x5 <ProcessRxData+0x44:0x11BB[p]>
            {
                SerialSendNotification(data, size_val);
    11B7:	E415      	ld         al, @0xFFE4 <register uy>
    11B8:	0234      	add        al, #+0x2
    11B9:	1713      	ld         ah, @(+0x17, y)
    11BA:	469C      	bsr        +0x46 <SerialSendNotification:0x1200[p]>
            }
        
            /* Pop the data if the last sent status was success */
            if(g_last_notification_success)
    11BB:	8D00      	**prefx    0x8D
    11BC:	9A99      	tst        @0x8C9A <g_last_notification_success>
    11BD:	08F4      	beq        +0x8 <ProcessRxData+0x4E:0x11C5[p]>
            {
                BQPopBytes(data, size_val,SEND_QUEUE_ID);
    11BE:	0014      	ld         al, #+0x0
    11BF:	0027      	st         al, @(0x0, y)
    11C0:	E415      	ld         al, @0xFFE4 <register uy>
    11C1:	0234      	add        al, #+0x2
    11C2:	1713      	ld         ah, @(+0x17, y)
    11C3:	0100      	**prefx    0x1
    11C4:	5C9C      	bsr        +0x15C <BQPopBytes:0x1320[p]>
            }
        }

    }
}
    11C5:	190F      	leave      #+0x19

0x000011C6 <SendPartialBuffer>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void SendPartialBuffer(timer_id tid)
{
    11C6:	170B      	enter      #+0x17
     /* The relevant parital timeout period expired. Send whatever data present
      * in the queue now.
      */
    uint8  data[SERIAL_RX_DATA_LENGTH]; /* Data to be sent */

    if((tid == g_partial_buffer_timer_tid)) 
    11C7:	4C00      	**prefx    0x4C
    11C8:	9185      	cmp        al, @0x4B91 <g_partial_buffer_timer_tid>
    11C9:	21F0      	bne        +0x21 <SendPartialBuffer+0x24:0x11EA[p]>
    {
        uint16 length;

        g_partial_buffer_timer_tid = TIMER_INVALID;         
    11CA:	0014      	ld         al, #+0x0
    11CB:	4C00      	**prefx    0x4C
    11CC:	9125      	st         al, @0x4B91 <g_partial_buffer_timer_tid>
        
        length = BQGetDataSize(SEND_QUEUE_ID);
    11CD:	0100      	**prefx    0x1
    11CE:	BF9C      	bsr        +0xBF <BQGetDataSize:0x128D[p]>
    11CF:	1527      	st         al, @(+0x15, y)

        if(length > 0)
    11D0:	1AF4      	beq        +0x1A <SendPartialBuffer+0x24:0x11EA[p]>
        {
            if(length < SERIAL_RX_DATA_LENGTH)
    11D1:	1484      	cmp        al, #+0x14
    11D2:	18F8      	bcc        +0x18 <SendPartialBuffer+0x24:0x11EA[p]>
            {
                /* Peek data and send it. */
                if (BQPeekBytes(data,length,SEND_QUEUE_ID) > 0)
    11D3:	0014      	ld         al, #+0x0
    11D4:	0027      	st         al, @(0x0, y)
    11D5:	E415      	ld         al, @0xFFE4 <register uy>
    11D6:	0134      	add        al, #+0x1
    11D7:	1513      	ld         ah, @(+0x15, y)
    11D8:	0100      	**prefx    0x1
    11D9:	469C      	bsr        +0x146 <BQPeekBytes:0x131F[p]>
    11DA:	E199      	tst        @0xFFE1 <register al>
    11DB:	05F4      	beq        +0x5 <SendPartialBuffer+0x1A:0x11E0[p]>
                {
                    SerialSendNotification(data, length);
    11DC:	E415      	ld         al, @0xFFE4 <register uy>
    11DD:	0134      	add        al, #+0x1
    11DE:	1513      	ld         ah, @(+0x15, y)
    11DF:	219C      	bsr        +0x21 <SerialSendNotification:0x1200[p]>
                }
        
                /* Pop the data if the last sent status was success */
                if(g_last_notification_success)
    11E0:	8D00      	**prefx    0x8D
    11E1:	9A99      	tst        @0x8C9A <g_last_notification_success>
    11E2:	08F4      	beq        +0x8 <SendPartialBuffer+0x24:0x11EA[p]>
                {
                    BQPopBytes(data, length,SEND_QUEUE_ID);
    11E3:	0014      	ld         al, #+0x0
    11E4:	0027      	st         al, @(0x0, y)
    11E5:	E415      	ld         al, @0xFFE4 <register uy>
    11E6:	0134      	add        al, #+0x1
    11E7:	1513      	ld         ah, @(+0x15, y)
    11E8:	0100      	**prefx    0x1
    11E9:	379C      	bsr        +0x137 <BQPopBytes:0x1320[p]>
                }
            }
        }
    }
}
    11EA:	170F      	leave      #+0x17

0x000011EB <SerialCheckHandleRange>:
 *  RETURNS
 *      TRUE if handle belongs to the Battery Service, FALSE otherwise
 *----------------------------------------------------------------------------*/

extern bool SerialCheckHandleRange(uint16 handle)
{
    11EB:	0010      	ld         ah, #+0x0
    11EC:	E534      	add        al, #-0x1B
    11ED:	0484      	cmp        al, #+0x4
    11EE:	02F8      	bcc        +0x2 <SerialCheckHandleRange+0x5:0x11F0[p]>
    11EF:	0110      	ld         ah, #+0x1
    return ((handle >= HANDLE_SERIAL_SERVICE) &&
            (handle <= HANDLE_SERIAL_SERVICE_END))
            ? TRUE : FALSE;
}
    11F0:	E015      	ld         al, @0xFFE0 <register ah>
    11F1:	00E2      	bra        0x0, x

0x000011F2 <SerialBondingNotify>:
 *  RETURNS/MODIFIES
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void SerialBondingNotify()
{
    11F2:	020B      	enter      #+0x2
     /* Write data to NVM if bond is established */
    if(IsDeviceBonded())
    11F3:	F500      	**prefx    0xF5
    11F4:	C89C      	bsr        -0xB38 <IsDeviceBonded:0x6BC[p]>
    11F5:	E199      	tst        @0xFFE1 <register al>
    11F6:	09F4      	beq        +0x9 <SerialBondingNotify+0xD:0x11FF[p]>
    {
        /* Write to NVM the client configuration value of battery level
         * that was configured prior to bonding
         */
        Nvm_Write((uint16*)&g_serial_data.serial_client_config,
    11F7:	4B00      	**prefx    0x4B
    11F8:	2315      	ld         al, @0x4B23 <g_serial_data+0x1>
    11F9:	0027      	st         al, @(0x0, y)
    11FA:	4B00      	**prefx    0x4B
    11FB:	2214      	ld         al, #+0x4B22
    11FC:	0110      	ld         ah, #+0x1
    11FD:	F300      	**prefx    0xF3
    11FE:	719C      	bsr        -0xC8F <Nvm_Write:0x56F[p]>
                  sizeof(g_serial_data.serial_client_config),
                  g_serial_data.nvm_offset +
                  SERIAL_NVM_LEVEL_CLIENT_CONFIG_OFFSET);
    }
}
    11FF:	020F      	leave      #+0x2

0x00001200 <SerialSendNotification>:
 *  RETURNS
 *      TRUE, if notification is initiated, else FALSE
 *----------------------------------------------------------------------------*/

extern bool SerialSendNotification(uint8 *data, uint16 size)
{
    1200:	050B      	enter      #+0x5
    1201:	0227      	st         al, @(+0x2, y)
    1202:	0323      	st         ah, @(+0x3, y)
    if(size <= SERIAL_RX_DATA_LENGTH)
    1203:	1580      	cmp        ah, #+0x15
    1204:	15F8      	bcc        +0x15 <SerialSendNotification+0x19:0x1219[p]>
    {
      if(AppGetState() == app_state_connected)
    1205:	F500      	**prefx    0xF5
    1206:	B39C      	bsr        -0xB4D <AppGetState:0x6B9[p]>
    1207:	0484      	cmp        al, #+0x4
    1208:	11F0      	bne        +0x11 <SerialSendNotification+0x19:0x1219[p]>
      {
        if(g_serial_data.serial_client_config == gatt_client_config_notification)
    1209:	4B00      	**prefx    0x4B
    120A:	2215      	ld         al, @0x4B22 <g_serial_data>
    120B:	0184      	cmp        al, #+0x1
    120C:	0DF0      	bne        +0xD <SerialSendNotification+0x19:0x1219[p]>
        {
            GattCharValueNotification(GetConnectionID(),
    120D:	F500      	**prefx    0xF5
    120E:	B19C      	bsr        -0xB4F <GetConnectionID:0x6BF[p]>
    120F:	031B      	ld         x, @(+0x3, y)
    1210:	002B      	st         x, @(0x0, y)
    1211:	021B      	ld         x, @(+0x2, y)
    1212:	012B      	st         x, @(+0x1, y)
    1213:	1D10      	ld         ah, #+0x1D
    1214:	0100      	**prefx    0x1
    1215:	A000      	**prefx    0xA0
    1216:	9A9C      	bsr        +0x9F9A <GattCharValueNotification:0xB1B0[p]>
    1217:	0114      	ld         al, #+0x1
    1218:	02E0      	bra        +0x2 <SerialSendNotification+0x1A:0x121A[p]>
                                  HANDLE_SERIAL_DATA_TRANSFER,
                                  size,
                                  data);

            return TRUE;
    1219:	0014      	ld         al, #+0x0
        }
      }
    }

    return FALSE;
}
    121A:	050F      	leave      #+0x5

0x0000121B <SerialReadDataFromNVM>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/

extern void SerialReadDataFromNVM(bool bonded,uint16 *p_offset)
{
    121B:	030B      	enter      #+0x3
    121C:	0123      	st         ah, @(+0x1, y)
    g_serial_data.nvm_offset = *p_offset;
    121D:	E019      	ld         x, @0xFFE0 <register ah>
    121E:	001A      	ld         x, @(0x0, x)
    121F:	4B00      	**prefx    0x4B
    1220:	2329      	st         x, @0x4B23 <g_serial_data+0x1>

    /* Read NVM only if devices are bonded */
    if(IsDeviceBonded())
    1221:	F500      	**prefx    0xF5
    1222:	9A9C      	bsr        -0xB66 <IsDeviceBonded:0x6BC[p]>
    1223:	E199      	tst        @0xFFE1 <register al>
    1224:	09F4      	beq        +0x9 <SerialReadDataFromNVM+0x12:0x122D[p]>
    {
        /* Read serial level client configuration */
        Nvm_Read((uint16 *)&g_serial_data.serial_client_config,
    1225:	011B      	ld         x, @(+0x1, y)
    1226:	001A      	ld         x, @(0x0, x)
    1227:	002B      	st         x, @(0x0, y)
    1228:	4B00      	**prefx    0x4B
    1229:	2214      	ld         al, #+0x4B22
    122A:	0110      	ld         ah, #+0x1
    122B:	F300      	**prefx    0xF3
    122C:	519C      	bsr        -0xCAF <Nvm_Read:0x57D[p]>
    }

    /* Increment the offset by the number of words of NVM memory required 
     * by Battery service 
     */
    *p_offset += SERIAL_SERVICE_NVM_MEMORY_WORDS;
    122D:	011B      	ld         x, @(+0x1, y)
    122E:	0016      	ld         al, @(0x0, x)
    122F:	0134      	add        al, #+0x1
    1230:	0026      	st         al, @(0x0, x)
}
    1231:	030F      	leave      #+0x3

0x00001232 <SerialHandleAccessWrite>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void SerialHandleAccessWrite(GATT_ACCESS_IND_T *p_ind)
{
    1232:	070B      	enter      #+0x7
    1233:	0527      	st         al, @(+0x5, y)
    uint16 client_config;
    uint8 *p_value = p_ind->value;
    1234:	E119      	ld         x, @0xFFE1 <register al>
    1235:	0616      	ld         al, @(+0x6, x)
    1236:	0427      	st         al, @(+0x4, y)
    sys_status rc = sys_status_success;

    switch(p_ind->handle)
    1237:	0212      	ld         ah, @(+0x2, x)
    1238:	1D80      	cmp        ah, #+0x1D
    1239:	06F4      	beq        +0x6 <SerialHandleAccessWrite+0xD:0x123F[p]>
    123A:	1E80      	cmp        ah, #+0x1E
    123B:	0BF4      	beq        +0xB <SerialHandleAccessWrite+0x14:0x1246[p]>
    123C:	0A00      	**prefx    0xA
    123D:	0314      	ld         al, #+0xA03
    123E:	06E0      	bra        +0x6 <SerialHandleAccessWrite+0x12:0x1244[p]>
    {
        case HANDLE_SERIAL_DATA_TRANSFER:
        {
            /* Send the received data to the UART */
            SendDataToUart(p_ind->value, p_ind->size_value);
    123F:	051B      	ld         x, @(+0x5, y)
    1240:	0512      	ld         ah, @(+0x5, x)
    1241:	FF00      	**prefx    0xFF
    1242:	2B9C      	bsr        -0xD5 <SendDataToUart:0x116D[p]>
    1243:	0014      	ld         al, #+0x0
    1244:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1245:	18E0      	bra        +0x18 <SerialHandleAccessWrite+0x2B:0x125D[p]>
        }
        break;
        
        case HANDLE_SERIAL_DATA_C_CFG:
        {
            client_config = BufReadUint16(&p_value);
    1246:	E415      	ld         al, @0xFFE4 <register uy>
    1247:	0434      	add        al, #+0x4
    1248:	7B00      	**prefx    0x7B
    1249:	6A9C      	bsr        +0x7B6A <BufReadUint16:0x8DB3[p]>
            
           /* Client Configuration is bit field value so ideally bitwise 
            * comparison should be used but since the application supports only 
            * notifications, direct comparison is being used.
            */
            if((client_config == gatt_client_config_notification) ||
    124A:	0284      	cmp        al, #+0x2
    124B:	03F8      	bcc        +0x3 <SerialHandleAccessWrite+0x1C:0x124E[p]>
               (client_config == gatt_client_config_none))
            {
                g_serial_data.serial_client_config = client_config;
    124C:	4B00      	**prefx    0x4B
    124D:	2225      	st         al, @0x4B22 <g_serial_data>
        }
        break;
        
        case HANDLE_SERIAL_DATA_C_CFG:
        {
            client_config = BufReadUint16(&p_value);
    124E:	0327      	st         al, @(+0x3, y)
               (client_config == gatt_client_config_none))
            {
                g_serial_data.serial_client_config = client_config;
            }
            
            if(IsDeviceBonded())
    124F:	F400      	**prefx    0xF4
    1250:	6C9C      	bsr        -0xB94 <IsDeviceBonded:0x6BC[p]>
    1251:	E199      	tst        @0xFFE1 <register al>
    1252:	09F4      	beq        +0x9 <SerialHandleAccessWrite+0x29:0x125B[p]>
            {
                Nvm_Write((uint16 *)&client_config,
    1253:	4B00      	**prefx    0x4B
    1254:	2315      	ld         al, @0x4B23 <g_serial_data+0x1>
    1255:	0027      	st         al, @(0x0, y)
    1256:	E415      	ld         al, @0xFFE4 <register uy>
    1257:	0334      	add        al, #+0x3
    1258:	0110      	ld         ah, #+0x1
    1259:	F300      	**prefx    0xF3
    125A:	159C      	bsr        -0xCEB <Nvm_Write:0x56F[p]>
    125B:	0018      	ld         x, #+0x0
    125C:	F829      	st         x, @0xFFF8 <(scratchpad)>
        }
        break;
    }

    /* Send ACCESS RESPONSE */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc, 0, NULL);
    125D:	051B      	ld         x, @(+0x5, y)
    125E:	0116      	ld         al, @(+0x1, x)
    125F:	0212      	ld         ah, @(+0x2, x)
    1260:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1261:	002B      	st         x, @(0x0, y)
    1262:	0018      	ld         x, #+0x0
    1263:	012B      	st         x, @(+0x1, y)
    1264:	022B      	st         x, @(+0x2, y)
    1265:	0100      	**prefx    0x1
    1266:	9E00      	**prefx    0x9E
    1267:	179C      	bsr        +0x9E17 <GattAccessRsp:0xB07E[p]>

}
    1268:	070F      	leave      #+0x7

0x00001269 <SerialHandleAccessRead>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void SerialHandleAccessRead(GATT_ACCESS_IND_T *p_ind)
{
    1269:	080B      	enter      #+0x8
    126A:	0627      	st         al, @(+0x6, y)
    /* Initialise to 2 octets for Client Configuration */
    uint16 length = 2;
    uint8  value[2];
    uint8  *p_val = NULL;
    126B:	0014      	ld         al, #+0x0
    126C:	0327      	st         al, @(+0x3, y)
    sys_status rc = sys_status_success;

    switch(p_ind->handle)
    126D:	061B      	ld         x, @(+0x6, y)
    126E:	0216      	ld         al, @(+0x2, x)
    126F:	1E84      	cmp        al, #+0x1E
    1270:	04F4      	beq        +0x4 <SerialHandleAccessRead+0xB:0x1274[p]>
    1271:	0A00      	**prefx    0xA
    1272:	4314      	ld         al, #+0xA43
    1273:	0BE0      	bra        +0xB <SerialHandleAccessRead+0x15:0x127E[p]>
    {
        case HANDLE_SERIAL_DATA_C_CFG:
        {
             p_val = value;
    1274:	E419      	ld         x, @0xFFE4 <register uy>
    1275:	0438      	add        x, #+0x4
    1276:	032B      	st         x, @(+0x3, y)
             
             /* copy the client configuration value in response buffer */
            BufWriteUint16(&p_val, g_serial_data.serial_client_config);
    1277:	E415      	ld         al, @0xFFE4 <register uy>
    1278:	0334      	add        al, #+0x3
    1279:	4B00      	**prefx    0x4B
    127A:	2211      	ld         ah, @0x4B22 <g_serial_data>
    127B:	7B00      	**prefx    0x7B
    127C:	559C      	bsr        +0x7B55 <BufWriteUint16:0x8DD1[p]>
    127D:	0014      	ld         al, #+0x0
    127E:	F825      	st         al, @0xFFF8 <(scratchpad)>
        }
        break;
    }

    /* Send GATT Response for the received request */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc,
    127F:	061B      	ld         x, @(+0x6, y)
    1280:	0116      	ld         al, @(+0x1, x)
    1281:	0212      	ld         ah, @(+0x2, x)
    1282:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1283:	002B      	st         x, @(0x0, y)
    1284:	0218      	ld         x, #+0x2
    1285:	012B      	st         x, @(+0x1, y)
    1286:	E419      	ld         x, @0xFFE4 <register uy>
    1287:	0438      	add        x, #+0x4
    1288:	022B      	st         x, @(+0x2, y)
    1289:	0100      	**prefx    0x1
    128A:	9E00      	**prefx    0x9E
    128B:	F39C      	bsr        +0x9DF3 <GattAccessRsp:0xB07E[p]>
                          length, value);

}
    128C:	080F      	leave      #+0x8

0x0000128D <BQGetDataSize>:
 *
 * RETURNS
 *      Size of data currently stored in the queue in bytes.
 *----------------------------------------------------------------------------*/
uint16 BQGetDataSize(uint8 queue_id)
{
    128D:	010B      	enter      #+0x1
    return QUEUE_LENGTH(queue_id);
    128E:	0390      	smult      #+0x3
    128F:	E119      	ld         x, @0xFFE1 <register al>
    1290:	4B00      	**prefx    0x4B
    1291:	2616      	ld         al, @(+0x4B26, x)
    1292:	4B00      	**prefx    0x4B
    1293:	2412      	ld         ah, @(+0x4B24, x)
    1294:	E085      	cmp        al, @0xFFE0 <register ah>
    1295:	03F8      	bcc        +0x3 <BQGetDataSize+0xB:0x1298[p]>
    1296:	2000      	**prefx    0x20
    1297:	0034      	add        al, #+0x2000
    1298:	E055      	sub        al, @0xFFE0 <register ah>
}
    1299:	010F      	leave      #+0x1

0x0000129A <BQClearBuffer>:
 *
 * RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
void BQClearBuffer(uint8 queue_id)
{
    129A:	010B      	enter      #+0x1
 /* Reset queue pointers */
 g_queue[queue_id].g_head=g_queue[queue_id].g_peek=g_queue[queue_id].g_tail=0;
    129B:	0390      	smult      #+0x3
    129C:	E119      	ld         x, @0xFFE1 <register al>
    129D:	4B00      	**prefx    0x4B
    129E:	2438      	add        x, #+0x4B24
    129F:	0014      	ld         al, #+0x0
    12A0:	0226      	st         al, @(+0x2, x)
    12A1:	0126      	st         al, @(+0x1, x)
    12A2:	0026      	st         al, @(0x0, x)
}
    12A3:	010F      	leave      #+0x1

0x000012A4 <BQCommitLastPeek>:
 *
 * RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
void BQCommitLastPeek(uint8 queue_id)
{
    12A4:	010B      	enter      #+0x1
    /* Update g_head to point to current g_peek location */
    g_queue[queue_id].g_head = g_queue[queue_id].g_peek;
    12A5:	0390      	smult      #+0x3
    12A6:	E119      	ld         x, @0xFFE1 <register al>
    12A7:	4B00      	**prefx    0x4B
    12A8:	2516      	ld         al, @(+0x4B25, x)
    12A9:	4B00      	**prefx    0x4B
    12AA:	2426      	st         al, @(+0x4B24, x)
}
    12AB:	010F      	leave      #+0x1

0x000012AC <peekBuffer>:
 *
 * RETURNS
 *      Number of bytes of data peeked.
 *----------------------------------------------------------------------------*/
static uint16 peekBuffer(uint8 *p_data, uint16 len,uint8 queue_id)
{
    12AC:	010B      	enter      #+0x1
    12AD:	FB25      	st         al, @0xFFFB <(scratchpad)>
    12AE:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    12AF:	0113      	ld         ah, @(+0x1, y)
    12B0:	FF23      	st         ah, @(-0x1, y)
    uint16 peeked = len;    /* Number of bytes of data peeked */

    /* Sanity check */
    if ((len == 0) || (p_data == NULL))
    12B1:	F899      	tst        @0xFFF8 <(scratchpad)>
    12B2:	69F4      	beq        +0x69 <UART_SLOW_RATE_2K4+0x5B:0x131B[p]>
    12B3:	E199      	tst        @0xFFE1 <register al>
    12B4:	67F4      	beq        +0x67 <UART_SLOW_RATE_2K4+0x5B:0x131B[p]>
        return 0;

    /* Cannot peek more data than is available */
    if (peeked> QUEUE_LENGTH(queue_id))
    12B5:	E015      	ld         al, @0xFFE0 <register ah>
    12B6:	0390      	smult      #+0x3
    12B7:	E119      	ld         x, @0xFFE1 <register al>
    12B8:	4B00      	**prefx    0x4B
    12B9:	2616      	ld         al, @(+0x4B26, x)
    12BA:	4B00      	**prefx    0x4B
    12BB:	241A      	ld         x, @(+0x4B24, x)
    12BC:	E385      	cmp        al, @0xFFE3 <register uxl>
    12BD:	05FC      	bcs        +0x5 <UART_SLOW_RATE_2K4+0x2:0x12C2[p]>
    12BE:	E111      	ld         ah, @0xFFE1 <register al>
    12BF:	E351      	sub        ah, @0xFFE3 <register uxl>
    12C0:	F921      	st         ah, @0xFFF9 <(scratchpad)>
    12C1:	08E0      	bra        +0x8 <UART_SLOW_RATE_2K4+0x9:0x12C9[p]>
    12C2:	2000      	**prefx    0x20
    12C3:	0034      	add        al, #+0x2000
    12C4:	E111      	ld         ah, @0xFFE1 <register al>
    12C5:	E351      	sub        ah, @0xFFE3 <register uxl>
    12C6:	F921      	st         ah, @0xFFF9 <(scratchpad)>
    12C7:	E000      	**prefx    0xE0
    12C8:	0034      	add        al, #-0x2000
    12C9:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    12CA:	F981      	cmp        ah, @0xFFF9 <(scratchpad)>
    12CB:	022C      	bcz        +0x2 <UART_SLOW_RATE_2K4+0xD:0x12CD[p]>
    12CC:	03E0      	bra        +0x3 <UART_SLOW_RATE_2K4+0xF:0x12CF[p]>
    12CD:	F921      	st         ah, @0xFFF9 <(scratchpad)>
    12CE:	0BE0      	bra        +0xB <UART_SLOW_RATE_2K4+0x19:0x12D9[p]>
    {
       peeked = QUEUE_LENGTH(queue_id);
    12CF:	E385      	cmp        al, @0xFFE3 <register uxl>
    12D0:	03F8      	bcc        +0x3 <UART_SLOW_RATE_2K4+0x13:0x12D3[p]>
    12D1:	2000      	**prefx    0x20
    12D2:	0034      	add        al, #+0x2000
    12D3:	E355      	sub        al, @0xFFE3 <register uxl>
    12D4:	F925      	st         al, @0xFFF9 <(scratchpad)>
    12D5:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
    12D6:	032C      	bcz        +0x3 <UART_SLOW_RATE_2K4+0x19:0x12D9[p]>
    12D7:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    12D8:	F921      	st         ah, @0xFFF9 <(scratchpad)>
       if(peeked > len)
          peeked = len;
    }

    /* Check whether we're going past the end of the buffer */
    if (g_queue[queue_id].g_head + peeked >= BUFFER_SIZE)
    12D9:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    12DA:	E335      	add        al, @0xFFE3 <register uxl>
    12DB:	2000      	**prefx    0x20
    12DC:	FF84      	cmp        al, #+0x1FFF
    12DD:	2B2C      	bcz        +0x2B <UART_SLOW_RATE_2K4+0x48:0x1308[p]>
    {
        /* Calculate how much space there is till the end of the buffer */
        const uint16 available = BUFFER_SIZE - g_queue[queue_id].g_head;
    12DE:	2000      	**prefx    0x20
    12DF:	0014      	ld         al, #+0x2000
    12E0:	E355      	sub        al, @0xFFE3 <register uxl>
    12E1:	FA25      	st         al, @0xFFFA <(scratchpad)>

        if(queue_id == SEND_QUEUE_ID)
    12E2:	FF9B      	tst        @(-0x1, y)
    12E3:	06F0      	bne        +0x6 <UART_SLOW_RATE_2K4+0x29:0x12E9[p]>
    12E4:	6C00      	**prefx    0x6C
    12E5:	9238      	add        x, #+0x6B92
        {
            if(available > len)
    12E6:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
    12E7:	082C      	bcz        +0x8 <UART_SLOW_RATE_2K4+0x2F:0x12EF[p]>
    12E8:	05E0      	bra        +0x5 <UART_SLOW_RATE_2K4+0x2D:0x12ED[p]>
    12E9:	4C00      	**prefx    0x4C
    12EA:	9238      	add        x, #+0x4B92
              MemCopy(p_data,&g_send_queue[g_queue[queue_id].g_head],available);
            }
        }
        else
        {
            if(available>len)
    12EB:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
    12EC:	032C      	bcz        +0x3 <UART_SLOW_RATE_2K4+0x2F:0x12EF[p]>
            {
              /* Copy data up to end of buffer */
              MemCopy(p_data, &g_recv_queue[g_queue[queue_id].g_head], len);
    12ED:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    12EE:	02E0      	bra        +0x2 <UART_SLOW_RATE_2K4+0x30:0x12F0[p]>
            }
            else
            {
              /* Copy data up to end of buffer */
              MemCopy(p_data,&g_recv_queue[g_queue[queue_id].g_head],available);
    12EF:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    12F0:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
    12F1:	FD09      	bc2        
            }
        }

        /* Update g_peek */
        g_queue[queue_id].g_peek = peeked - available;
    12F2:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    12F3:	FA55      	sub        al, @0xFFFA <(scratchpad)>
    12F4:	F825      	st         al, @0xFFF8 <(scratchpad)>
    12F5:	FF17      	ld         al, @(-0x1, y)
    12F6:	0390      	smult      #+0x3
    12F7:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    12F8:	E119      	ld         x, @0xFFE1 <register al>
    12F9:	4B00      	**prefx    0x4B
    12FA:	2522      	st         ah, @(+0x4B25, x)
    12FB:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
    12FC:	FA31      	add        ah, @0xFFFA <(scratchpad)>

        if(queue_id == SEND_QUEUE_ID)
    12FD:	FF9B      	tst        @(-0x1, y)
    12FE:	05F0      	bne        +0x5 <UART_SLOW_RATE_2K4+0x43:0x1303[p]>
        {
            /* Copy data from start of buffer */
            MemCopy(p_data + available,g_send_queue, g_queue[queue_id].g_peek);
    12FF:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    1300:	6C00      	**prefx    0x6C
    1301:	9218      	ld         x, #+0x6B92
    1302:	04E0      	bra        +0x4 <UART_SLOW_RATE_2K4+0x46:0x1306[p]>
        }
        else
        {
            /* Copy data from start of buffer */
            MemCopy(p_data + available,g_recv_queue, g_queue[queue_id].g_peek);
    1303:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    1304:	4C00      	**prefx    0x4C
    1305:	9218      	ld         x, #+0x4B92
    1306:	FD09      	bc2        
    1307:	16E0      	bra        +0x16 <UART_SLOW_RATE_2K4+0x5D:0x131D[p]>
        }
    }
    else
    {
        if(queue_id == SEND_QUEUE_ID)
    1308:	FF9B      	tst        @(-0x1, y)
    1309:	04F0      	bne        +0x4 <UART_SLOW_RATE_2K4+0x4D:0x130D[p]>
        {
            /* Peek data starting from the head of the queue */
            MemCopy(p_data, &g_send_queue[g_queue[queue_id].g_head], peeked);
    130A:	6C00      	**prefx    0x6C
    130B:	9238      	add        x, #+0x6B92
    130C:	03E0      	bra        +0x3 <UART_SLOW_RATE_2K4+0x4F:0x130F[p]>
        }
        else
        {
            /* Peek data starting from the head of the queue */
            MemCopy(p_data, &g_recv_queue[g_queue[queue_id].g_head], peeked);
    130D:	4C00      	**prefx    0x4C
    130E:	9238      	add        x, #+0x4B92
    130F:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    1310:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
    1311:	FD09      	bc2        
        }
        
        /* Update g_peek */
        g_queue[queue_id].g_peek = g_queue[queue_id].g_head + peeked;
    1312:	FF17      	ld         al, @(-0x1, y)
    1313:	0390      	smult      #+0x3
    1314:	E119      	ld         x, @0xFFE1 <register al>
    1315:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
    1316:	4B00      	**prefx    0x4B
    1317:	2432      	add        ah, @(+0x4B24, x)
    1318:	4B00      	**prefx    0x4B
    1319:	2522      	st         ah, @(+0x4B25, x)
    131A:	03E0      	bra        +0x3 <UART_SLOW_RATE_2K4+0x5D:0x131D[p]>
    131B:	0014      	ld         al, #+0x0
    131C:	F925      	st         al, @0xFFF9 <(scratchpad)>
    }

    return peeked;
}
    131D:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    131E:	010F      	leave      #+0x1

0x0000131F <BQPeekBytes>:
 *      enough data is available.
 *----------------------------------------------------------------------------*/
uint16 BQPeekBytes(uint8 *p_data, uint16 len,uint8 queue_id)
{
    /* Peek into the buffer */
    return peekBuffer(p_data, len,queue_id);
    131F:	8DE0      	bra        -0x73 <peekBuffer:0x12AC[p]>

0x00001320 <BQPopBytes>:
 * RETURNS
 *      Number of bytes actually extracted, may be fewer than requested if not
 *      enough data is available.
 *----------------------------------------------------------------------------*/
uint16 BQPopBytes(uint8 *p_data, uint16 len,uint8 queue_id)
{
    1320:	030B      	enter      #+0x3
    /* Copy the data into the return buffer */
    uint16 peeked = peekBuffer(p_data,len,queue_id);
    1321:	031B      	ld         x, @(+0x3, y)
    1322:	002B      	st         x, @(0x0, y)
    1323:	899C      	bsr        -0x77 <peekBuffer:0x12AC[p]>
    1324:	0127      	st         al, @(+0x1, y)

    /* Remove the peeked data from the queue */
    BQCommitLastPeek(queue_id);
    1325:	0317      	ld         al, @(+0x3, y)
    1326:	FF00      	**prefx    0xFF
    1327:	7D9C      	bsr        -0x83 <BQCommitLastPeek:0x12A4[p]>

    /* Return number of bytes peeked */
    return peeked;
}
    1328:	0117      	ld         al, @(+0x1, y)
    1329:	030F      	leave      #+0x3

0x0000132A <OtaDataInit>:
 *---------------------------------------------------------------------------*/

extern void OtaDataInit(void)
{

    ota_serv_data.ota_reset_required = FALSE;
    132A:	0014      	ld         al, #+0x0
    132B:	4B00      	**prefx    0x4B
    132C:	4125      	st         al, @0x4B41 <ota_serv_data>

}
    132D:	00E2      	bra        0x0, x

0x0000132E <OtaCheckHandleRange>:
 *       Nothing.
 *
 *----------------------------------------------------------------------------*/

extern bool OtaCheckHandleRange(uint16 handle)
{
    132E:	0010      	ld         ah, #+0x0
    132F:	E134      	add        al, #-0x1F
    1330:	0A84      	cmp        al, #+0xA
    1331:	02F8      	bcc        +0x2 <OtaCheckHandleRange+0x5:0x1333[p]>
    1332:	0110      	ld         ah, #+0x1
    return ((handle >= HANDLE_CSR_OTA_SERVICE) &&
            (handle <= HANDLE_CSR_OTA_SERVICE_END))
            ? TRUE : FALSE;
}
    1333:	E015      	ld         al, @0xFFE0 <register ah>
    1334:	00E2      	bra        0x0, x

0x00001335 <OtaResetRequired>:
 *---------------------------------------------------------------------------*/

extern bool OtaResetRequired(void)
{
    return ota_serv_data.ota_reset_required;
}
    1335:	4B00      	**prefx    0x4B
    1336:	4115      	ld         al, @0x4B41 <ota_serv_data>
    1337:	00E2      	bra        0x0, x

0x00001338 <OtaHandleAccessWrite>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void OtaHandleAccessWrite(GATT_ACCESS_IND_T *p_ind)
{
    1338:	0D0B      	enter      #+0xD
    1339:	0B27      	st         al, @(+0xB, y)
    (void)GapGetRandomAddress(p_bd_addr);
#else
   p_bd_addr = NULL;
#endif /* USE_STATIC_RANDOM_ADDRESS || USE_RESOLVABLE_RANDOM_ADDRESS */

    switch(p_ind->handle)
    133A:	E119      	ld         x, @0xFFE1 <register al>
    133B:	0216      	ld         al, @(+0x2, x)
    133C:	2384      	cmp        al, #+0x23
    133D:	29F4      	beq        +0x29 <OtaHandleAccessWrite+0x2E:0x1366[p]>
    133E:	2684      	cmp        al, #+0x26
    133F:	53F4      	beq        +0x53 <___libgatt_lib_db_3646+0x17:0x1392[p]>
    1340:	2184      	cmp        al, #+0x21
    1341:	04F4      	beq        +0x4 <OtaHandleAccessWrite+0xD:0x1345[p]>
    1342:	0A00      	**prefx    0xA
    1343:	0314      	ld         al, #+0xA03
    1344:	5BE0      	bra        +0x5B <___libgatt_lib_db_3646+0x24:0x139F[p]>
         * specified application
         */
        case HANDLE_CSR_OTA_CURRENT_APP:
        {
            /* Set the index of the current application */
            const uint8 app_id = p_ind->value[0]; /* New application index */
    1345:	0B1B      	ld         x, @(+0xB, y)
    1346:	0616      	ld         al, @(+0x6, x)
    1347:	E119      	ld         x, @0xFFE1 <register al>
    1348:	0016      	ld         al, @(0x0, x)
    1349:	0627      	st         al, @(+0x6, y)

            rc = OtaWriteCurrentApp(app_id,
    134A:	4B00      	**prefx    0x4B
    134B:	7B15      	ld         al, @0x4B7B <g_app_data+0x7>
    134C:	0A27      	st         al, @(+0xA, y)
    134D:	4C00      	**prefx    0x4C
    134E:	8119      	ld         x, @0x4B81 <g_app_data+0xD>
    134F:	092B      	st         x, @(+0x9, y)
    1350:	0100      	**prefx    0x1
    1351:	C59C      	bsr        +0xC5 <GattServiceChangedIndActive:0x1416[p]>
    1352:	4B00      	**prefx    0x4B
    1353:	7518      	ld         x, #+0x4B75
    1354:	002B      	st         x, @(0x0, y)
    1355:	091B      	ld         x, @(+0x9, y)
    1356:	012B      	st         x, @(+0x1, y)
    1357:	0018      	ld         x, #+0x0
    1358:	022B      	st         x, @(+0x2, y)
    1359:	4C00      	**prefx    0x4C
    135A:	8218      	ld         x, #+0x4B82
    135B:	032B      	st         x, @(+0x3, y)
    135C:	0427      	st         al, @(+0x4, y)
    135D:	0617      	ld         al, @(+0x6, y)
    135E:	0A13      	ld         ah, @(+0xA, y)
    135F:	0500      	**prefx    0x5
    1360:	D19C      	bsr        +0x4D1 <OtaWriteCurrentApp:0x1831[p]>
    1361:	0727      	st         al, @(+0x7, y)
                                    IS_BONDED,
                                    &(CONN_CENTRAL_ADDR),
                                    LINK_DIVERSIFIER,
                                    p_bd_addr,CONNECTION_IRK,
                                    GattServiceChangedIndActive());
            if (rc != sys_status_success)
    1362:	3EF4      	beq        +0x3E <___libgatt_lib_db_3646+0x25:0x13A0[p]>
    1363:	0A00      	**prefx    0xA
    1364:	4114      	ld         al, #+0xA41
    1365:	3AE0      	bra        +0x3A <___libgatt_lib_db_3646+0x24:0x139F[p]>
        case HANDLE_CSR_OTA_READ_CS_BLOCK:
        {
            /* Set the offset and length of a block of CS to read and
             * validate input(expecting uint16[2])
             */
            if (p_ind->size_value == WORDS_TO_BYTES(sizeof(uint16[2])))
    1366:	0B1B      	ld         x, @(+0xB, y)
    1367:	0516      	ld         al, @(+0x5, x)
    1368:	0484      	cmp        al, #+0x4
    1369:	04F4      	beq        +0x4 <OtaHandleAccessWrite+0x35:0x136D[p]>
    136A:	0A00      	**prefx    0xA
    136B:	0D14      	ld         al, #+0xA0D
    136C:	33E0      	bra        +0x33 <___libgatt_lib_db_3646+0x24:0x139F[p]>
            {
                const uint16 offset = BufReadUint16(&p_ind->value);
    136D:	0B1B      	ld         x, @(+0xB, y)
    136E:	0638      	add        x, #+0x6
    136F:	082B      	st         x, @(+0x8, y)
    1370:	E315      	ld         al, @0xFFE3 <register uxl>
    1371:	7A00      	**prefx    0x7A
    1372:	419C      	bsr        +0x7A41 <BufReadUint16:0x8DB3[p]>
    1373:	0527      	st         al, @(+0x5, y)

                data_transfer_data_length = (uint8)BufReadUint16(&p_ind->value);
    1374:	0817      	ld         al, @(+0x8, y)
    1375:	7A00      	**prefx    0x7A
    1376:	3D9C      	bsr        +0x7A3D <BufReadUint16:0x8DB3[p]>
    1377:	E119      	ld         x, @0xFFE1 <register al>
    1378:	4B00      	**prefx    0x4B
    1379:	2A25      	st         al, @0x4B2A <data_transfer_data_length>
static sys_status readCsBlock(uint16 offset, uint8 length, uint8 *value)
{
    /* Check the length is within the packet size and that the read does not
     * overflow the CS block.
     */
    if ((length > MAX_DATA_LENGTH) ||
    137A:	1584      	cmp        al, #+0x15
    137B:	14F8      	bcc        +0x14 <___libgatt_lib_db_3646+0x14:0x138F[p]>
    137C:	E111      	ld         ah, @0xFFE1 <register al>
    137D:	0130      	add        ah, #+0x1
    137E:	0009      	**unsigned
    137F:	01A4      	lsr        #0x1
    1380:	0533      	add        ah, @(+0x5, y)
    1381:	5980      	cmp        ah, #+0x59
    1382:	0DF8      	bcc        +0xD <___libgatt_lib_db_3646+0x14:0x138F[p]>
        (offset + BYTES_TO_WORDS(length) > CSTORE_SIZE))
        return CSR_OTA_KEY_NOT_READ;

    MemCopyUnPack(value, (uint16 *)(DATA_CSTORE_START + offset), length);
    1383:	0517      	ld         al, @(+0x5, y)
    1384:	A000      	**prefx    0xA0
    1385:	8434      	add        al, #-0x607C
    1386:	0527      	st         al, @(+0x5, y)
    1387:	002B      	st         x, @(0x0, y)
    1388:	4B00      	**prefx    0x4B
    1389:	2B14      	ld         al, #+0x4B2B
    138A:	0513      	ld         ah, @(+0x5, y)
    138B:	7900      	**prefx    0x79
    138C:	549C      	bsr        +0x7954 <MemCopyUnPack:0x8CE0[p]>
    138D:	0018      	ld         x, #+0x0
    138E:	0CE0      	bra        +0xC <___libgatt_lib_db_3646+0x1F:0x139A[p]>
    138F:	0100      	**prefx    0x1
    1390:	8014      	ld         al, #+0x80
    1391:	0EE0      	bra        +0xE <___libgatt_lib_db_3646+0x24:0x139F[p]>
        case HANDLE_CSR_OTA_DATA_TRANSFER_CLIENT_CONFIG:
        {
            /* Modify the Data Transfer Client Characteristic Configuration
             * Descriptor
             */
            client_config = BufReadUint16(&(p_ind->value));
    1392:	0B17      	ld         al, @(+0xB, y)
    1393:	0634      	add        al, #+0x6
    1394:	7A00      	**prefx    0x7A
    1395:	1E9C      	bsr        +0x7A1E <BufReadUint16:0x8DB3[p]>

            if((client_config == gatt_client_config_notification) ||
    1396:	0184      	cmp        al, #+0x1
    1397:	052C      	bcz        +0x5 <___libgatt_lib_db_3646+0x21:0x139C[p]>
    1398:	0B00      	**prefx    0xB
    1399:	FD18      	ld         x, #+0xAFD
    139A:	072B      	st         x, @(+0x7, y)
    139B:	05E0      	bra        +0x5 <___libgatt_lib_db_3646+0x25:0x13A0[p]>
               (client_config == gatt_client_config_none))
            {
                data_transfer_configuration[0] = client_config;
    139C:	4B00      	**prefx    0x4B
    139D:	3F25      	st         al, @0x4B3F <data_transfer_configuration>
    139E:	0014      	ld         al, #+0x0
    139F:	0727      	st         al, @(+0x7, y)
        default:
        /* Writing to this characteristic is not permitted */
        break;
    }

    GattAccessRsp(p_ind->cid, p_ind->handle, rc, 0, NULL);
    13A0:	0B1B      	ld         x, @(+0xB, y)
    13A1:	0116      	ld         al, @(+0x1, x)
    13A2:	0212      	ld         ah, @(+0x2, x)
    13A3:	071B      	ld         x, @(+0x7, y)
    13A4:	002B      	st         x, @(0x0, y)
    13A5:	0018      	ld         x, #+0x0
    13A6:	012B      	st         x, @(+0x1, y)
    13A7:	022B      	st         x, @(+0x2, y)
    13A8:	0100      	**prefx    0x1
    13A9:	9D00      	**prefx    0x9D
    13AA:	D49C      	bsr        +0x9CD4 <GattAccessRsp:0xB07E[p]>

    /* Perform now any follow-up actions */
    if (rc == sys_status_success)
    13AB:	079B      	tst        @(+0x7, y)
    13AC:	21F0      	bne        +0x21 <___libgatt_lib_db_3646+0x52:0x13CD[p]>
    {
        switch(p_ind->handle)
    13AD:	0B1B      	ld         x, @(+0xB, y)
    13AE:	0216      	ld         al, @(+0x2, x)
    13AF:	2184      	cmp        al, #+0x21
    13B0:	14F4      	beq        +0x14 <___libgatt_lib_db_3646+0x49:0x13C4[p]>
    13B1:	2384      	cmp        al, #+0x23
    13B2:	1BF0      	bne        +0x1B <___libgatt_lib_db_3646+0x52:0x13CD[p]>
            case HANDLE_CSR_OTA_READ_CS_BLOCK:
            {
                /* If this write action was to trigger a CS block read, and the
                 * notifications have been enabled, send the result now.
                 */
                if(data_transfer_configuration[0] ==
    13B3:	4B00      	**prefx    0x4B
    13B4:	3F15      	ld         al, @0x4B3F <data_transfer_configuration>
    13B5:	0184      	cmp        al, #+0x1
    13B6:	17F0      	bne        +0x17 <___libgatt_lib_db_3646+0x52:0x13CD[p]>
                   gatt_client_config_notification)
                {
                    GattCharValueNotification(CONNECTION_CID,
    13B7:	4B00      	**prefx    0x4B
    13B8:	2A15      	ld         al, @0x4B2A <data_transfer_data_length>
    13B9:	0027      	st         al, @(0x0, y)
    13BA:	4B00      	**prefx    0x4B
    13BB:	2B18      	ld         x, #+0x4B2B
    13BC:	012B      	st         x, @(+0x1, y)
    13BD:	4B00      	**prefx    0x4B
    13BE:	7A15      	ld         al, @0x4B7A <g_app_data+0x6>
    13BF:	2510      	ld         ah, #+0x25
    13C0:	0100      	**prefx    0x1
    13C1:	9E00      	**prefx    0x9E
    13C2:	EE9C      	bsr        +0x9DEE <GattCharValueNotification:0xB1B0[p]>
    13C3:	0AE0      	bra        +0xA <___libgatt_lib_db_3646+0x52:0x13CD[p]>
                 */

                /* Record that the GATT database may be different after the
                 * device has reset.
                 */
                GattOnOtaSwitch();
    13C4:	7A9C      	bsr        +0x7A <GattOnOtaSwitch:0x143E[p]>

                /* When the disconnect confirmation comes in, call
                 * OtaReset().
                 */
                ota_serv_data.ota_reset_required = TRUE;
    13C5:	0114      	ld         al, #+0x1
    13C6:	4B00      	**prefx    0x4B
    13C7:	4125      	st         al, @0x4B41 <ota_serv_data>

                /* Disconnect from the remote device */
                AppSetState(app_state_disconnecting);
    13C8:	0514      	ld         al, #+0x5
            default:
                /* No follow up action necessary */
                break;
        }
    }
}
    13C9:	0C1B      	ld         x, @(+0xC, y)
    13CA:	0D3C      	add        y, #+0xD
                 * OtaReset().
                 */
                ota_serv_data.ota_reset_required = TRUE;

                /* Disconnect from the remote device */
                AppSetState(app_state_disconnecting);
    13CB:	F800      	**prefx    0xF8
    13CC:	9CE0      	bra        -0x864 <AppSetState:0xB68[p]>
            default:
                /* No follow up action necessary */
                break;
        }
    }
}
    13CD:	0D0F      	leave      #+0xD

0x000013CE <OtaHandleAccessRead>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void OtaHandleAccessRead(GATT_ACCESS_IND_T *p_ind)
{
    13CE:	060B      	enter      #+0x6
    13CF:	0427      	st         al, @(+0x4, y)
    uint8 *p_value = NULL;
    uint8 data_length = 0;

    csr_application_id current_app;

    switch(p_ind->handle)
    13D0:	E119      	ld         x, @0xFFE1 <register al>
    13D1:	0216      	ld         al, @(+0x2, x)
    13D2:	2584      	cmp        al, #+0x25
    13D3:	21F4      	beq        +0x21 <OtaHandleAccessRead+0x26:0x13F4[p]>
    13D4:	2684      	cmp        al, #+0x26
    13D5:	04F8      	bcc        +0x4 <OtaHandleAccessRead+0xB:0x13D9[p]>
    13D6:	2184      	cmp        al, #+0x21
    13D7:	25F0      	bne        +0x25 <OtaHandleAccessRead+0x2E:0x13FC[p]>
    13D8:	11E0      	bra        +0x11 <OtaHandleAccessRead+0x1B:0x13E9[p]>
    13D9:	2684      	cmp        al, #+0x26
    13DA:	09F4      	beq        +0x9 <OtaHandleAccessRead+0x15:0x13E3[p]>
    13DB:	2884      	cmp        al, #+0x28
    13DC:	20F0      	bne        +0x20 <OtaHandleAccessRead+0x2E:0x13FC[p]>
    13DD:	0014      	ld         al, #+0x0
    13DE:	F925      	st         al, @0xFFF9 <(scratchpad)>
    13DF:	F825      	st         al, @0xFFF8 <(scratchpad)>
    13E0:	0A00      	**prefx    0xA
    13E1:	4318      	ld         x, #+0xA43
    13E2:	10E0      	bra        +0x10 <OtaHandleAccessRead+0x24:0x13F2[p]>
    13E3:	4B00      	**prefx    0x4B
    13E4:	3F14      	ld         al, #+0x4B3F
    13E5:	F925      	st         al, @0xFFF9 <(scratchpad)>
    13E6:	0218      	ld         x, #+0x2
    13E7:	F829      	st         x, @0xFFF8 <(scratchpad)>
    13E8:	12E0      	bra        +0x12 <OtaHandleAccessRead+0x2C:0x13FA[p]>
    {
        case HANDLE_CSR_OTA_CURRENT_APP:
        {
            /* Read the index of the current application */
            current_app = OtaReadCurrentApp();
    13E9:	0300      	**prefx    0x3
    13EA:	679C      	bsr        +0x367 <OtaReadCurrentApp:0x1751[p]>
    13EB:	0327      	st         al, @(+0x3, y)
    13EC:	E419      	ld         x, @0xFFE4 <register uy>
    13ED:	0338      	add        x, #+0x3
    13EE:	F929      	st         x, @0xFFF9 <(scratchpad)>
    13EF:	0114      	ld         al, #+0x1
    13F0:	F825      	st         al, @0xFFF8 <(scratchpad)>
    13F1:	0018      	ld         x, #+0x0
    13F2:	FA29      	st         x, @0xFFFA <(scratchpad)>
    13F3:	0FE0      	bra        +0xF <OtaHandleAccessRead+0x34:0x1402[p]>

        case HANDLE_CSR_OTA_DATA_TRANSFER:
        {
            /* Read the value of the data transfer characteristic */
            p_value = (uint8*)data_transfer_memory;
            data_length = data_transfer_data_length;
    13F4:	4B00      	**prefx    0x4B
    13F5:	2A15      	ld         al, @0x4B2A <data_transfer_data_length>
    13F6:	F825      	st         al, @0xFFF8 <(scratchpad)>
    13F7:	4B00      	**prefx    0x4B
    13F8:	2B18      	ld         x, #+0x4B2B
    13F9:	F929      	st         x, @0xFFF9 <(scratchpad)>
    13FA:	0014      	ld         al, #+0x0
    13FB:	06E0      	bra        +0x6 <OtaHandleAccessRead+0x33:0x1401[p]>
        }
        break;
    13FC:	0018      	ld         x, #+0x0
    13FD:	F929      	st         x, @0xFFF9 <(scratchpad)>
    13FE:	F829      	st         x, @0xFFF8 <(scratchpad)>
    13FF:	0A00      	**prefx    0xA
    1400:	0214      	ld         al, #+0xA02
    1401:	FA25      	st         al, @0xFFFA <(scratchpad)>
        /* Reading is not supported on this handle */
        rc = gatt_status_read_not_permitted;
        break;
    }

    GattAccessRsp(p_ind->cid, p_ind->handle, rc, data_length, p_value);
    1402:	041B      	ld         x, @(+0x4, y)
    1403:	0116      	ld         al, @(+0x1, x)
    1404:	0212      	ld         ah, @(+0x2, x)
    1405:	FA19      	ld         x, @0xFFFA <(scratchpad)>
    1406:	002B      	st         x, @(0x0, y)
    1407:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1408:	012B      	st         x, @(+0x1, y)
    1409:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    140A:	022B      	st         x, @(+0x2, y)
    140B:	0100      	**prefx    0x1
    140C:	9C00      	**prefx    0x9C
    140D:	719C      	bsr        +0x9C71 <GattAccessRsp:0xB07E[p]>
}
    140E:	060F      	leave      #+0x6

0x0000140F <GattCheckHandleRange>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern bool GattCheckHandleRange(uint16 handle)
{
    140F:	0010      	ld         ah, #+0x0
    1410:	FF34      	add        al, #-0x1
    1411:	0484      	cmp        al, #+0x4
    1412:	02F8      	bcc        +0x2 <GattCheckHandleRange+0x5:0x1414[p]>
    1413:	0110      	ld         ah, #+0x1
    return ((handle >= HANDLE_GATT_SERVICE) &&
            (handle <= HANDLE_GATT_SERVICE_END))
            ? TRUE : FALSE;
}
    1414:	E015      	ld         al, @0xFFE0 <register ah>
    1415:	00E2      	bra        0x0, x

0x00001416 <GattServiceChangedIndActive>:
 *      True if indications are requested, false otherwise.
 *
 *----------------------------------------------------------------------------*/

extern bool GattServiceChangedIndActive(void)
{
    1416:	010B      	enter      #+0x1
    return (IsDeviceBonded() &&
    1417:	F300      	**prefx    0xF3
    1418:	A49C      	bsr        -0xD5C <IsDeviceBonded:0x6BC[p]>
    1419:	E199      	tst        @0xFFE1 <register al>
    141A:	03F0      	bne        +0x3 <GattServiceChangedIndActive+0x7:0x141D[p]>
    141B:	0010      	ld         ah, #+0x0
    141C:	08E0      	bra        +0x8 <GattServiceChangedIndActive+0xE:0x1424[p]>
    141D:	0010      	ld         ah, #+0x0
    141E:	4B00      	**prefx    0x4B
    141F:	4315      	ld         al, @0x4B43 <g_gatt_data+0x1>
    1420:	0284      	cmp        al, #+0x2
    1421:	02F4      	beq        +0x2 <GattServiceChangedIndActive+0xD:0x1423[p]>
    1422:	0110      	ld         ah, #+0x1
    1423:	01D0      	xor        ah, #0x1
            (g_gatt_data.serv_changed_config == gatt_client_config_indication));
}
    1424:	E015      	ld         al, @0xFFE0 <register ah>
    1425:	010F      	leave      #+0x1

0x00001426 <GattDataInit>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/

extern void GattDataInit(void)
{
    1426:	010B      	enter      #+0x1
    if(!IsDeviceBonded())
    1427:	F300      	**prefx    0xF3
    1428:	949C      	bsr        -0xD6C <IsDeviceBonded:0x6BC[p]>
    1429:	E199      	tst        @0xFFE1 <register al>
    142A:	05F0      	bne        +0x5 <GattDataInit+0x9:0x142F[p]>
    {
        /* Initialise Service Changed Client Configuration Characterisitic
         * descriptor value only if device is not bonded
         */
        g_gatt_data.serv_changed_config = gatt_client_config_none;
    142B:	4B00      	**prefx    0x4B
    142C:	4325      	st         al, @0x4B43 <g_gatt_data+0x1>
        g_gatt_data.serv_changed = FALSE;
    142D:	4B00      	**prefx    0x4B
    142E:	4225      	st         al, @0x4B42 <g_gatt_data>
    }

}
    142F:	010F      	leave      #+0x1

0x00001430 <GattBondingNotify>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/

extern void GattBondingNotify(void)
{
    1430:	020B      	enter      #+0x2
    /* Write data to NVM if bond is established */
    if(IsDeviceBonded())
    1431:	F300      	**prefx    0xF3
    1432:	8A9C      	bsr        -0xD76 <IsDeviceBonded:0x6BC[p]>
    1433:	E199      	tst        @0xFFE1 <register al>
    1434:	09F4      	beq        +0x9 <GattBondingNotify+0xD:0x143D[p]>
    {
        /* Write to NVM the Service Changed Client Configuration value */
        Nvm_Write((uint16*)&(g_gatt_data.serv_changed_config),
    1435:	4B00      	**prefx    0x4B
    1436:	4415      	ld         al, @0x4B44 <g_gatt_data+0x2>
    1437:	0027      	st         al, @(0x0, y)
    1438:	4B00      	**prefx    0x4B
    1439:	4314      	ld         al, #+0x4B43
    143A:	0110      	ld         ah, #+0x1
    143B:	F100      	**prefx    0xF1
    143C:	339C      	bsr        -0xECD <Nvm_Write:0x56F[p]>
                  sizeof(g_gatt_data.serv_changed_config),
                  (g_gatt_data.nvm_offset +
                   SERV_CHANGED_CLIENT_CONFIG_OFFSET));
    }
}
    143D:	020F      	leave      #+0x2

0x0000143E <GattOnOtaSwitch>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void GattOnOtaSwitch(void)
{
    143E:	020B      	enter      #+0x2
    if((IsDeviceBonded()) &&
    143F:	F200      	**prefx    0xF2
    1440:	7C9C      	bsr        -0xD84 <IsDeviceBonded:0x6BC[p]>
    1441:	E199      	tst        @0xFFE1 <register al>
    1442:	11F4      	beq        +0x11 <GattOnOtaSwitch+0x15:0x1453[p]>
    1443:	4B00      	**prefx    0x4B
    1444:	4315      	ld         al, @0x4B43 <g_gatt_data+0x1>
    1445:	0284      	cmp        al, #+0x2
    1446:	0DF0      	bne        +0xD <GattOnOtaSwitch+0x15:0x1453[p]>
       (g_gatt_data.serv_changed_config == gatt_client_config_indication))
    {
        /* Record that a Service Changed indication will likely need to be sent
         * to the bonded device next time it connects.
         */
        g_gatt_data.serv_changed = TRUE;
    1447:	0114      	ld         al, #+0x1
    1448:	4B00      	**prefx    0x4B
    1449:	4225      	st         al, @0x4B42 <g_gatt_data>

        Nvm_Write((uint16*)&(g_gatt_data.serv_changed),
    144A:	4B00      	**prefx    0x4B
    144B:	4415      	ld         al, @0x4B44 <g_gatt_data+0x2>
    144C:	0134      	add        al, #+0x1
    144D:	0027      	st         al, @(0x0, y)
    144E:	4B00      	**prefx    0x4B
    144F:	4214      	ld         al, #+0x4B42
    1450:	0110      	ld         ah, #+0x1
    1451:	F100      	**prefx    0xF1
    1452:	1D9C      	bsr        -0xEE3 <Nvm_Write:0x56F[p]>
                 sizeof(g_gatt_data.serv_changed),
                 (g_gatt_data.nvm_offset + SERV_CHANGED_SEND_IND));
    }
}
    1453:	020F      	leave      #+0x2

0x00001454 <GattHandleAccessWrite>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void GattHandleAccessWrite(GATT_ACCESS_IND_T *p_ind)
{
    1454:	060B      	enter      #+0x6
    1455:	0427      	st         al, @(+0x4, y)
    uint16  client_config;
    uint8  *p_value = p_ind->value;
    1456:	E119      	ld         x, @0xFFE1 <register al>
    1457:	061A      	ld         x, @(+0x6, x)
    1458:	032B      	st         x, @(+0x3, y)
    sys_status rc = gatt_status_write_not_permitted;

    if(p_ind->handle == HANDLE_SERVICE_CHANGED_CLIENT_CONFIG)
    1459:	E119      	ld         x, @0xFFE1 <register al>
    145A:	0216      	ld         al, @(+0x2, x)
    145B:	0484      	cmp        al, #+0x4
    145C:	04F4      	beq        +0x4 <GattHandleAccessWrite+0xC:0x1460[p]>
    145D:	0A00      	**prefx    0xA
    145E:	0314      	ld         al, #+0xA03
    145F:	1CE0      	bra        +0x1C <GattHandleAccessWrite+0x27:0x147B[p]>
    {
        client_config = BufReadUint16(&p_value);
    1460:	E415      	ld         al, @0xFFE4 <register uy>
    1461:	0334      	add        al, #+0x3
    1462:	7900      	**prefx    0x79
    1463:	509C      	bsr        +0x7950 <BufReadUint16:0x8DB3[p]>

        /* Client configuration is a bit field value, so ideally bit wise
         * comparison should be used but since the application supports only
         * indications or nothing, direct comparison should be used.
         */
        if((client_config == gatt_client_config_indication) ||
    1464:	0284      	cmp        al, #+0x2
    1465:	07F4      	beq        +0x7 <GattHandleAccessWrite+0x18:0x146C[p]>
    1466:	E199      	tst        @0xFFE1 <register al>
    1467:	05F4      	beq        +0x5 <GattHandleAccessWrite+0x18:0x146C[p]>
    1468:	0B00      	**prefx    0xB
    1469:	FD18      	ld         x, #+0xAFD
    146A:	F829      	st         x, @0xFFF8 <(scratchpad)>
    146B:	11E0      	bra        +0x11 <GattHandleAccessWrite+0x28:0x147C[p]>
           (client_config == gatt_client_config_none))
        {
            g_gatt_data.serv_changed_config = client_config;
    146C:	4B00      	**prefx    0x4B
    146D:	4325      	st         al, @0x4B43 <g_gatt_data+0x1>
            rc = sys_status_success;
            if(IsDeviceBonded())
    146E:	F200      	**prefx    0xF2
    146F:	4D9C      	bsr        -0xDB3 <IsDeviceBonded:0x6BC[p]>
    1470:	E199      	tst        @0xFFE1 <register al>
    1471:	0AF4      	beq        +0xA <GattHandleAccessWrite+0x27:0x147B[p]>
            {
                Nvm_Write((uint16*)&(g_gatt_data.serv_changed_config),
    1472:	4B00      	**prefx    0x4B
    1473:	4419      	ld         x, @0x4B44 <g_gatt_data+0x2>
    1474:	002B      	st         x, @(0x0, y)
    1475:	4B00      	**prefx    0x4B
    1476:	4314      	ld         al, #+0x4B43
    1477:	0110      	ld         ah, #+0x1
    1478:	F100      	**prefx    0xF1
    1479:	F69C      	bsr        -0xF0A <Nvm_Write:0x56F[p]>
    147A:	0014      	ld         al, #+0x0
    147B:	F825      	st         al, @0xFFF8 <(scratchpad)>
        {
            rc = gatt_status_desc_improper_config;
        }
    }
    /* Send Access Response */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc, 0, NULL);
    147C:	041B      	ld         x, @(+0x4, y)
    147D:	0116      	ld         al, @(+0x1, x)
    147E:	0212      	ld         ah, @(+0x2, x)
    147F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1480:	002B      	st         x, @(0x0, y)
    1481:	0018      	ld         x, #+0x0
    1482:	012B      	st         x, @(+0x1, y)
    1483:	022B      	st         x, @(+0x2, y)
    1484:	0100      	**prefx    0x1
    1485:	9C00      	**prefx    0x9C
    1486:	F89C      	bsr        +0x9BF8 <GattAccessRsp:0xB07E[p]>
}
    1487:	060F      	leave      #+0x6

0x00001488 <GattHandleAccessRead>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void GattHandleAccessRead(GATT_ACCESS_IND_T *p_ind)
{
    1488:	080B      	enter      #+0x8
    1489:	0627      	st         al, @(+0x6, y)
    uint16  data_length = 0;
    uint8   value[2];
    uint8   *p_value = NULL;
    148A:	0014      	ld         al, #+0x0
    148B:	0327      	st         al, @(+0x3, y)
    sys_status rc = gatt_status_read_not_permitted;

    if(p_ind->handle == HANDLE_SERVICE_CHANGED_CLIENT_CONFIG)
    148C:	061B      	ld         x, @(+0x6, y)
    148D:	0216      	ld         al, @(+0x2, x)
    148E:	0484      	cmp        al, #+0x4
    148F:	07F4      	beq        +0x7 <GattHandleAccessRead+0xE:0x1496[p]>
    1490:	0014      	ld         al, #+0x0
    1491:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1492:	0A00      	**prefx    0xA
    1493:	0218      	ld         x, #+0xA02
    1494:	F929      	st         x, @0xFFF9 <(scratchpad)>
    1495:	0DE0      	bra        +0xD <GattHandleAccessRead+0x1A:0x14A2[p]>
    {
        /* Service changed client characteristic configuration descriptor read
         * has been requested
         */
        data_length = 2;
        p_value = value;
    1496:	E415      	ld         al, @0xFFE4 <register uy>
    1497:	0434      	add        al, #+0x4
    1498:	0327      	st         al, @(+0x3, y)
        BufWriteUint16((uint8 **)&p_value, g_gatt_data.serv_changed_config);
    1499:	FF34      	add        al, #-0x1
    149A:	4B00      	**prefx    0x4B
    149B:	4311      	ld         ah, @0x4B43 <g_gatt_data+0x1>
    149C:	7900      	**prefx    0x79
    149D:	349C      	bsr        +0x7934 <BufWriteUint16:0x8DD1[p]>
    149E:	0218      	ld         x, #+0x2
    149F:	F829      	st         x, @0xFFF8 <(scratchpad)>
    14A0:	0014      	ld         al, #+0x0
    14A1:	F925      	st         al, @0xFFF9 <(scratchpad)>
        rc = sys_status_success;
    }

    /* Send Access Response */
    GattAccessRsp(p_ind->cid, p_ind->handle, rc, data_length, p_value);
    14A2:	061B      	ld         x, @(+0x6, y)
    14A3:	0116      	ld         al, @(+0x1, x)
    14A4:	0212      	ld         ah, @(+0x2, x)
    14A5:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    14A6:	002B      	st         x, @(0x0, y)
    14A7:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    14A8:	012B      	st         x, @(+0x1, y)
    14A9:	031B      	ld         x, @(+0x3, y)
    14AA:	022B      	st         x, @(+0x2, y)
    14AB:	0100      	**prefx    0x1
    14AC:	9C00      	**prefx    0x9C
    14AD:	D19C      	bsr        +0x9BD1 <GattAccessRsp:0xB07E[p]>
}
    14AE:	080F      	leave      #+0x8

0x000014AF <GattOnConnection>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void GattOnConnection(uint16 st_ucid)
{
    14AF:	070B      	enter      #+0x7
    14B0:	E111      	ld         ah, @0xFFE1 <register al>
    service_changed_data[1] = WORD_MSB((HANDLE_GATT_SERVICE_END+1));
    service_changed_data[2] = WORD_LSB(ATT_HIGHEST_POSSIBLE_HANDLE);
    service_changed_data[3] = WORD_MSB(ATT_HIGHEST_POSSIBLE_HANDLE);


    if((g_gatt_data.serv_changed) &&
    14B1:	4B00      	**prefx    0x4B
    14B2:	4299      	tst        @0x4B42 <g_gatt_data>
    14B3:	23F4      	beq        +0x23 <GattOnConnection+0x27:0x14D6[p]>
    14B4:	4B00      	**prefx    0x4B
    14B5:	4315      	ld         al, @0x4B43 <g_gatt_data+0x1>
    14B6:	0284      	cmp        al, #+0x2
    14B7:	1FF0      	bne        +0x1F <GattOnConnection+0x27:0x14D6[p]>
    uint8 service_changed_data[4];

    service_changed_data[0] = WORD_LSB((HANDLE_GATT_SERVICE_END+1));
    service_changed_data[1] = WORD_MSB((HANDLE_GATT_SERVICE_END+1));
    service_changed_data[2] = WORD_LSB(ATT_HIGHEST_POSSIBLE_HANDLE);
    service_changed_data[3] = WORD_MSB(ATT_HIGHEST_POSSIBLE_HANDLE);
    14B8:	0100      	**prefx    0x1
    14B9:	FF14      	ld         al, #+0xFF
    14BA:	0527      	st         al, @(+0x5, y)
{
    uint8 service_changed_data[4];

    service_changed_data[0] = WORD_LSB((HANDLE_GATT_SERVICE_END+1));
    service_changed_data[1] = WORD_MSB((HANDLE_GATT_SERVICE_END+1));
    service_changed_data[2] = WORD_LSB(ATT_HIGHEST_POSSIBLE_HANDLE);
    14BB:	0427      	st         al, @(+0x4, y)
extern void GattOnConnection(uint16 st_ucid)
{
    uint8 service_changed_data[4];

    service_changed_data[0] = WORD_LSB((HANDLE_GATT_SERVICE_END+1));
    service_changed_data[1] = WORD_MSB((HANDLE_GATT_SERVICE_END+1));
    14BC:	0014      	ld         al, #+0x0
    14BD:	0327      	st         al, @(+0x3, y)

extern void GattOnConnection(uint16 st_ucid)
{
    uint8 service_changed_data[4];

    service_changed_data[0] = WORD_LSB((HANDLE_GATT_SERVICE_END+1));
    14BE:	0514      	ld         al, #+0x5
    14BF:	0227      	st         al, @(+0x2, y)


    if((g_gatt_data.serv_changed) &&
       (g_gatt_data.serv_changed_config == gatt_client_config_indication))
    {
        GattCharValueIndication(st_ucid,
    14C0:	0414      	ld         al, #+0x4
    14C1:	0027      	st         al, @(0x0, y)
    14C2:	E415      	ld         al, @0xFFE4 <register uy>
    14C3:	0234      	add        al, #+0x2
    14C4:	0127      	st         al, @(+0x1, y)
    14C5:	E015      	ld         al, @0xFFE0 <register ah>
    14C6:	0310      	ld         ah, #+0x3
    14C7:	0100      	**prefx    0x1
    14C8:	9D00      	**prefx    0x9D
    14C9:	9D9C      	bsr        +0x9C9D <GattCharValueIndication:0xB166[p]>
                                HANDLE_SERVICE_CHANGED,
                                sizeof(service_changed_data),
                                service_changed_data);

        /* Now that the indication has been sent, clear the flag in the NVM */
        g_gatt_data.serv_changed = FALSE;
    14CA:	0014      	ld         al, #+0x0
    14CB:	4B00      	**prefx    0x4B
    14CC:	4225      	st         al, @0x4B42 <g_gatt_data>

        Nvm_Write((uint16*)&(g_gatt_data.serv_changed),
    14CD:	4B00      	**prefx    0x4B
    14CE:	4415      	ld         al, @0x4B44 <g_gatt_data+0x2>
    14CF:	0134      	add        al, #+0x1
    14D0:	0027      	st         al, @(0x0, y)
    14D1:	4B00      	**prefx    0x4B
    14D2:	4214      	ld         al, #+0x4B42
    14D3:	0110      	ld         ah, #+0x1
    14D4:	F100      	**prefx    0xF1
    14D5:	9A9C      	bsr        -0xF66 <Nvm_Write:0x56F[p]>
                 sizeof(g_gatt_data.serv_changed),
                 (g_gatt_data.nvm_offset + SERV_CHANGED_SEND_IND));
    }
}
    14D6:	070F      	leave      #+0x7

0x000014D7 <GattReadDataFromNVM>:
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/

extern void GattReadDataFromNVM(uint16 *p_offset)
{
    14D7:	030B      	enter      #+0x3
    14D8:	0127      	st         al, @(+0x1, y)
    g_gatt_data.nvm_offset = *p_offset;
    14D9:	E119      	ld         x, @0xFFE1 <register al>
    14DA:	001A      	ld         x, @(0x0, x)
    14DB:	4B00      	**prefx    0x4B
    14DC:	4429      	st         x, @0x4B44 <g_gatt_data+0x2>

    /* Read NVM only if devices are bonded */
    if(IsDeviceBonded())
    14DD:	F200      	**prefx    0xF2
    14DE:	DE9C      	bsr        -0xE22 <IsDeviceBonded:0x6BC[p]>
    14DF:	4B00      	**prefx    0x4B
    14E0:	4411      	ld         ah, @0x4B44 <g_gatt_data+0x2>
    14E1:	E199      	tst        @0xFFE1 <register al>
    14E2:	11F4      	beq        +0x11 <GattReadDataFromNVM+0x1C:0x14F3[p]>
    {
        /* Read Service Changed client configuration */
        Nvm_Read((uint16*)&(g_gatt_data.serv_changed_config),
    14E3:	0023      	st         ah, @(0x0, y)
    14E4:	4B00      	**prefx    0x4B
    14E5:	4314      	ld         al, #+0x4B43
    14E6:	0110      	ld         ah, #+0x1
    14E7:	F100      	**prefx    0xF1
    14E8:	959C      	bsr        -0xF6B <Nvm_Read:0x57D[p]>
                sizeof(g_gatt_data.serv_changed_config),
                (g_gatt_data.nvm_offset + SERV_CHANGED_CLIENT_CONFIG_OFFSET));

        /* Read Service Has Changed flag */
        Nvm_Read((uint16*)&(g_gatt_data.serv_changed),
    14E9:	4B00      	**prefx    0x4B
    14EA:	4415      	ld         al, @0x4B44 <g_gatt_data+0x2>
    14EB:	0134      	add        al, #+0x1
    14EC:	0027      	st         al, @(0x0, y)
    14ED:	4B00      	**prefx    0x4B
    14EE:	4214      	ld         al, #+0x4B42
    14EF:	0110      	ld         ah, #+0x1
    14F0:	F100      	**prefx    0xF1
    14F1:	8C9C      	bsr        -0xF74 <Nvm_Read:0x57D[p]>
    14F2:	15E0      	bra        +0x15 <GattReadDataFromNVM+0x30:0x1507[p]>
                sizeof(g_gatt_data.serv_changed),
                (g_gatt_data.nvm_offset + SERV_CHANGED_SEND_IND));
    }
    else
    {
        g_gatt_data.serv_changed_config = gatt_client_config_none;
    14F3:	0014      	ld         al, #+0x0
    14F4:	4B00      	**prefx    0x4B
    14F5:	4325      	st         al, @0x4B43 <g_gatt_data+0x1>
        g_gatt_data.serv_changed = FALSE;
    14F6:	4B00      	**prefx    0x4B
    14F7:	4225      	st         al, @0x4B42 <g_gatt_data>

        /* Reset the information in the NVM */

        Nvm_Write((uint16*)&(g_gatt_data.serv_changed_config),
    14F8:	0023      	st         ah, @(0x0, y)
    14F9:	4B00      	**prefx    0x4B
    14FA:	4314      	ld         al, #+0x4B43
    14FB:	0110      	ld         ah, #+0x1
    14FC:	F000      	**prefx    0xF0
    14FD:	729C      	bsr        -0xF8E <Nvm_Write:0x56F[p]>
                 sizeof(g_gatt_data.serv_changed_config),
                 (g_gatt_data.nvm_offset + SERV_CHANGED_CLIENT_CONFIG_OFFSET));

        Nvm_Write((uint16*)&(g_gatt_data.serv_changed),
    14FE:	4B00      	**prefx    0x4B
    14FF:	4415      	ld         al, @0x4B44 <g_gatt_data+0x2>
    1500:	0134      	add        al, #+0x1
    1501:	0027      	st         al, @(0x0, y)
    1502:	4B00      	**prefx    0x4B
    1503:	4214      	ld         al, #+0x4B42
    1504:	0110      	ld         ah, #+0x1
    1505:	F000      	**prefx    0xF0
    1506:	699C      	bsr        -0xF97 <Nvm_Write:0x56F[p]>
    }

    /* Increment the offset by the number of words of NVM memory required
     * by GATT service
     */
    *p_offset += SERV_CHANGED_NVM_MEMORY_WORDS;
    1507:	011B      	ld         x, @(+0x1, y)
    1508:	0016      	ld         al, @(0x0, x)
    1509:	0234      	add        al, #+0x2
    150A:	0026      	st         al, @(0x0, x)
}
    150B:	030F      	leave      #+0x3

0x0000150C <write_buffer>:
	length = (length>>1)+(length&1);
	for(i=0;i<length;i++) buffer[i]=0;
}

static bool write_buffer(pio_ctrlr_code_buffer*p, uint16 *buffer, uint16 length)
{
    150C:	010B      	enter      #+0x1
    150D:	FF27      	st         al, @(-0x1, y)
    150E:	FE23      	st         ah, @(-0x2, y)
    150F:	0014      	ld         al, #+0x0
    1510:	43E0      	bra        +0x43 <write_buffer+0x47:0x1553[p]>
	uint16 data;
	uint16 i;
	for(i=0; i<length; i++)
	{
		if(p->index>=p->length) return 0;
    1511:	FF1B      	ld         x, @(-0x1, y)
    1512:	011A      	ld         x, @(+0x1, x)
    1513:	F929      	st         x, @0xFFF9 <(scratchpad)>
    1514:	E315      	ld         al, @0xFFE3 <register uxl>
    1515:	FF1B      	ld         x, @(-0x1, y)
    1516:	0286      	cmp        al, @(+0x2, x)
    1517:	03FC      	bcs        +0x3 <write_buffer+0xE:0x151A[p]>
    1518:	0014      	ld         al, #+0x0
    1519:	3EE0      	bra        +0x3E <write_buffer+0x4B:0x1557[p]>
		if(i&1) data = (buffer[i>>1]&0xff00)>>8;
    151A:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    151B:	01C4      	and        al, #0x1
    151C:	0BF4      	beq        +0xB <write_buffer+0x1B:0x1527[p]>
    151D:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    151E:	0009      	**unsigned
    151F:	01A4      	lsr        #0x1
    1520:	E019      	ld         x, @0xFFE0 <register ah>
    1521:	FE3B      	add        x, @(-0x2, y)
    1522:	0012      	ld         ah, @(0x0, x)
    1523:	0009      	**unsigned
    1524:	08A4      	lsr        #0x8
    1525:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    1526:	0AE0      	bra        +0xA <write_buffer+0x24:0x1530[p]>
		else data = buffer[i>>1]&0xff;
    1527:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    1528:	0009      	**unsigned
    1529:	01A4      	lsr        #0x1
    152A:	E019      	ld         x, @0xFFE0 <register ah>
    152B:	FE3B      	add        x, @(-0x2, y)
    152C:	001A      	ld         x, @(0x0, x)
    152D:	0100      	**prefx    0x1
    152E:	FFC8      	and        x, #0xFF
    152F:	F829      	st         x, @0xFFF8 <(scratchpad)>
		if(p->index&1) 
    1530:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    1531:	01C4      	and        al, #0x1
    1532:	FF1B      	ld         x, @(-0x1, y)
    1533:	001A      	ld         x, @(0x0, x)
    1534:	FB29      	st         x, @0xFFFB <(scratchpad)>
    1535:	E199      	tst        @0xFFE1 <register al>
    1536:	0DF4      	beq        +0xD <write_buffer+0x37:0x1543[p]>
        {
            uint16 temp=p->buffer[p->index>>1];
    1537:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
    1538:	0009      	**unsigned
    1539:	01A4      	lsr        #0x1
    153A:	E019      	ld         x, @0xFFE0 <register ah>
    153B:	FB39      	add        x, @0xFFFB <(scratchpad)>
            temp=(temp&0x00ff);
            p->buffer[p->index>>1]=temp|(data<<8);
    153C:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    153D:	08A0      	asl        #0x8
    153E:	0012      	ld         ah, @(0x0, x)
    153F:	0100      	**prefx    0x1
    1540:	FFC0      	and        ah, #0xFF
    1541:	E0B5      	or         al, @0xFFE0 <register ah>
    1542:	0AE0      	bra        +0xA <write_buffer+0x40:0x154C[p]>
        }
		else
        {
            uint16 temp=p->buffer[p->index>>1];
    1543:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
    1544:	0009      	**unsigned
    1545:	01A4      	lsr        #0x1
    1546:	E019      	ld         x, @0xFFE0 <register ah>
    1547:	FB39      	add        x, @0xFFFB <(scratchpad)>
            temp=(temp&0xff00);
            p->buffer[p->index>>1]=temp|data;
    1548:	0016      	ld         al, @(0x0, x)
    1549:	FF00      	**prefx    0xFF
    154A:	00C4      	and        al, #0xFF00
    154B:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
    154C:	0026      	st         al, @(0x0, x)
        }
		p->index++;
    154D:	FF1B      	ld         x, @(-0x1, y)
    154E:	0116      	ld         al, @(+0x1, x)
    154F:	0134      	add        al, #+0x1
    1550:	0126      	st         al, @(+0x1, x)

static bool write_buffer(pio_ctrlr_code_buffer*p, uint16 *buffer, uint16 length)
{
	uint16 data;
	uint16 i;
	for(i=0; i<length; i++)
    1551:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    1552:	0134      	add        al, #+0x1
    1553:	FA25      	st         al, @0xFFFA <(scratchpad)>
    1554:	0187      	cmp        al, @(+0x1, y)
    1555:	BCFC      	bcs        -0x44 <write_buffer+0x5:0x1511[p]>
    1556:	0114      	ld         al, #+0x1
            p->buffer[p->index>>1]=temp|data;
        }
		p->index++;
	}
	return 1;
}
    1557:	010F      	leave      #+0x1

0x00001558 <VFPWMStart>:
    
	return 1;
}

bool VFPWMStart(uint8 width0, uint8 width1)
{
    1558:	290B      	enter      #+0x29
    1559:	2627      	st         al, @(+0x26, y)
    155A:	2723      	st         ah, @(+0x27, y)
	uint16 buffer[1+MAX_LENGTH_IN_BYTES/2];
	pio_ctrlr_code_buffer cb;
	uint16 counter, previous_counter=0;
	uint16 pattern = pwm0_pio_mask|pwm1_pio_mask;
    155B:	4B00      	**prefx    0x4B
    155C:	4715      	ld         al, @0x4B47 <pwm0_pio_mask>
    155D:	2027      	st         al, @(+0x20, y)
    155E:	4B00      	**prefx    0x4B
    155F:	4819      	ld         x, @0x4B48 <pwm1_pio_mask>
    1560:	252B      	st         x, @(+0x25, y)
    1561:	E1B9      	or         x, @0xFFE1 <register al>
    1562:	232B      	st         x, @(+0x23, y)
static bool pwm_inverted;

static void init_buffer(pio_ctrlr_code_buffer*p, uint16 *buffer, uint16 length)
{
	uint16 i;
	p->buffer = buffer;
    1563:	E415      	ld         al, @0xFFE4 <register uy>
    1564:	0834      	add        al, #+0x8
    1565:	0127      	st         al, @(+0x1, y)
	p->length = length;
    1566:	3018      	ld         x, #+0x30
    1567:	032B      	st         x, @(+0x3, y)
	p->index = 2; /* the first word is for size (in byte) */
    1568:	0214      	ld         al, #+0x2
    1569:	0227      	st         al, @(+0x2, y)
    156A:	E419      	ld         x, @0xFFE4 <register uy>
    156B:	0838      	add        x, #+0x8
	length = (length>>1)+(length&1);
	for(i=0;i<length;i++) buffer[i]=0;
    156C:	0014      	ld         al, #+0x0
    156D:	0026      	st         al, @(0x0, x)
    156E:	0138      	add        x, #+0x1
    156F:	E415      	ld         al, @0xFFE4 <register uy>
    1570:	2034      	add        al, #+0x20
    1571:	E189      	cmp        x, @0xFFE1 <register al>
    1572:	FAF0      	bne        -0x6 <VFPWMStart+0x14:0x156C[p]>

static bool write_header(pio_ctrlr_code_buffer*p)
{
	uint16 header[4];

    header[0]=(pwm_pio_reg<<8)|0x79; /* mov r1, Px */
    1573:	4B00      	**prefx    0x4B
    1574:	4515      	ld         al, @0x4B45 <pwm_pio_reg>
    1575:	08A0      	asl        #0x8
    1576:	79B4      	or         al, #+0x79
    1577:	0427      	st         al, @(+0x4, y)
	header[1]=0x0178; /* mov r0, 1 */
    1578:	0100      	**prefx    0x1
    1579:	7818      	ld         x, #+0x178
    157A:	052B      	st         x, @(+0x5, y)
	header[2]=0x75|(pwm_pio_drive_reg<<8); /* mov Px_DRIVE_EN, mask */
    157B:	4B00      	**prefx    0x4B
    157C:	4615      	ld         al, @0x4B46 <pwm_pio_drive_reg>
    157D:	08A0      	asl        #0x8
    157E:	75B4      	or         al, #+0x75
    157F:	0627      	st         al, @(+0x6, y)
    header[3]=pwm0_pio_mask|pwm1_pio_mask;
    1580:	2317      	ld         al, @(+0x23, y)
    1581:	0727      	st         al, @(+0x7, y)

    return write_buffer(p, header, 7);
    1582:	0718      	ld         x, #+0x7
    1583:	002B      	st         x, @(0x0, y)
    1584:	E415      	ld         al, @0xFFE4 <register uy>
    1585:	0134      	add        al, #+0x1
    1586:	E411      	ld         ah, @0xFFE4 <register uy>
    1587:	0430      	add        ah, #+0x4
    1588:	849C      	bsr        -0x7C <write_buffer:0x150C[p]>
	uint16 counter, previous_counter=0;
	uint16 pattern = pwm0_pio_mask|pwm1_pio_mask;

	init_buffer(&cb, buffer, 2*(sizeof buffer)/sizeof buffer[0]);

	if(!write_header(&cb)) return 0;
    1589:	E199      	tst        @0xFFE1 <register al>
    158A:	79F4      	beq        +0x79 <VFPWMStart+0xAB:0x1603[p]>

static bool write_output(pio_ctrlr_code_buffer*p, uint16 pattern, uint16 count)
{
	uint16 temp[2];

    if(pwm_inverted) pattern = (~pattern)&0xff;
    158B:	4B00      	**prefx    0x4B
    158C:	4915      	ld         al, @0x4B49 <pwm_inverted>
    158D:	2127      	st         al, @(+0x21, y)
    158E:	0014      	ld         al, #+0x0
    158F:	2427      	st         al, @(+0x24, y)

	if(!write_header(&cb)) return 0;
	
	for(counter=0; counter<255; counter++)
	{
		if(counter==width0 ||
    1590:	241B      	ld         x, @(+0x24, y)
    1591:	268B      	cmp        x, @(+0x26, y)
    1592:	07F4      	beq        +0x7 <VFPWMStart+0x41:0x1599[p]>
    1593:	278B      	cmp        x, @(+0x27, y)
    1594:	05F4      	beq        +0x5 <VFPWMStart+0x41:0x1599[p]>
    1595:	0100      	**prefx    0x1
    1596:	FE88      	cmp        x, #+0xFE
    1597:	3FF0      	bne        +0x3F <VFPWMStart+0x7E:0x15D6[p]>
    1598:	03E0      	bra        +0x3 <VFPWMStart+0x43:0x159B[p]>
		counter==width1 ||
		counter==254)
		{
			if(counter>0) {
    1599:	249B      	tst        @(+0x24, y)
    159A:	2BF4      	beq        +0x2B <VFPWMStart+0x6D:0x15C5[p]>
				uint16 gap=counter-previous_counter;
    159B:	241B      	ld         x, @(+0x24, y)
    159C:	E159      	sub        x, @0xFFE1 <register al>
    159D:	222B      	st         x, @(+0x22, y)

static bool write_output(pio_ctrlr_code_buffer*p, uint16 pattern, uint16 count)
{
	uint16 temp[2];

    if(pwm_inverted) pattern = (~pattern)&0xff;
    159E:	219B      	tst        @(+0x21, y)
    159F:	06F4      	beq        +0x6 <VFPWMStart+0x4D:0x15A5[p]>
    15A0:	2317      	ld         al, @(+0x23, y)
    15A1:	FFD4      	xor        al, #0xFFFF
    15A2:	0100      	**prefx    0x1
    15A3:	FFC4      	and        al, #0xFF
    15A4:	2327      	st         al, @(+0x23, y)

    temp[0]=(pattern<<8)|0x77; /* mov @r1, pattern */
    15A5:	2317      	ld         al, @(+0x23, y)
    15A6:	08A0      	asl        #0x8
    15A7:	77B4      	or         al, #+0x77
    15A8:	0427      	st         al, @(+0x4, y)
	temp[1]=(count<<8)|0x74; /* mov a, count */
    15A9:	2217      	ld         al, @(+0x22, y)
    15AA:	FF34      	add        al, #-0x1
    15AB:	08A0      	asl        #0x8
    15AC:	74B4      	or         al, #+0x74
    15AD:	0527      	st         al, @(+0x5, y)

    return write_buffer(p, temp, 4);
    15AE:	0418      	ld         x, #+0x4
    15AF:	002B      	st         x, @(0x0, y)
    15B0:	E415      	ld         al, @0xFFE4 <register uy>
    15B1:	0134      	add        al, #+0x1
    15B2:	E411      	ld         ah, @0xFFE4 <register uy>
    15B3:	0430      	add        ah, #+0x4
    15B4:	FF00      	**prefx    0xFF
    15B5:	579C      	bsr        -0xA9 <write_buffer:0x150C[p]>
		counter==width1 ||
		counter==254)
		{
			if(counter>0) {
				uint16 gap=counter-previous_counter;
				if(!write_output(&cb, pattern, gap-1))return 0;
    15B6:	E199      	tst        @0xFFE1 <register al>
    15B7:	4CF4      	beq        +0x4C <VFPWMStart+0xAB:0x1603[p]>
				if(gap>1)
    15B8:	2217      	ld         al, @(+0x22, y)
    15B9:	0184      	cmp        al, #+0x1
    15BA:	0B2C      	bcz        +0xB <VFPWMStart+0x6D:0x15C5[p]>
	static uint16 loop[2]={
		0x7098, /* subb a, r0 */
		0x00fd  /* jnz 0xfd */
	};

    return write_buffer(p, loop, 3);
    15BB:	0318      	ld         x, #+0x3
    15BC:	002B      	st         x, @(0x0, y)
    15BD:	E415      	ld         al, @0xFFE4 <register uy>
    15BE:	0134      	add        al, #+0x1
    15BF:	8D00      	**prefx    0x8D
    15C0:	9B10      	ld         ah, #-0x7365
    15C1:	FF00      	**prefx    0xFF
    15C2:	4A9C      	bsr        -0xB6 <write_buffer:0x150C[p]>
		{
			if(counter>0) {
				uint16 gap=counter-previous_counter;
				if(!write_output(&cb, pattern, gap-1))return 0;
				if(gap>1)
				if(!write_loop(&cb))return 0;
    15C3:	E199      	tst        @0xFFE1 <register al>
    15C4:	3FF4      	beq        +0x3F <VFPWMStart+0xAB:0x1603[p]>
			}

			pattern = 0;
			if(width0 > counter) pattern |= pwm0_pio_mask;
    15C5:	2617      	ld         al, @(+0x26, y)
    15C6:	2487      	cmp        al, @(+0x24, y)
    15C7:	022C      	bcz        +0x2 <VFPWMStart+0x71:0x15C9[p]>
    15C8:	04E0      	bra        +0x4 <VFPWMStart+0x74:0x15CC[p]>
    15C9:	0018      	ld         x, #+0x0
    15CA:	232B      	st         x, @(+0x23, y)
    15CB:	03E0      	bra        +0x3 <VFPWMStart+0x76:0x15CE[p]>
    15CC:	2017      	ld         al, @(+0x20, y)
    15CD:	2327      	st         al, @(+0x23, y)
			if(width1 > counter) pattern |= pwm1_pio_mask;
    15CE:	271B      	ld         x, @(+0x27, y)
    15CF:	248B      	cmp        x, @(+0x24, y)
    15D0:	042C      	bcz        +0x4 <VFPWMStart+0x7C:0x15D4[p]>
    15D1:	2317      	ld         al, @(+0x23, y)
    15D2:	25B7      	or         al, @(+0x25, y)
    15D3:	2327      	st         al, @(+0x23, y)
    15D4:	2417      	ld         al, @(+0x24, y)
    15D5:	04E0      	bra        +0x4 <VFPWMStart+0x81:0x15D9[p]>
			
			previous_counter = counter;
		} else if(counter==0)
    15D6:	249B      	tst        @(+0x24, y)
    15D7:	02F0      	bne        +0x2 <VFPWMStart+0x81:0x15D9[p]>
    15D8:	0014      	ld         al, #+0x0

	init_buffer(&cb, buffer, 2*(sizeof buffer)/sizeof buffer[0]);

	if(!write_header(&cb)) return 0;
	
	for(counter=0; counter<255; counter++)
    15D9:	241B      	ld         x, @(+0x24, y)
    15DA:	0138      	add        x, #+0x1
    15DB:	242B      	st         x, @(+0x24, y)
    15DC:	0100      	**prefx    0x1
    15DD:	FF88      	cmp        x, #+0xFF
    15DE:	B2F0      	bne        -0x4E <VFPWMStart+0x38:0x1590[p]>

static bool write_end(pio_ctrlr_code_buffer*p, uint16 pattern)
{
	uint16 temp[2];

    if(pwm_inverted) pattern = (~pattern)&0xff;
    15DF:	219B      	tst        @(+0x21, y)
    15E0:	06F4      	beq        +0x6 <VFPWMStart+0x8E:0x15E6[p]>
    15E1:	2317      	ld         al, @(+0x23, y)
    15E2:	FFD4      	xor        al, #0xFFFF
    15E3:	0100      	**prefx    0x1
    15E4:	FFC4      	and        al, #0xFF
    15E5:	2327      	st         al, @(+0x23, y)

    temp[0]=(pattern<<8)|0x77;  /* mov @r1, pattern */
    15E6:	2317      	ld         al, @(+0x23, y)
    15E7:	08A0      	asl        #0x8
    15E8:	77B4      	or         al, #+0x77
    15E9:	0427      	st         al, @(+0x4, y)
	temp[1]=0x0701; /* ajmp 0x07 */
    15EA:	0700      	**prefx    0x7
    15EB:	0118      	ld         x, #+0x701
    15EC:	052B      	st         x, @(+0x5, y)

    if(write_buffer(p, temp, 4))
    15ED:	0414      	ld         al, #+0x4
    15EE:	0027      	st         al, @(0x0, y)
    15EF:	E415      	ld         al, @0xFFE4 <register uy>
    15F0:	0134      	add        al, #+0x1
    15F1:	E411      	ld         ah, @0xFFE4 <register uy>
    15F2:	0430      	add        ah, #+0x4
    15F3:	FF00      	**prefx    0xFF
    15F4:	189C      	bsr        -0xE8 <write_buffer:0x150C[p]>
    15F5:	E199      	tst        @0xFFE1 <register al>
    15F6:	0DF4      	beq        +0xD <VFPWMStart+0xAB:0x1603[p]>
	{
		p->buffer[0]=p->index-2; /* number of code bytes */
    15F7:	011B      	ld         x, @(+0x1, y)
    15F8:	0217      	ld         al, @(+0x2, y)
    15F9:	FE34      	add        al, #-0x2
    15FA:	0026      	st         al, @(0x0, x)
        if(p->buffer[0]&1) /* PioCtrlrInit requires an even number here */
    15FB:	011B      	ld         x, @(+0x1, y)
    15FC:	0012      	ld         ah, @(0x0, x)
    15FD:	E015      	ld         al, @0xFFE0 <register ah>
    15FE:	01C4      	and        al, #0x1
    15FF:	06F4      	beq        +0x6 <VFPWMStart+0xAD:0x1605[p]>
            p->buffer[0]++;
    1600:	0130      	add        ah, #+0x1
    1601:	0022      	st         ah, @(0x0, x)
    1602:	03E0      	bra        +0x3 <VFPWMStart+0xAD:0x1605[p]>
    1603:	0014      	ld         al, #+0x0
    PioCtrlrStop();
	PioCtrlrInit(cb.buffer-0x2000); /* This function expects code from CODE space */
    PioCtrlrStart();

    return 1;
}
    1604:	290F      	leave      #+0x29
		}
	}

	if(!write_end(&cb, pattern)) return 0;

    PioCtrlrStop();
    1605:	0C00      	**prefx    0xC
    1606:	AC9C      	bsr        +0xBAC <PioCtrlrStop:0x21B2[p]>
	PioCtrlrInit(cb.buffer-0x2000); /* This function expects code from CODE space */
    1607:	0117      	ld         al, @(+0x1, y)
    1608:	E000      	**prefx    0xE0
    1609:	0034      	add        al, #-0x2000
    160A:	0C00      	**prefx    0xC
    160B:	FA9C      	bsr        +0xBFA <PioCtrlrInit:0x2205[p]>
    PioCtrlrStart();
    160C:	0C00      	**prefx    0xC
    160D:	A19C      	bsr        +0xBA1 <PioCtrlrStart:0x21AE[p]>
    160E:	0114      	ld         al, #+0x1
    160F:	F5E0      	bra        -0xB <VFPWMStart+0xAC:0x1604[p]>

0x00001610 <VFPWMConfig>:
	else
		return 0;
}

bool VFPWMConfig(uint8 pio_bank, uint8 pio_bit0, uint8 pio_bit1,bool invert)
{
    1610:	010B      	enter      #+0x1
    1611:	E019      	ld         x, @0xFFE0 <register ah>
	switch(pio_bank)
    1612:	0184      	cmp        al, #+0x1
    1613:	0FF4      	beq        +0xF <UART_RATE_1382K4+0x3:0x1622[p]>
    1614:	0184      	cmp        al, #+0x1
    1615:	07FC      	bcs        +0x7 <VFPWMConfig+0xC:0x161C[p]>
    1616:	0284      	cmp        al, #+0x2
    1617:	0EF4      	beq        +0xE <UART_RATE_1382K4+0x6:0x1625[p]>
    1618:	0384      	cmp        al, #+0x3
    1619:	0FF4      	beq        +0xF <UART_RATE_1382K4+0x9:0x1628[p]>
    161A:	0014      	ld         al, #+0x0
    161B:	29E0      	bra        +0x29 <UART_RATE_1382K4+0x25:0x1644[p]>
	{
	case 0:
		pwm_pio_reg=0x80;
    161C:	0100      	**prefx    0x1
    161D:	8014      	ld         al, #+0x80
    161E:	4B00      	**prefx    0x4B
    161F:	4525      	st         al, @0x4B45 <pwm_pio_reg>
		pwm_pio_drive_reg=0xc0;
    1620:	4034      	add        al, #+0x40
    1621:	0CE0      	bra        +0xC <UART_RATE_1382K4+0xE:0x162D[p]>
		break;
	case 1:
		pwm_pio_reg=0x90;
    1622:	0100      	**prefx    0x1
    1623:	9014      	ld         al, #+0x90
    1624:	06E0      	bra        +0x6 <UART_RATE_1382K4+0xB:0x162A[p]>
		pwm_pio_drive_reg=0xc8;
		break;
	case 2:
		pwm_pio_reg=0xa0;
    1625:	0100      	**prefx    0x1
    1626:	A014      	ld         al, #+0xA0
    1627:	03E0      	bra        +0x3 <UART_RATE_1382K4+0xB:0x162A[p]>
		pwm_pio_drive_reg=0xd8;
		break;	
	case 3:
		pwm_pio_reg=0xb0;
    1628:	0100      	**prefx    0x1
    1629:	B014      	ld         al, #+0xB0
    162A:	4B00      	**prefx    0x4B
    162B:	4525      	st         al, @0x4B45 <pwm_pio_reg>
		pwm_pio_drive_reg=0xe8;
    162C:	3834      	add        al, #+0x38
    162D:	4B00      	**prefx    0x4B
    162E:	4625      	st         al, @0x4B46 <pwm_pio_drive_reg>
		break;
	default:
		return 0;
	}

	pwm0_pio_mask=1L<<pio_bit0;
    162F:	0010      	ld         ah, #+0x0
    1630:	0114      	ld         al, #+0x1
    1631:	E3A1      	asl        @0xFFE3 <register uxl>
    1632:	4B00      	**prefx    0x4B
    1633:	4725      	st         al, @0x4B47 <pwm0_pio_mask>
	pwm1_pio_mask=1L<<pio_bit1;
    1634:	0010      	ld         ah, #+0x0
    1635:	0114      	ld         al, #+0x1
    1636:	01A3      	asl        @(+0x1, y)
    1637:	4B00      	**prefx    0x4B
    1638:	4825      	st         al, @0x4B48 <pwm1_pio_mask>

    
    pwm_inverted = invert;
    1639:	0217      	ld         al, @(+0x2, y)
    163A:	4B00      	**prefx    0x4B
    163B:	4925      	st         al, @0x4B49 <pwm_inverted>

    SleepModeChange(sleep_mode_shallow);
    163C:	0214      	ld         al, #+0x2
    163D:	0100      	**prefx    0x1
    163E:	CB00      	**prefx    0xCB
    163F:	DC9C      	bsr        +0xCADC <SleepModeChange:0xE11B[p]>
	PioCtrlrClock(TRUE);
    1640:	0114      	ld         al, #+0x1
    1641:	0B00      	**prefx    0xB
    1642:	749C      	bsr        +0xB74 <PioCtrlrClock:0x21B6[p]>
    1643:	0114      	ld         al, #+0x1
    
	return 1;
}
    1644:	010F      	leave      #+0x1

0x00001645 <I2CAcquire>:
 *
 *----------------------------------------------------------------------------*/
extern bool I2CAcquire(void)
{
    /* If I2C bus is in Released state, acquire it and return success */
    if(bus_I2C_status == i2c_bus_released)
    1645:	4B00      	**prefx    0x4B
    1646:	4A99      	tst        @0x4B4A <bus_I2C_status>
    1647:	03F4      	beq        +0x3 <I2CAcquire+0x5:0x164A[p]>
    1648:	0014      	ld         al, #+0x0
    1649:	00E2      	bra        0x0, x
    {
        bus_I2C_status = i2c_bus_acquired;
    164A:	0114      	ld         al, #+0x1
    164B:	4B00      	**prefx    0x4B
    164C:	4A25      	st         al, @0x4B4A <bus_I2C_status>
    }
    else /* Else return Failure */
    {
        return FALSE;
    }
}
    164D:	00E2      	bra        0x0, x

0x0000164E <I2C_IO_Write>:
    return success;
}


extern void I2C_IO_Write(uint8 data)
{
    164E:	030B      	enter      #+0x3
    164F:	0127      	st         al, @(+0x1, y)
    
    I2cRawCommand(i2c_cmd_send_start,TRUE,0);
    1650:	0014      	ld         al, #+0x0
    1651:	0027      	st         al, @(0x0, y)
    1652:	0110      	ld         ah, #+0x1
    1653:	0100      	**prefx    0x1
    1654:	D600      	**prefx    0xD6
    1655:	DB9C      	bsr        +0xD5DB <I2cRawCommand:0xEC30[p]>
    I2cRawWriteByte(0x42);
    1656:	4214      	ld         al, #+0x42
    1657:	0100      	**prefx    0x1
    1658:	D600      	**prefx    0xD6
    1659:	039C      	bsr        +0xD603 <I2cRawWriteByte:0xEC5C[p]>
    I2cRawCommand(i2c_cmd_wait_ack,TRUE,1* MILLISECOND); 
    165A:	0400      	**prefx    0x4
    165B:	E814      	ld         al, #+0x3E8
    165C:	0027      	st         al, @(0x0, y)
    165D:	0314      	ld         al, #+0x3
    165E:	0110      	ld         ah, #+0x1
    165F:	0100      	**prefx    0x1
    1660:	D600      	**prefx    0xD6
    1661:	CF9C      	bsr        +0xD5CF <I2cRawCommand:0xEC30[p]>
    I2cRawWriteByte(data);
    1662:	0117      	ld         al, @(+0x1, y)
    1663:	0100      	**prefx    0x1
    1664:	D600      	**prefx    0xD6
    1665:	F79C      	bsr        +0xD5F7 <I2cRawWriteByte:0xEC5C[p]>
    I2cRawCommand(i2c_cmd_wait_ack,TRUE,1* MILLISECOND);
    1666:	0400      	**prefx    0x4
    1667:	E814      	ld         al, #+0x3E8
    1668:	0027      	st         al, @(0x0, y)
    1669:	0314      	ld         al, #+0x3
    166A:	0110      	ld         ah, #+0x1
    166B:	0100      	**prefx    0x1
    166C:	D600      	**prefx    0xD6
    166D:	C39C      	bsr        +0xD5C3 <I2cRawCommand:0xEC30[p]>
    I2cRawStop(TRUE); 
    166E:	0400      	**prefx    0x4
    166F:	E814      	ld         al, #+0x3E8
    1670:	0027      	st         al, @(0x0, y)
    1671:	0214      	ld         al, #+0x2
    1672:	0110      	ld         ah, #+0x1
    1673:	0100      	**prefx    0x1
    1674:	D600      	**prefx    0xD6
    1675:	BB9C      	bsr        +0xD5BB <I2cRawCommand:0xEC30[p]>
    I2cRawComplete(2 * MILLISECOND);
    1676:	0800      	**prefx    0x8
    1677:	D014      	ld         al, #+0x7D0
    1678:	0100      	**prefx    0x1
    1679:	D600      	**prefx    0xD6
    167A:	909C      	bsr        +0xD590 <I2cRawComplete:0xEC0A[p]>
    I2cRawTerminate();
    167B:	0100      	**prefx    0x1
    167C:	D600      	**prefx    0xD6
    167D:	839C      	bsr        +0xD583 <I2cRawTerminate:0xEC00[p]>
    
    
}
    167E:	030F      	leave      #+0x3

0x0000167F <I2CcommsInit>:
 *  RETURNS
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void I2CcommsInit(void)
{
    167F:	030B      	enter      #+0x3
    /* Initialise I2C if it is not already initialised */
    if(!i2c_initialised)
    1680:	4B00      	**prefx    0x4B
    1681:	4B99      	tst        @0x4B4B <i2c_initialised>
    1682:	34F0      	bne        +0x34 <I2CcommsInit+0x37:0x16B6[p]>
    {
        i2c_initialised = TRUE;
    1683:	0114      	ld         al, #+0x1
    1684:	4B00      	**prefx    0x4B
    1685:	4B25      	st         al, @0x4B4B <i2c_initialised>
        PioSetModes(    ((0x01L << I2C_SDA_PIO) | (0x01L << I2C_SCL_PIO)), 
    1686:	0014      	ld         al, #+0x0
    1687:	0027      	st         al, @(0x0, y)
    1688:	0010      	ld         ah, #+0x0
    1689:	0314      	ld         al, #+0x3
    168A:	0100      	**prefx    0x1
    168B:	E000      	**prefx    0xE0
    168C:	DB9C      	bsr        +0xDFDB <PioSetModes:0xF667[p]>
                                                pio_mode_user);

        /* Configure the PIOs as Input */
        PioSetDirs(     ((0x01L << I2C_SDA_PIO) | (0x01L << I2C_SCL_PIO)), 
    168D:	0014      	ld         al, #+0x0
    168E:	0027      	st         al, @(0x0, y)
    168F:	0127      	st         al, @(+0x1, y)
    1690:	0010      	ld         ah, #+0x0
    1691:	0314      	ld         al, #+0x3
    1692:	0100      	**prefx    0x1
    1693:	E100      	**prefx    0xE1
    1694:	C69C      	bsr        +0xE0C6 <PioSetDirs:0xF75A[p]>
                                                FALSE);
        PioSetPullModes(((0x01L << I2C_SDA_PIO) | (0x01L << I2C_SCL_PIO)), 
    1695:	0514      	ld         al, #+0x5
    1696:	0027      	st         al, @(0x0, y)
    1697:	0010      	ld         ah, #+0x0
    1698:	0314      	ld         al, #+0x3
    1699:	0100      	**prefx    0x1
    169A:	DF00      	**prefx    0xDF
    169B:	719C      	bsr        +0xDF71 <PioSetPullModes:0xF60C[p]>
                                                pio_mode_strong_pull_down); 
        PioSetEventMask(((0x01L << I2C_SDA_PIO) | (0x01L << I2C_SCL_PIO)), 
    169C:	0014      	ld         al, #+0x0
    169D:	0027      	st         al, @(0x0, y)
    169E:	0010      	ld         ah, #+0x0
    169F:	0314      	ld         al, #+0x3
    16A0:	0100      	**prefx    0x1
    16A1:	E000      	**prefx    0xE0
    16A2:	779C      	bsr        +0xE077 <PioSetEventMask:0xF719[p]>
                                                pio_event_mode_disable);

        /* Configure the I2C controller */
        I2cInit(I2C_SDA_PIO,
    16A3:	0100      	**prefx    0x1
    16A4:	FF14      	ld         al, #+0xFF
    16A5:	0027      	st         al, @(0x0, y)
    16A6:	0714      	ld         al, #+0x7
    16A7:	0127      	st         al, @(+0x1, y)
    16A8:	0014      	ld         al, #+0x0
    16A9:	0110      	ld         ah, #+0x1
    16AA:	0100      	**prefx    0x1
    16AB:	D300      	**prefx    0xD3
    16AC:	769C      	bsr        +0xD376 <I2cInit:0xEA22[p]>

        /* Configure pull mode of the I2C pins */
       /* PioSetI2CPullMode(pio_i2c_pull_mode_strong_pull_up);*/

        /* Configure the I2C clock */
        I2cConfigClock(I2C_SCL_400KBPS_HIGH_PERIOD, I2C_SCL_400KBPS_LOW_PERIOD);
    16AD:	0F14      	ld         al, #+0xF
    16AE:	1510      	ld         ah, #+0x15
    16AF:	0100      	**prefx    0x1
    16B0:	D300      	**prefx    0xD3
    16B1:	6A9C      	bsr        +0xD36A <I2cConfigClock:0xEA1B[p]>

        /* Enable the I2C controller */
        I2cEnable(TRUE);
    16B2:	0114      	ld         al, #+0x1
    16B3:	0100      	**prefx    0x1
    16B4:	D300      	**prefx    0xD3
    16B5:	459C      	bsr        +0xD345 <I2cEnable:0xE9FA[p]>
    }
}
    16B6:	030F      	leave      #+0x3

0x000016B7 <I2CRelease>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void I2CRelease(void)
{
    bus_I2C_status = i2c_bus_released;
    16B7:	0014      	ld         al, #+0x0
    16B8:	4B00      	**prefx    0x4B
    16B9:	4A25      	st         al, @0x4B4A <bus_I2C_status>
    I2cReset();
    16BA:	0C00      	**prefx    0xC
    16BB:	88E0      	bra        +0xB88 <I2cReset:0x2243[p]>

0x000016BC <OtaReset>:
    16BC:	0100      	**prefx    0x1
    16BD:	CE00      	**prefx    0xCE
    16BE:	E2E0      	bra        +0xCDE2 <WarmReset:0xE4A0[p]>

0x000016BF <readProtectedValue>:
    16BF:	060B      	enter      #+0x6
    16C0:	F825      	st         al, @0xFFF8 <(scratchpad)>
    16C1:	0423      	st         ah, @(+0x4, y)
    16C2:	0010      	ld         ah, #+0x0
    16C3:	041B      	ld         x, @(+0x4, y)
    16C4:	0022      	st         ah, @(0x0, x)
    16C5:	0114      	ld         al, #+0x1
    16C6:	0027      	st         al, @(0x0, y)
    16C7:	0218      	ld         x, #+0x2
    16C8:	012B      	st         x, @(+0x1, y)
    16C9:	E411      	ld         ah, @0xFFE4 <register uy>
    16CA:	0330      	add        ah, #+0x3
    16CB:	0223      	st         ah, @(+0x2, y)
    16CC:	5014      	ld         al, #+0x50
    16CD:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    16CE:	0100      	**prefx    0x1
    16CF:	D400      	**prefx    0xD4
    16D0:	069C      	bsr        +0xD406 <I2cEepromRead:0xEAD6[p]>
    16D1:	F925      	st         al, @0xFFF9 <(scratchpad)>
    16D2:	0FF0      	bne        +0xF <readProtectedValue+0x22:0x16E1[p]>
    16D3:	0317      	ld         al, @(+0x3, y)
    16D4:	FA25      	st         al, @0xFFFA <(scratchpad)>
    16D5:	E119      	ld         x, @0xFFE1 <register al>
    16D6:	FF00      	**prefx    0xFF
    16D7:	00C8      	and        x, #0xFF00
    16D8:	FFD4      	xor        al, #0xFFFF
    16D9:	08A0      	asl        #0x8
    16DA:	E189      	cmp        x, @0xFFE1 <register al>
    16DB:	06F0      	bne        +0x6 <readProtectedValue+0x22:0x16E1[p]>
    16DC:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    16DD:	0100      	**prefx    0x1
    16DE:	FFC0      	and        ah, #0xFF
    16DF:	041B      	ld         x, @(+0x4, y)
    16E0:	0022      	st         ah, @(0x0, x)
    16E1:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    16E2:	060F      	leave      #+0x6

0x000016E3 <readOtaVersion>:
    16E3:	E111      	ld         ah, @0xFFE1 <register al>
    16E4:	4B00      	**prefx    0x4B
    16E5:	4C15      	ld         al, @0x4B4C <shared_data_location>
    16E6:	0100      	**prefx    0x1
    16E7:	8034      	add        al, #+0x80
    16E8:	D7E0      	bra        -0x29 <readProtectedValue:0x16BF[p]>

0x000016E9 <readCurrentApp>:
    16E9:	E111      	ld         ah, @0xFFE1 <register al>
    16EA:	4B00      	**prefx    0x4B
    16EB:	4C15      	ld         al, @0x4B4C <shared_data_location>
    16EC:	D3E0      	bra        -0x2D <readProtectedValue:0x16BF[p]>

0x000016ED <readSharedDataV5>:
    16ED:	040B      	enter      #+0x4
    16EE:	0118      	ld         x, #+0x1
    16EF:	002B      	st         x, @(0x0, y)
    16F0:	4E18      	ld         x, #+0x4E
    16F1:	012B      	st         x, @(+0x1, y)
    16F2:	0227      	st         al, @(+0x2, y)
    16F3:	5014      	ld         al, #+0x50
    16F4:	4B00      	**prefx    0x4B
    16F5:	4C11      	ld         ah, @0x4B4C <shared_data_location>
    16F6:	0100      	**prefx    0x1
    16F7:	D400      	**prefx    0xD4
    16F8:	DE9C      	bsr        +0xD3DE <I2cEepromRead:0xEAD6[p]>
    16F9:	040F      	leave      #+0x4

0x000016FA <findSharedData>:
    16FA:	290B      	enter      #+0x29
    16FB:	0110      	ld         ah, #+0x1
    16FC:	0023      	st         ah, @(0x0, y)
    16FD:	0614      	ld         al, #+0x6
    16FE:	0127      	st         al, @(+0x1, y)
    16FF:	E419      	ld         x, @0xFFE4 <register uy>
    1700:	0338      	add        x, #+0x3
    1701:	022B      	st         x, @(+0x2, y)
    1702:	5014      	ld         al, #+0x50
    1703:	0010      	ld         ah, #+0x0
    1704:	0100      	**prefx    0x1
    1705:	D400      	**prefx    0xD4
    1706:	D09C      	bsr        +0xD3D0 <I2cEepromRead:0xEAD6[p]>
    1707:	2627      	st         al, @(+0x26, y)
    1708:	47F0      	bne        +0x47 <findSharedData+0x55:0x174F[p]>
    1709:	0110      	ld         ah, #+0x1
    170A:	0023      	st         ah, @(0x0, y)
    170B:	0413      	ld         ah, @(+0x4, y)
    170C:	0009      	**unsigned
    170D:	08A4      	lsr        #0x8
    170E:	E015      	ld         al, @0xFFE0 <register ah>
    170F:	02A0      	asl        #0x2
    1710:	01A0      	asl        #0x1
    1711:	0127      	st         al, @(+0x1, y)
    1712:	E415      	ld         al, @0xFFE4 <register uy>
    1713:	0634      	add        al, #+0x6
    1714:	0227      	st         al, @(+0x2, y)
    1715:	5014      	ld         al, #+0x50
    1716:	0610      	ld         ah, #+0x6
    1717:	0100      	**prefx    0x1
    1718:	D400      	**prefx    0xD4
    1719:	BD9C      	bsr        +0xD3BD <I2cEepromRead:0xEAD6[p]>
    171A:	2627      	st         al, @(+0x26, y)
    171B:	34F0      	bne        +0x34 <findSharedData+0x55:0x174F[p]>
    171C:	031B      	ld         x, @(+0x3, y)
    171D:	272B      	st         x, @(+0x27, y)
    171E:	0413      	ld         ah, @(+0x4, y)
    171F:	0009      	**unsigned
    1720:	08A4      	lsr        #0x8
    1721:	E015      	ld         al, @0xFFE0 <register ah>
    1722:	02A0      	asl        #0x2
    1723:	E111      	ld         ah, @0xFFE1 <register al>
    1724:	0230      	add        ah, #+0x2
    1725:	E415      	ld         al, @0xFFE4 <register uy>
    1726:	0434      	add        al, #+0x4
    1727:	0100      	**prefx    0x1
    1728:	599C      	bsr        +0x159 <crcBlock:0x1881[p]>
    1729:	2713      	ld         ah, @(+0x27, y)
    172A:	E181      	cmp        ah, @0xFFE1 <register al>
    172B:	04F4      	beq        +0x4 <findSharedData+0x35:0x172F[p]>
    172C:	FF14      	ld         al, #-0x1
    172D:	2627      	st         al, @(+0x26, y)
    172E:	21E0      	bra        +0x21 <findSharedData+0x55:0x174F[p]>
    172F:	0413      	ld         ah, @(+0x4, y)
    1730:	0009      	**unsigned
    1731:	08A4      	lsr        #0x8
    1732:	F921      	st         ah, @0xFFF9 <(scratchpad)>
    1733:	E419      	ld         x, @0xFFE4 <register uy>
    1734:	0338      	add        x, #+0x3
    1735:	0010      	ld         ah, #+0x0
    1736:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    1737:	09E0      	bra        +0x9 <findSharedData+0x46:0x1740[p]>
    1738:	0316      	ld         al, @(+0x3, x)
    1739:	0536      	add        al, @(+0x5, x)
    173A:	FF34      	add        al, #-0x1
    173B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    173C:	E181      	cmp        ah, @0xFFE1 <register al>
    173D:	02F8      	bcc        +0x2 <findSharedData+0x45:0x173F[p]>
    173E:	F825      	st         al, @0xFFF8 <(scratchpad)>
    173F:	0438      	add        x, #+0x4
    1740:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    1741:	02A0      	asl        #0x2
    1742:	E411      	ld         ah, @0xFFE4 <register uy>
    1743:	0330      	add        ah, #+0x3
    1744:	E131      	add        ah, @0xFFE1 <register al>
    1745:	E089      	cmp        x, @0xFFE0 <register ah>
    1746:	F2F0      	bne        -0xE <findSharedData+0x3E:0x1738[p]>
    1747:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    1748:	0009      	**unsigned
    1749:	07A4      	lsr        #0x7
    174A:	E015      	ld         al, @0xFFE0 <register ah>
    174B:	0134      	add        al, #+0x1
    174C:	07A0      	asl        #0x7
    174D:	4B00      	**prefx    0x4B
    174E:	4C25      	st         al, @0x4B4C <shared_data_location>
    174F:	2617      	ld         al, @(+0x26, y)
    1750:	290F      	leave      #+0x29

0x00001751 <OtaReadCurrentApp>:
    1751:	2A0B      	enter      #+0x2A
    1752:	0100      	**prefx    0x1
    1753:	159C      	bsr        +0x115 <i2cInitBus:0x1868[p]>
    1754:	4B00      	**prefx    0x4B
    1755:	4C99      	tst        @0x4B4C <shared_data_location>
    1756:	04F0      	bne        +0x4 <OtaReadCurrentApp+0x9:0x175A[p]>
    1757:	A39C      	bsr        -0x5D <findSharedData:0x16FA[p]>
    1758:	E199      	tst        @0xFFE1 <register al>
    1759:	16F0      	bne        +0x16 <OtaReadCurrentApp+0x1E:0x176F[p]>
    175A:	E415      	ld         al, @0xFFE4 <register uy>
    175B:	889C      	bsr        -0x78 <readOtaVersion:0x16E3[p]>
    175C:	E199      	tst        @0xFFE1 <register al>
    175D:	12F0      	bne        +0x12 <OtaReadCurrentApp+0x1E:0x176F[p]>
    175E:	009B      	tst        @(0x0, y)
    175F:	08F0      	bne        +0x8 <OtaReadCurrentApp+0x16:0x1767[p]>
    1760:	E415      	ld         al, @0xFFE4 <register uy>
    1761:	0234      	add        al, #+0x2
    1762:	8B9C      	bsr        -0x75 <readSharedDataV5:0x16ED[p]>
    1763:	E199      	tst        @0xFFE1 <register al>
    1764:	0BF0      	bne        +0xB <OtaReadCurrentApp+0x1E:0x176F[p]>
    1765:	0417      	ld         al, @(+0x4, y)
    1766:	0BE0      	bra        +0xB <OtaReadCurrentApp+0x20:0x1771[p]>
    1767:	E415      	ld         al, @0xFFE4 <register uy>
    1768:	0134      	add        al, #+0x1
    1769:	FF00      	**prefx    0xFF
    176A:	7F9C      	bsr        -0x81 <readCurrentApp:0x16E9[p]>
    176B:	E199      	tst        @0xFFE1 <register al>
    176C:	03F0      	bne        +0x3 <OtaReadCurrentApp+0x1E:0x176F[p]>
    176D:	0117      	ld         al, @(+0x1, y)
    176E:	03E0      	bra        +0x3 <OtaReadCurrentApp+0x20:0x1771[p]>
    176F:	0100      	**prefx    0x1
    1770:	FF14      	ld         al, #+0xFF
    1771:	2A0F      	leave      #+0x2A

0x00001772 <writeCurrentAppV5>:
    1772:	2F0B      	enter      #+0x2F
    1773:	2C27      	st         al, @(+0x2C, y)
    1774:	2D23      	st         ah, @(+0x2D, y)
    1775:	E415      	ld         al, @0xFFE4 <register uy>
    1776:	0434      	add        al, #+0x4
    1777:	FF00      	**prefx    0xFF
    1778:	759C      	bsr        -0x8B <readSharedDataV5:0x16ED[p]>
    1779:	E199      	tst        @0xFFE1 <register al>
    177A:	5DF0      	bne        +0x5D <writeCurrentAppV5+0x65:0x17D7[p]>
    177B:	0617      	ld         al, @(+0x6, y)
    177C:	2B27      	st         al, @(+0x2B, y)
    177D:	1514      	ld         al, #+0x15
    177E:	0027      	st         al, @(0x0, y)
    177F:	E415      	ld         al, @0xFFE4 <register uy>
    1780:	0634      	add        al, #+0x6
    1781:	0010      	ld         ah, #+0x0
    1782:	7600      	**prefx    0x76
    1783:	8A9C      	bsr        +0x758A <MemSet:0x8D0D[p]>
    1784:	2C17      	ld         al, @(+0x2C, y)
    1785:	0627      	st         al, @(+0x6, y)
    1786:	2B17      	ld         al, @(+0x2B, y)
    1787:	0727      	st         al, @(+0x7, y)
    1788:	0014      	ld         al, #+0x0
    1789:	2D9B      	tst        @(+0x2D, y)
    178A:	02F4      	beq        +0x2 <writeCurrentAppV5+0x1A:0x178C[p]>
    178B:	0114      	ld         al, #+0x1
    178C:	01C4      	and        al, #0x1
    178D:	07A0      	asl        #0x7
    178E:	0813      	ld         ah, @(+0x8, y)
    178F:	FF00      	**prefx    0xFF
    1790:	7FC0      	and        ah, #0xFF7F
    1791:	E1B1      	or         ah, @0xFFE1 <register al>
    1792:	0823      	st         ah, @(+0x8, y)
    1793:	0014      	ld         al, #+0x0
    1794:	339B      	tst        @(+0x33, y)
    1795:	02F4      	beq        +0x2 <writeCurrentAppV5+0x25:0x1797[p]>
    1796:	0114      	ld         al, #+0x1
    1797:	01C4      	and        al, #0x1
    1798:	06A0      	asl        #0x6
    1799:	0813      	ld         ah, @(+0x8, y)
    179A:	BFC0      	and        ah, #0xFFBF
    179B:	E1B1      	or         ah, @0xFFE1 <register al>
    179C:	0823      	st         ah, @(+0x8, y)
    179D:	3017      	ld         al, @(+0x30, y)
    179E:	1A27      	st         al, @(+0x1A, y)
    179F:	2F9B      	tst        @(+0x2F, y)
    17A0:	0AF4      	beq        +0xA <writeCurrentAppV5+0x38:0x17AA[p]>
    17A1:	0514      	ld         al, #+0x5
    17A2:	E411      	ld         ah, @0xFFE4 <register uy>
    17A3:	0930      	add        ah, #+0x9
    17A4:	2F1B      	ld         x, @(+0x2F, y)
    17A5:	FD09      	bc2        
    17A6:	0814      	ld         al, #+0x8
    17A7:	0430      	add        ah, #+0x4
    17A8:	321B      	ld         x, @(+0x32, y)
    17A9:	FD09      	bc2        
    17AA:	319B      	tst        @(+0x31, y)
    17AB:	09F4      	beq        +0x9 <writeCurrentAppV5+0x42:0x17B4[p]>
    17AC:	0817      	ld         al, @(+0x8, y)
    17AD:	20B4      	or         al, #+0x20
    17AE:	0827      	st         al, @(+0x8, y)
    17AF:	0414      	ld         al, #+0x4
    17B0:	E411      	ld         ah, @0xFFE4 <register uy>
    17B1:	0E30      	add        ah, #+0xE
    17B2:	311B      	ld         x, @(+0x31, y)
    17B3:	FD09      	bc2        
    17B4:	E415      	ld         al, @0xFFE4 <register uy>
    17B5:	0534      	add        al, #+0x5
    17B6:	2610      	ld         ah, #+0x26
    17B7:	0100      	**prefx    0x1
    17B8:	C99C      	bsr        +0xC9 <crcBlock:0x1881[p]>
    17B9:	0327      	st         al, @(+0x3, y)
    17BA:	0114      	ld         al, #+0x1
    17BB:	0027      	st         al, @(0x0, y)
    17BC:	0214      	ld         al, #+0x2
    17BD:	0127      	st         al, @(+0x1, y)
    17BE:	E415      	ld         al, @0xFFE4 <register uy>
    17BF:	0334      	add        al, #+0x3
    17C0:	0227      	st         al, @(+0x2, y)
    17C1:	5014      	ld         al, #+0x50
    17C2:	4B00      	**prefx    0x4B
    17C3:	4C11      	ld         ah, @0x4B4C <shared_data_location>
    17C4:	0100      	**prefx    0x1
    17C5:	D300      	**prefx    0xD3
    17C6:	649C      	bsr        +0xD364 <I2cEepromWrite:0xEB2A[p]>
    17C7:	E199      	tst        @0xFFE1 <register al>
    17C8:	0FF0      	bne        +0xF <writeCurrentAppV5+0x65:0x17D7[p]>
    17C9:	4B00      	**prefx    0x4B
    17CA:	4C11      	ld         ah, @0x4B4C <shared_data_location>
    17CB:	0430      	add        ah, #+0x4
    17CC:	0114      	ld         al, #+0x1
    17CD:	0027      	st         al, @(0x0, y)
    17CE:	2A14      	ld         al, #+0x2A
    17CF:	0127      	st         al, @(+0x1, y)
    17D0:	E415      	ld         al, @0xFFE4 <register uy>
    17D1:	0634      	add        al, #+0x6
    17D2:	0227      	st         al, @(+0x2, y)
    17D3:	5014      	ld         al, #+0x50
    17D4:	0100      	**prefx    0x1
    17D5:	D300      	**prefx    0xD3
    17D6:	549C      	bsr        +0xD354 <I2cEepromWrite:0xEB2A[p]>
    17D7:	2F0F      	leave      #+0x2F

0x000017D8 <writeCurrentApp>:
    17D8:	1C0B      	enter      #+0x1C
    17D9:	1A23      	st         ah, @(+0x1A, y)
    17DA:	E415      	ld         al, @0xFFE4 <register uy>
    17DB:	0334      	add        al, #+0x3
    17DC:	FF00      	**prefx    0xFF
    17DD:	0C9C      	bsr        -0xF4 <readCurrentApp:0x16E9[p]>
    17DE:	E199      	tst        @0xFFE1 <register al>
    17DF:	51F0      	bne        +0x51 <writeCurrentApp+0x58:0x1830[p]>
    17E0:	1514      	ld         al, #+0x15
    17E1:	0027      	st         al, @(0x0, y)
    17E2:	E415      	ld         al, @0xFFE4 <register uy>
    17E3:	0534      	add        al, #+0x5
    17E4:	0010      	ld         ah, #+0x0
    17E5:	7500      	**prefx    0x75
    17E6:	279C      	bsr        +0x7527 <MemSet:0x8D0D[p]>
    17E7:	1A17      	ld         al, @(+0x1A, y)
    17E8:	FFD4      	xor        al, #0xFFFF
    17E9:	08A0      	asl        #0x8
    17EA:	1A1B      	ld         x, @(+0x1A, y)
    17EB:	0100      	**prefx    0x1
    17EC:	FFC8      	and        x, #0xFF
    17ED:	E3B5      	or         al, @0xFFE3 <register uxl>
    17EE:	0427      	st         al, @(+0x4, y)
    17EF:	0317      	ld         al, @(+0x3, y)
    17F0:	0527      	st         al, @(+0x5, y)
    17F1:	0014      	ld         al, #+0x0
    17F2:	1C9B      	tst        @(+0x1C, y)
    17F3:	02F4      	beq        +0x2 <writeCurrentApp+0x1D:0x17F5[p]>
    17F4:	0114      	ld         al, #+0x1
    17F5:	0FA0      	asl        #0xF
    17F6:	0613      	ld         ah, @(+0x6, y)
    17F7:	8000      	**prefx    0x80
    17F8:	FFC0      	and        ah, #0x7FFF
    17F9:	E1B1      	or         ah, @0xFFE1 <register al>
    17FA:	0623      	st         ah, @(+0x6, y)
    17FB:	0014      	ld         al, #+0x0
    17FC:	219B      	tst        @(+0x21, y)
    17FD:	02F4      	beq        +0x2 <writeCurrentApp+0x27:0x17FF[p]>
    17FE:	0114      	ld         al, #+0x1
    17FF:	01C4      	and        al, #0x1
    1800:	0EA0      	asl        #0xE
    1801:	0613      	ld         ah, @(+0x6, y)
    1802:	C000      	**prefx    0xC0
    1803:	FFC0      	and        ah, #0xBFFF
    1804:	E1B1      	or         ah, @0xFFE1 <register al>
    1805:	0623      	st         ah, @(+0x6, y)
    1806:	1E1B      	ld         x, @(+0x1E, y)
    1807:	182B      	st         x, @(+0x18, y)
    1808:	1D9B      	tst        @(+0x1D, y)
    1809:	0AF4      	beq        +0xA <writeCurrentApp+0x3B:0x1813[p]>
    180A:	0514      	ld         al, #+0x5
    180B:	E411      	ld         ah, @0xFFE4 <register uy>
    180C:	0730      	add        ah, #+0x7
    180D:	1D1B      	ld         x, @(+0x1D, y)
    180E:	FD09      	bc2        
    180F:	0814      	ld         al, #+0x8
    1810:	0430      	add        ah, #+0x4
    1811:	201B      	ld         x, @(+0x20, y)
    1812:	FD09      	bc2        
    1813:	1F9B      	tst        @(+0x1F, y)
    1814:	0AF4      	beq        +0xA <writeCurrentApp+0x46:0x181E[p]>
    1815:	0617      	ld         al, @(+0x6, y)
    1816:	2000      	**prefx    0x20
    1817:	00B4      	or         al, #+0x2000
    1818:	0627      	st         al, @(+0x6, y)
    1819:	0414      	ld         al, #+0x4
    181A:	E411      	ld         ah, @0xFFE4 <register uy>
    181B:	0C30      	add        ah, #+0xC
    181C:	1F1B      	ld         x, @(+0x1F, y)
    181D:	FD09      	bc2        
    181E:	E415      	ld         al, @0xFFE4 <register uy>
    181F:	0534      	add        al, #+0x5
    1820:	1410      	ld         ah, #+0x14
    1821:	609C      	bsr        +0x60 <crcBlock:0x1881[p]>
    1822:	1927      	st         al, @(+0x19, y)
    1823:	0118      	ld         x, #+0x1
    1824:	002B      	st         x, @(0x0, y)
    1825:	2C14      	ld         al, #+0x2C
    1826:	0127      	st         al, @(+0x1, y)
    1827:	E419      	ld         x, @0xFFE4 <register uy>
    1828:	0438      	add        x, #+0x4
    1829:	022B      	st         x, @(+0x2, y)
    182A:	5014      	ld         al, #+0x50
    182B:	4B00      	**prefx    0x4B
    182C:	4C11      	ld         ah, @0x4B4C <shared_data_location>
    182D:	0100      	**prefx    0x1
    182E:	D300      	**prefx    0xD3
    182F:	FB9C      	bsr        +0xD2FB <I2cEepromWrite:0xEB2A[p]>
    1830:	1C0F      	leave      #+0x1C

0x00001831 <OtaWriteCurrentApp>:
    1831:	0A0B      	enter      #+0xA
    1832:	0727      	st         al, @(+0x7, y)
    1833:	0823      	st         ah, @(+0x8, y)
    1834:	0384      	cmp        al, #+0x3
    1835:	04FC      	bcs        +0x4 <OtaWriteCurrentApp+0x8:0x1839[p]>
    1836:	0A00      	**prefx    0xA
    1837:	4114      	ld         al, #+0xA41
    1838:	2FE0      	bra        +0x2F <OtaWriteCurrentApp+0x36:0x1867[p]>
    1839:	2F9C      	bsr        +0x2F <i2cInitBus:0x1868[p]>
    183A:	4B00      	**prefx    0x4B
    183B:	4C99      	tst        @0x4B4C <shared_data_location>
    183C:	05F0      	bne        +0x5 <OtaWriteCurrentApp+0x10:0x1841[p]>
    183D:	FF00      	**prefx    0xFF
    183E:	BC9C      	bsr        -0x144 <findSharedData:0x16FA[p]>
    183F:	E199      	tst        @0xFFE1 <register al>
    1840:	27F0      	bne        +0x27 <OtaWriteCurrentApp+0x36:0x1867[p]>
    1841:	E415      	ld         al, @0xFFE4 <register uy>
    1842:	0634      	add        al, #+0x6
    1843:	FF00      	**prefx    0xFF
    1844:	9F9C      	bsr        -0x161 <readOtaVersion:0x16E3[p]>
    1845:	E199      	tst        @0xFFE1 <register al>
    1846:	21F0      	bne        +0x21 <OtaWriteCurrentApp+0x36:0x1867[p]>
    1847:	0617      	ld         al, @(+0x6, y)
    1848:	10F0      	bne        +0x10 <OtaWriteCurrentApp+0x27:0x1858[p]>
    1849:	0A17      	ld         al, @(+0xA, y)
    184A:	0027      	st         al, @(0x0, y)
    184B:	0B1B      	ld         x, @(+0xB, y)
    184C:	012B      	st         x, @(+0x1, y)
    184D:	0C17      	ld         al, @(+0xC, y)
    184E:	0227      	st         al, @(+0x2, y)
    184F:	0D1B      	ld         x, @(+0xD, y)
    1850:	032B      	st         x, @(+0x3, y)
    1851:	0E17      	ld         al, @(+0xE, y)
    1852:	0427      	st         al, @(+0x4, y)
    1853:	0717      	ld         al, @(+0x7, y)
    1854:	0813      	ld         ah, @(+0x8, y)
    1855:	FF00      	**prefx    0xFF
    1856:	1C9C      	bsr        -0xE4 <writeCurrentAppV5:0x1772[p]>
    1857:	10E0      	bra        +0x10 <OtaWriteCurrentApp+0x36:0x1867[p]>
    1858:	081B      	ld         x, @(+0x8, y)
    1859:	002B      	st         x, @(0x0, y)
    185A:	0A1B      	ld         x, @(+0xA, y)
    185B:	012B      	st         x, @(+0x1, y)
    185C:	0B1B      	ld         x, @(+0xB, y)
    185D:	022B      	st         x, @(+0x2, y)
    185E:	0C1B      	ld         x, @(+0xC, y)
    185F:	032B      	st         x, @(+0x3, y)
    1860:	0D1B      	ld         x, @(+0xD, y)
    1861:	042B      	st         x, @(+0x4, y)
    1862:	0E1B      	ld         x, @(+0xE, y)
    1863:	052B      	st         x, @(+0x5, y)
    1864:	0713      	ld         ah, @(+0x7, y)
    1865:	FF00      	**prefx    0xFF
    1866:	729C      	bsr        -0x8E <writeCurrentApp:0x17D8[p]>
    1867:	0A0F      	leave      #+0xA

0x00001868 <i2cInitBus>:
    1868:	030B      	enter      #+0x3
    1869:	0014      	ld         al, #+0x0
    186A:	0100      	**prefx    0x1
    186B:	D200      	**prefx    0xD2
    186C:	8E9C      	bsr        +0xD18E <I2cEnable:0xE9FA[p]>
    186D:	0214      	ld         al, #+0x2
    186E:	0027      	st         al, @(0x0, y)
    186F:	0714      	ld         al, #+0x7
    1870:	0127      	st         al, @(+0x1, y)
    1871:	0100      	**prefx    0x1
    1872:	FF14      	ld         al, #+0xFF
    1873:	E111      	ld         ah, @0xFFE1 <register al>
    1874:	0100      	**prefx    0x1
    1875:	D200      	**prefx    0xD2
    1876:	AC9C      	bsr        +0xD1AC <I2cInit:0xEA22[p]>
    1877:	0F14      	ld         al, #+0xF
    1878:	1510      	ld         ah, #+0x15
    1879:	0100      	**prefx    0x1
    187A:	D200      	**prefx    0xD2
    187B:	A09C      	bsr        +0xD1A0 <I2cConfigClock:0xEA1B[p]>
    187C:	0114      	ld         al, #+0x1
    187D:	0100      	**prefx    0x1
    187E:	D100      	**prefx    0xD1
    187F:	7B9C      	bsr        +0xD17B <I2cEnable:0xE9FA[p]>
    1880:	030F      	leave      #+0x3

0x00001881 <crcBlock>:
    1881:	010B      	enter      #+0x1
    1882:	FE27      	st         al, @(-0x2, y)
    1883:	FF23      	st         ah, @(-0x1, y)
    1884:	0014      	ld         al, #+0x0
    1885:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1886:	1BE0      	bra        +0x1B <crcBlock+0x20:0x18A1[p]>
    1887:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
    1888:	0009      	**unsigned
    1889:	F9A5      	lsr        @0xFFF9 <(scratchpad)>
    188A:	E019      	ld         x, @0xFFE0 <register ah>
    188B:	01C8      	and        x, #0x1
    188C:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    188D:	0009      	**unsigned
    188E:	0FA4      	lsr        #0xF
    188F:	E089      	cmp        x, @0xFFE0 <register ah>
    1890:	07F4      	beq        +0x7 <crcBlock+0x16:0x1897[p]>
    1891:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    1892:	01A0      	asl        #0x1
    1893:	8000      	**prefx    0x80
    1894:	05D4      	xor        al, #0x8005
    1895:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1896:	04E0      	bra        +0x4 <crcBlock+0x19:0x189A[p]>
    1897:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    1898:	01A0      	asl        #0x1
    1899:	F825      	st         al, @0xFFF8 <(scratchpad)>
    189A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    189B:	0134      	add        al, #+0x1
    189C:	F925      	st         al, @0xFFF9 <(scratchpad)>
    189D:	1084      	cmp        al, #+0x10
    189E:	E9F0      	bne        -0x17 <crcBlock+0x6:0x1887[p]>
    189F:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    18A0:	0134      	add        al, #+0x1
    18A1:	FA25      	st         al, @0xFFFA <(scratchpad)>
    18A2:	FF87      	cmp        al, @(-0x1, y)
    18A3:	08F8      	bcc        +0x8 <crcBlock+0x2A:0x18AB[p]>
    18A4:	FE1B      	ld         x, @(-0x2, y)
    18A5:	FA39      	add        x, @0xFFFA <(scratchpad)>
    18A6:	001A      	ld         x, @(0x0, x)
    18A7:	FB29      	st         x, @0xFFFB <(scratchpad)>
    18A8:	0014      	ld         al, #+0x0
    18A9:	F925      	st         al, @0xFFF9 <(scratchpad)>
    18AA:	DDE0      	bra        -0x23 <crcBlock+0x6:0x1887[p]>
    18AB:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    18AC:	010F      	leave      #+0x1

0x000018AD <___libgatt_lib_db_4554>:
    18AD:	1900      	**prefx    0x19
    18AE:	B414      	ld         al, #+0x18B4
    18AF:	1900      	**prefx    0x19
    18B0:	5910      	ld         ah, #+0x1959
    18B1:	0100      	**prefx    0x1
    18B2:	9D00      	**prefx    0x9D
    18B3:	27E0      	bra        +0x9D27 <___libgatt_lib_db_3959:0xB5DA[p]>

0x000018B4 <.LFB6>:
    18B4:	030B      	enter      #+0x3
    18B5:	0027      	st         al, @(0x0, y)
    18B6:	0123      	st         ah, @(+0x1, y)
    18B7:	3E84      	cmp        al, #+0x3E
    18B8:	1DF4      	beq        +0x1D <.LFB6+0x21:0x18D5[p]>
    18B9:	3F84      	cmp        al, #+0x3F
    18BA:	04F8      	bcc        +0x4 <.LFB6+0xA:0x18BE[p]>
    18BB:	0584      	cmp        al, #+0x5
    18BC:	22F0      	bne        +0x22 <.LFB6+0x2A:0x18DE[p]>
    18BD:	1AE0      	bra        +0x1A <.LFB6+0x23:0x18D7[p]>
    18BE:	0017      	ld         al, @(0x0, y)
    18BF:	4284      	cmp        al, #+0x42
    18C0:	05F4      	beq        +0x5 <.LFB6+0x11:0x18C5[p]>
    18C1:	0B00      	**prefx    0xB
    18C2:	B684      	cmp        al, #+0xAB6
    18C3:	1BF0      	bne        +0x1B <.LFB6+0x2A:0x18DE[p]>
    18C4:	07E0      	bra        +0x7 <.LFB6+0x17:0x18CB[p]>
    18C5:	011B      	ld         x, @(+0x1, y)
    18C6:	0138      	add        x, #+0x1
    18C7:	E315      	ld         al, @0xFFE3 <register uxl>
    18C8:	EB00      	**prefx    0xEB
    18C9:	E09C      	bsr        -0x1520 <___libgatt_lib_db_4593:0x3A9[p]>
    18CA:	09E0      	bra        +0x9 <.LFB6+0x1F:0x18D3[p]>
    18CB:	011B      	ld         x, @(+0x1, y)
    18CC:	0116      	ld         al, @(+0x1, x)
    18CD:	7900      	**prefx    0x79
    18CE:	699C      	bsr        +0x7969 <___libgatt_lib_db_40:0x9237[p]>
    18CF:	011B      	ld         x, @(+0x1, y)
    18D0:	0126      	st         al, @(+0x1, x)
    18D1:	FF84      	cmp        al, #-0x1
    18D2:	0CF0      	bne        +0xC <.LFB6+0x2A:0x18DE[p]>
    18D3:	0114      	ld         al, #+0x1
    18D4:	0EE0      	bra        +0xE <.LFB6+0x2E:0x18E2[p]>
    18D5:	179C      	bsr        +0x17 <___libgatt_lib_db_4564:0x18EC[p]>
    18D6:	08E0      	bra        +0x8 <.LFB6+0x2A:0x18DE[p]>
    18D7:	0014      	ld         al, #+0x0
    18D8:	4B00      	**prefx    0x4B
    18D9:	5025      	st         al, @0x4B50 <patch_rx_timing_report>
    18DA:	4B00      	**prefx    0x4B
    18DB:	5125      	st         al, @0x4B51 <patch_pending_mode>
    18DC:	4B00      	**prefx    0x4B
    18DD:	4F25      	st         al, @0x4B4F <patch_pending>
    18DE:	0017      	ld         al, @(0x0, y)
    18DF:	0113      	ld         ah, @(+0x1, y)
    18E0:	7B00      	**prefx    0x7B
    18E1:	879C      	bsr        +0x7A87 <___libgatt_lib_db_73:0x9368[p]>
    18E2:	030F      	leave      #+0x3

0x000018E3 <LsRadioEventNotification>:
    18E3:	010B      	enter      #+0x1
    18E4:	7F00      	**prefx    0x7F
    18E5:	4A18      	ld         x, #+0x7F4A
    18E6:	F600      	**prefx    0xF6
    18E7:	4F29      	st         x, @0xF64F <___libgatt_lib_db_1805>
    18E8:	001B      	ld         x, @(0x0, y)
    18E9:	013C      	add        y, #+0x1
    18EA:	7900      	**prefx    0x79
    18EB:	A0E0      	bra        +0x78A0 <LsRadioEventNotification_A05:0x918B[p]>

0x000018EC <___libgatt_lib_db_4564>:
    18EC:	010B      	enter      #+0x1
    18ED:	9400      	**prefx    0x94
    18EE:	6E15      	ld         al, @0x946E <___libgatt_lib_db_79+0x1>
    18EF:	0AF4      	beq        +0xA <___libgatt_lib_db_4564+0xD:0x18F9[p]>
    18F0:	4B00      	**prefx    0x4B
    18F1:	4D11      	ld         ah, @0x4B4D <shared_data_location+0x1>
    18F2:	E000      	**prefx    0xE0
    18F3:	1930      	add        ah, #-0x1FE7
    18F4:	FF23      	st         ah, @(-0x1, y)
    18F5:	FF9F      	bsr        @(-0x1, y)
    18F6:	0014      	ld         al, #+0x0
    18F7:	9400      	**prefx    0x94
    18F8:	6E25      	st         al, @0x946E <___libgatt_lib_db_79+0x1>
    18F9:	010F      	leave      #+0x1

0x000018FA <.LFB7>:
    18FA:	020B      	enter      #+0x2
    18FB:	9300      	**prefx    0x93
    18FC:	6519      	ld         x, @0x9365 <___libgatt_lib_db_18>
    18FD:	9300      	**prefx    0x93
    18FE:	6815      	ld         al, @0x9368 <___libgatt_lib_db_73>
    18FF:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1900:	9400      	**prefx    0x94
    1901:	8915      	ld         al, @0x9389 <___libgatt_lib_db_73+0x21>
    1902:	F925      	st         al, @0xFFF9 <(scratchpad)>
    1903:	8D00      	**prefx    0x8D
    1904:	9D11      	ld         ah, @0x8C9D <loop.986.+0x2>
    1905:	05F0      	bne        +0x5 <.LFB7+0x10:0x190A[p]>
    1906:	9300      	**prefx    0x93
    1907:	6915      	ld         al, @0x9369 <___libgatt_lib_db_73+0x1>
    1908:	0184      	cmp        al, #+0x1
    1909:	35F0      	bne        +0x35 <.LFB7+0x44:0x193E[p]>
    190A:	F999      	tst        @0xFFF9 <(scratchpad)>
    190B:	1AF4      	beq        +0x1A <.LFB7+0x2B:0x1925[p]>
    190C:	E099      	tst        @0xFFE0 <register ah>
    190D:	18F4      	beq        +0x18 <.LFB7+0x2B:0x1925[p]>
    190E:	9300      	**prefx    0x93
    190F:	6B15      	ld         al, @0x936B <___libgatt_lib_db_73+0x3>
    1910:	0184      	cmp        al, #+0x1
    1911:	2DF0      	bne        +0x2D <.LFB7+0x44:0x193E[p]>
    1912:	9300      	**prefx    0x93
    1913:	6C15      	ld         al, @0x936C <___libgatt_lib_db_73+0x4>
    1914:	FCC4      	and        al, #0xFFFC
    1915:	9300      	**prefx    0x93
    1916:	6C25      	st         al, @0x936C <___libgatt_lib_db_73+0x4>
    1917:	FE38      	add        x, #-0x2
    1918:	0388      	cmp        x, #+0x3
    1919:	0CF8      	bcc        +0xC <.LFB7+0x2B:0x1925[p]>
    191A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    191B:	0288      	cmp        x, #+0x2
    191C:	03F0      	bne        +0x3 <.LFB7+0x25:0x191F[p]>
    191D:	01B4      	or         al, #+0x1
    191E:	05E0      	bra        +0x5 <.LFB7+0x29:0x1923[p]>
    191F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1920:	0388      	cmp        x, #+0x3
    1921:	04F0      	bne        +0x4 <.LFB7+0x2B:0x1925[p]>
    1922:	02B4      	or         al, #+0x2
    1923:	9300      	**prefx    0x93
    1924:	6C25      	st         al, @0x936C <___libgatt_lib_db_73+0x4>
    1925:	4B00      	**prefx    0x4B
    1926:	4D19      	ld         x, @0x4B4D <shared_data_location+0x1>
    1927:	CF00      	**prefx    0xCF
    1928:	E438      	add        x, #-0x311C
    1929:	0014      	ld         al, #+0x0
    192A:	0027      	st         al, @(0x0, y)
    192B:	9300      	**prefx    0x93
    192C:	6A14      	ld         al, #-0x6C96
    192D:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
    192E:	FF2B      	st         x, @(-0x1, y)
    192F:	FF9F      	bsr        @(-0x1, y)
    1930:	9400      	**prefx    0x94
    1931:	AD11      	ld         ah, @0x93AD <___libgatt_lib_db_73+0x45>
    1932:	4B00      	**prefx    0x4B
    1933:	4D19      	ld         x, @0x4B4D <shared_data_location+0x1>
    1934:	CF00      	**prefx    0xCF
    1935:	E438      	add        x, #-0x311C
    1936:	0114      	ld         al, #+0x1
    1937:	0027      	st         al, @(0x0, y)
    1938:	9400      	**prefx    0x94
    1939:	8E14      	ld         al, #-0x6C72
    193A:	FF2B      	st         x, @(-0x1, y)
    193B:	FF9F      	bsr        @(-0x1, y)
    193C:	0014      	ld         al, #+0x0
    193D:	02E0      	bra        +0x2 <.LFB7+0x45:0x193F[p]>
    193E:	0C14      	ld         al, #+0xC
    193F:	020F      	leave      #+0x2

0x00001940 <___libgatt_lib_db_4565>:
    1940:	010B      	enter      #+0x1
    1941:	B99C      	bsr        -0x47 <.LFB7:0x18FA[p]>
    1942:	E199      	tst        @0xFFE1 <register al>
    1943:	05F0      	bne        +0x5 <___libgatt_lib_db_4565+0x8:0x1948[p]>
    1944:	9000      	**prefx    0x90
    1945:	8F14      	ld         al, #-0x7071
    1946:	0027      	st         al, @(0x0, y)
    1947:	03E0      	bra        +0x3 <___libgatt_lib_db_4565+0xA:0x194A[p]>
    1948:	0C14      	ld         al, #+0xC
    1949:	0B0F      	leave      #+0xB
    194A:	010F      	leave      #+0x1

0x0000194B <LsStoreAdvScanData>:
    194B:	020B      	enter      #+0x2
    194C:	021B      	ld         x, @(+0x2, y)
    194D:	002B      	st         x, @(0x0, y)
    194E:	7600      	**prefx    0x76
    194F:	679C      	bsr        +0x7667 <LsStoreAdvScanData_A05:0x8FB6[p]>
    1950:	E199      	tst        @0xFFE1 <register al>
    1951:	07F0      	bne        +0x7 <LsStoreAdvScanData+0xD:0x1958[p]>
    1952:	029B      	tst        @(+0x2, y)
    1953:	04F0      	bne        +0x4 <LsStoreAdvScanData+0xC:0x1957[p]>
    1954:	0114      	ld         al, #+0x1
    1955:	8D00      	**prefx    0x8D
    1956:	9D25      	st         al, @0x8C9D <loop.986.+0x2>
    1957:	A39C      	bsr        -0x5D <.LFB7:0x18FA[p]>
    1958:	020F      	leave      #+0x2

0x00001959 <___libgatt_lib_db_4574>:
    1959:	030B      	enter      #+0x3
    195A:	F925      	st         al, @0xFFF9 <(scratchpad)>
    195B:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    195C:	0313      	ld         ah, @(+0x3, y)
    195D:	0417      	ld         al, @(+0x4, y)
    195E:	FA25      	st         al, @0xFFFA <(scratchpad)>
    195F:	16F4      	beq        +0x16 <___libgatt_lib_db_4574+0x1C:0x1975[p]>
    1960:	0380      	cmp        ah, #+0x3
    1961:	142C      	bcz        +0x14 <___libgatt_lib_db_4574+0x1C:0x1975[p]>
    1962:	1C80      	cmp        ah, #+0x1C
    1963:	12F8      	bcc        +0x12 <___libgatt_lib_db_4574+0x1C:0x1975[p]>
    1964:	E015      	ld         al, @0xFFE0 <register ah>
    1965:	FC34      	add        al, #-0x4
    1966:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1967:	0086      	cmp        al, @(0x0, x)
    1968:	0DF0      	bne        +0xD <___libgatt_lib_db_4574+0x1C:0x1975[p]>
    1969:	4B00      	**prefx    0x4B
    196A:	4E19      	ld         x, @0x4B4E <shared_data_location+0x2>
    196B:	9500      	**prefx    0x95
    196C:	6B38      	add        x, #-0x6A95
    196D:	0023      	st         ah, @(0x0, y)
    196E:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    196F:	0127      	st         al, @(+0x1, y)
    1970:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    1971:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    1972:	FF2B      	st         x, @(-0x1, y)
    1973:	FF9F      	bsr        @(-0x1, y)
    1974:	02E0      	bra        +0x2 <___libgatt_lib_db_4574+0x1D:0x1976[p]>
    1975:	0114      	ld         al, #+0x1
    1976:	030F      	leave      #+0x3

0x00001977 <___libgatt_lib_db_4573>:
    1977:	010B      	enter      #+0x1
    1978:	0117      	ld         al, @(+0x1, y)
    1979:	0213      	ld         ah, @(+0x2, y)
    197A:	0684      	cmp        al, #+0x6
    197B:	07F0      	bne        +0x7 <___libgatt_lib_db_4573+0xB:0x1982[p]>
    197C:	E015      	ld         al, @0xFFE0 <register ah>
    197D:	9400      	**prefx    0x94
    197E:	7410      	ld         ah, #-0x6B8C
    197F:	EB00      	**prefx    0xEB
    1980:	E19C      	bsr        -0x151F <___libgatt_lib_db_4607:0x461[p]>
    1981:	040F      	leave      #+0x4
    1982:	010F      	leave      #+0x1

0x00001983 <GattInit>:
    1983:	020B      	enter      #+0x2
    1984:	7A00      	**prefx    0x7A
    1985:	479C      	bsr        +0x7A47 <___libgatt_lib_db_74:0x93CC[p]>
    1986:	7C00      	**prefx    0x7C
    1987:	4C9C      	bsr        +0x7C4C <l2cap_init:0x95D3[p]>
    1988:	6E00      	**prefx    0x6E
    1989:	C99C      	bsr        +0x6DC9 <___libgatt_lib_db_465:0x8752[p]>
    198A:	E900      	**prefx    0xE9
    198B:	9B9C      	bsr        -0x1765 <___libgatt_lib_db_476:0x226[p]>
    198C:	0600      	**prefx    0x6
    198D:	0714      	ld         al, #+0x607
    198E:	9300      	**prefx    0x93
    198F:	6025      	st         al, @0x9360 <DATA_ROMDATA_START>
    1990:	0100      	**prefx    0x1
    1991:	8000      	**prefx    0x80
    1992:	EA9C      	bsr        +0x7FEA <___libgatt_lib_db_139:0x997C[p]>
    1993:	2E18      	ld         x, #+0x2E
    1994:	002B      	st         x, @(0x0, y)
    1995:	9700      	**prefx    0x97
    1996:	D714      	ld         al, #-0x6929
    1997:	0010      	ld         ah, #+0x0
    1998:	7300      	**prefx    0x73
    1999:	749C      	bsr        +0x7374 <MemSet:0x8D0D[p]>
    199A:	FF14      	ld         al, #-0x1
    199B:	9700      	**prefx    0x97
    199C:	D718      	ld         x, #-0x6929
    199D:	0026      	st         al, @(0x0, x)
    199E:	9700      	**prefx    0x97
    199F:	EE25      	st         al, @0x96EE <___libgatt_lib_db_127+0xC>
    19A0:	FF00      	**prefx    0xFF
    19A1:	0C9C      	bsr        -0xF4 <___libgatt_lib_db_4554:0x18AD[p]>
    19A2:	020F      	leave      #+0x2

0x000019A3 <GattCancelConnectReq>:
    19A3:	010B      	enter      #+0x1
    19A4:	FF00      	**prefx    0xFF
    19A5:	479C      	bsr        -0xB9 <___libgatt_lib_db_4564:0x18EC[p]>
    19A6:	0100      	**prefx    0x1
    19A7:	9600      	**prefx    0x96
    19A8:	B59C      	bsr        +0x95B5 <GattCancelConnectReq_A05:0xAF5D[p]>
    19A9:	010F      	leave      #+0x1

0x000019AA <___libgatt_lib_db_4610>:
    19AA:	010B      	enter      #+0x1
    19AB:	E119      	ld         x, @0xFFE1 <register al>
    19AC:	0217      	ld         al, @(+0x2, y)
    19AD:	0026      	st         al, @(0x0, x)
    19AE:	0117      	ld         al, @(+0x1, y)
    19AF:	0126      	st         al, @(+0x1, x)
    19B0:	0222      	st         ah, @(+0x2, x)
    19B1:	010F      	leave      #+0x1

0x000019B2 <___libgatt_lib_db_4617>:
    19B2:	020B      	enter      #+0x2
    19B3:	0617      	ld         al, @(+0x6, y)
    19B4:	CE00      	**prefx    0xCE
    19B5:	2384      	cmp        al, #-0x31DD
    19B6:	16F0      	bne        +0x16 <___libgatt_lib_db_4617+0x1A:0x19CC[p]>
    19B7:	8C00      	**prefx    0x8C
    19B8:	9599      	tst        @0x8B95 <enable_lowduty_directed_adv>
    19B9:	13F4      	beq        +0x13 <___libgatt_lib_db_4617+0x1A:0x19CC[p]>
    19BA:	0417      	ld         al, @(+0x4, y)
    19BB:	4B00      	**prefx    0x4B
    19BC:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    19BD:	F829      	st         x, @0xFFF8 <(scratchpad)>
    19BE:	5790      	smult      #+0x57
    19BF:	9700      	**prefx    0x97
    19C0:	5534      	add        al, #-0x68AB
    19C1:	0027      	st         al, @(0x0, y)
    19C2:	E119      	ld         x, @0xFFE1 <register al>
    19C3:	6216      	ld         al, @(+0x62, x)
    19C4:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    19C5:	E000      	**prefx    0xE0
    19C6:	1938      	add        x, #-0x1FE7
    19C7:	FF2B      	st         x, @(-0x1, y)
    19C8:	FF9F      	bsr        @(-0x1, y)
    19C9:	0014      	ld         al, #+0x0
    19CA:	001B      	ld         x, @(0x0, y)
    19CB:	6226      	st         al, @(+0x62, x)
    19CC:	020F      	leave      #+0x2

0x000019CD <___libgatt_lib_db_4616>:
    19CD:	1E0B      	enter      #+0x1E
    19CE:	3817      	ld         al, @(+0x38, y)
    19CF:	1B27      	st         al, @(+0x1B, y)
    19D0:	5790      	smult      #+0x57
    19D1:	9700      	**prefx    0x97
    19D2:	6B34      	add        al, #-0x6895
    19D3:	1827      	st         al, @(+0x18, y)
    19D4:	0018      	ld         x, #+0x0
    19D5:	022B      	st         x, @(+0x2, y)
    19D6:	0014      	ld         al, #+0x0
    19D7:	181B      	ld         x, @(+0x18, y)
    19D8:	4B26      	st         al, @(+0x4B, x)
    19D9:	181A      	ld         x, @(+0x18, x)
    19DA:	1A2B      	st         x, @(+0x1A, y)
    19DB:	181B      	ld         x, @(+0x18, y)
    19DC:	111A      	ld         x, @(+0x11, x)
    19DD:	192B      	st         x, @(+0x19, y)
    19DE:	181B      	ld         x, @(+0x18, y)
    19DF:	4F16      	ld         al, @(+0x4F, x)
    19E0:	1226      	st         al, @(+0x12, x)
    19E1:	5016      	ld         al, @(+0x50, x)
    19E2:	1326      	st         al, @(+0x13, x)
    19E3:	4B00      	**prefx    0x4B
    19E4:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    19E5:	E315      	ld         al, @0xFFE3 <register uxl>
    19E6:	CB00      	**prefx    0xCB
    19E7:	F034      	add        al, #-0x3510
    19E8:	F825      	st         al, @0xFFF8 <(scratchpad)>
    19E9:	181B      	ld         x, @(+0x18, y)
    19EA:	4D12      	ld         ah, @(+0x4D, x)
    19EB:	4E16      	ld         al, @(+0x4E, x)
    19EC:	0027      	st         al, @(0x0, y)
    19ED:	1B17      	ld         al, @(+0x1B, y)
    19EE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    19EF:	FF2B      	st         x, @(-0x1, y)
    19F0:	FF9F      	bsr        @(-0x1, y)
    19F1:	0014      	ld         al, #+0x0
    19F2:	181B      	ld         x, @(+0x18, y)
    19F3:	4D26      	st         al, @(+0x4D, x)
    19F4:	1816      	ld         al, @(+0x18, x)
    19F5:	02E0      	bra        +0x2 <___libgatt_lib_db_4616+0x2A:0x19F7[p]>
    19F6:	1937      	add        al, @(+0x19, y)
    19F7:	1A87      	cmp        al, @(+0x1A, y)
    19F8:	FEFC      	bcs        -0x2 <___libgatt_lib_db_4616+0x29:0x19F6[p]>
    19F9:	E111      	ld         ah, @0xFFE1 <register al>
    19FA:	1A53      	sub        ah, @(+0x1A, y)
    19FB:	191B      	ld         x, @(+0x19, y)
    19FC:	0078      	nadd       x, #+0x0
    19FD:	F829      	st         x, @0xFFF8 <(scratchpad)>
    19FE:	E019      	ld         x, @0xFFE0 <register ah>
    19FF:	F831      	add        ah, @0xFFF8 <(scratchpad)>
    1A00:	1917      	ld         al, @(+0x19, y)
    1A01:	E035      	add        al, @0xFFE0 <register ah>
    1A02:	1987      	cmp        al, @(+0x19, y)
    1A03:	FBF8      	bcc        -0x5 <___libgatt_lib_db_4616+0x31:0x19FE[p]>
    1A04:	042B      	st         x, @(+0x4, y)
    1A05:	0214      	ld         al, #+0x2
    1A06:	0327      	st         al, @(+0x3, y)
    1A07:	181B      	ld         x, @(+0x18, y)
    1A08:	111A      	ld         x, @(+0x11, x)
    1A09:	052B      	st         x, @(+0x5, y)
    1A0A:	181B      	ld         x, @(+0x18, y)
    1A0B:	121A      	ld         x, @(+0x12, x)
    1A0C:	062B      	st         x, @(+0x6, y)
    1A0D:	181B      	ld         x, @(+0x18, y)
    1A0E:	131A      	ld         x, @(+0x13, x)
    1A0F:	072B      	st         x, @(+0x7, y)
    1A10:	1B17      	ld         al, @(+0x1B, y)
    1A11:	0700      	**prefx    0x7
    1A12:	209C      	bsr        +0x720 <___libgatt_lib_db_4640:0x2132[p]>
    1A13:	4B00      	**prefx    0x4B
    1A14:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A15:	E500      	**prefx    0xE5
    1A16:	A734      	add        al, #-0x1B59
    1A17:	FF27      	st         al, @(-0x1, y)
    1A18:	FF9F      	bsr        @(-0x1, y)
    1A19:	4B00      	**prefx    0x4B
    1A1A:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1A1B:	D200      	**prefx    0xD2
    1A1C:	1E38      	add        x, #-0x2DE2
    1A1D:	1B17      	ld         al, @(+0x1B, y)
    1A1E:	E411      	ld         ah, @0xFFE4 <register uy>
    1A1F:	0130      	add        ah, #+0x1
    1A20:	FF2B      	st         x, @(-0x1, y)
    1A21:	FF9F      	bsr        @(-0x1, y)
    1A22:	4B00      	**prefx    0x4B
    1A23:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A24:	B900      	**prefx    0xB9
    1A25:	6034      	add        al, #-0x46A0
    1A26:	FF27      	st         al, @(-0x1, y)
    1A27:	FF9F      	bsr        @(-0x1, y)
    1A28:	0827      	st         al, @(+0x8, y)
    1A29:	181B      	ld         x, @(+0x18, y)
    1A2A:	0C16      	ld         al, @(+0xC, x)
    1A2B:	0384      	cmp        al, #+0x3
    1A2C:	5E2C      	bcz        +0x5E <___libgatt_lib_db_4616+0xBD:0x1A8A[p]>
    1A2D:	4B00      	**prefx    0x4B
    1A2E:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1A2F:	D300      	**prefx    0xD3
    1A30:	C938      	add        x, #-0x2D37
    1A31:	3C14      	ld         al, #+0x3C
    1A32:	0313      	ld         ah, @(+0x3, y)
    1A33:	FF2B      	st         x, @(-0x1, y)
    1A34:	FF9F      	bsr        @(-0x1, y)
    1A35:	4B00      	**prefx    0x4B
    1A36:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1A37:	D300      	**prefx    0xD3
    1A38:	C938      	add        x, #-0x2D37
    1A39:	3D14      	ld         al, #+0x3D
    1A3A:	0413      	ld         ah, @(+0x4, y)
    1A3B:	FF2B      	st         x, @(-0x1, y)
    1A3C:	FF9F      	bsr        @(-0x1, y)
    1A3D:	4B00      	**prefx    0x4B
    1A3E:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A3F:	E119      	ld         x, @0xFFE1 <register al>
    1A40:	D300      	**prefx    0xD3
    1A41:	C938      	add        x, #-0x2D37
    1A42:	F829      	st         x, @0xFFF8 <(scratchpad)>
    1A43:	181B      	ld         x, @(+0x18, y)
    1A44:	1112      	ld         ah, @(+0x11, x)
    1A45:	3014      	ld         al, #+0x30
    1A46:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1A47:	FF2B      	st         x, @(-0x1, y)
    1A48:	FF9F      	bsr        @(-0x1, y)
    1A49:	4B00      	**prefx    0x4B
    1A4A:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A4B:	E119      	ld         x, @0xFFE1 <register al>
    1A4C:	D300      	**prefx    0xD3
    1A4D:	C938      	add        x, #-0x2D37
    1A4E:	F829      	st         x, @0xFFF8 <(scratchpad)>
    1A4F:	181B      	ld         x, @(+0x18, y)
    1A50:	1212      	ld         ah, @(+0x12, x)
    1A51:	3214      	ld         al, #+0x32
    1A52:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1A53:	FF2B      	st         x, @(-0x1, y)
    1A54:	FF9F      	bsr        @(-0x1, y)
    1A55:	4B00      	**prefx    0x4B
    1A56:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A57:	E119      	ld         x, @0xFFE1 <register al>
    1A58:	D300      	**prefx    0xD3
    1A59:	C938      	add        x, #-0x2D37
    1A5A:	F829      	st         x, @0xFFF8 <(scratchpad)>
    1A5B:	181B      	ld         x, @(+0x18, y)
    1A5C:	1312      	ld         ah, @(+0x13, x)
    1A5D:	3114      	ld         al, #+0x31
    1A5E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1A5F:	FF2B      	st         x, @(-0x1, y)
    1A60:	FF9F      	bsr        @(-0x1, y)
    1A61:	4B00      	**prefx    0x4B
    1A62:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1A63:	D300      	**prefx    0xD3
    1A64:	C938      	add        x, #-0x2D37
    1A65:	2E14      	ld         al, #+0x2E
    1A66:	0813      	ld         ah, @(+0x8, y)
    1A67:	FF2B      	st         x, @(-0x1, y)
    1A68:	FF9F      	bsr        @(-0x1, y)
    1A69:	4B00      	**prefx    0x4B
    1A6A:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A6B:	1C27      	st         al, @(+0x1C, y)
    1A6C:	4B00      	**prefx    0x4B
    1A6D:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1A6E:	D400      	**prefx    0xD4
    1A6F:	C430      	add        ah, #-0x2C3C
    1A70:	1B17      	ld         al, @(+0x1B, y)
    1A71:	FF23      	st         ah, @(-0x1, y)
    1A72:	FF9F      	bsr        @(-0x1, y)
    1A73:	E111      	ld         ah, @0xFFE1 <register al>
    1A74:	1C17      	ld         al, @(+0x1C, y)
    1A75:	D300      	**prefx    0xD3
    1A76:	C934      	add        al, #-0x2D37
    1A77:	1C27      	st         al, @(+0x1C, y)
    1A78:	5E14      	ld         al, #+0x5E
    1A79:	1C9F      	bsr        @(+0x1C, y)
    1A7A:	4B00      	**prefx    0x4B
    1A7B:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1A7C:	D300      	**prefx    0xD3
    1A7D:	DE30      	add        ah, #-0x2D22
    1A7E:	5F14      	ld         al, #+0x5F
    1A7F:	FF23      	st         ah, @(-0x1, y)
    1A80:	FF9F      	bsr        @(-0x1, y)
    1A81:	E111      	ld         ah, @0xFFE1 <register al>
    1A82:	4B00      	**prefx    0x4B
    1A83:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1A84:	D300      	**prefx    0xD3
    1A85:	C938      	add        x, #-0x2D37
    1A86:	02B0      	or         ah, #+0x2
    1A87:	5F14      	ld         al, #+0x5F
    1A88:	FF2B      	st         x, @(-0x1, y)
    1A89:	FF9F      	bsr        @(-0x1, y)
    1A8A:	4B00      	**prefx    0x4B
    1A8B:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1A8C:	D200      	**prefx    0xD2
    1A8D:	2630      	add        ah, #-0x2DDA
    1A8E:	E415      	ld         al, @0xFFE4 <register uy>
    1A8F:	0134      	add        al, #+0x1
    1A90:	FF23      	st         ah, @(-0x1, y)
    1A91:	FF9F      	bsr        @(-0x1, y)
    1A92:	4B00      	**prefx    0x4B
    1A93:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1A94:	E500      	**prefx    0xE5
    1A95:	B034      	add        al, #-0x1B50
    1A96:	FF27      	st         al, @(-0x1, y)
    1A97:	FF9F      	bsr        @(-0x1, y)
    1A98:	1B17      	ld         al, @(+0x1B, y)
    1A99:	0600      	**prefx    0x6
    1A9A:	459C      	bsr        +0x645 <___libgatt_lib_db_4639:0x20DF[p]>
    1A9B:	E199      	tst        @0xFFE1 <register al>
    1A9C:	FF00      	**prefx    0xFF
    1A9D:	73F4      	beq        -0x8D <___libgatt_lib_db_4616+0x43:0x1A10[p]>
    1A9E:	4B00      	**prefx    0x4B
    1A9F:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1AA0:	C900      	**prefx    0xC9
    1AA1:	4238      	add        x, #-0x36BE
    1AA2:	0014      	ld         al, #+0x0
    1AA3:	0027      	st         al, @(0x0, y)
    1AA4:	1B17      	ld         al, @(+0x1B, y)
    1AA5:	E411      	ld         ah, @0xFFE4 <register uy>
    1AA6:	0230      	add        ah, #+0x2
    1AA7:	FF2B      	st         x, @(-0x1, y)
    1AA8:	FF9F      	bsr        @(-0x1, y)
    1AA9:	3B0F      	leave      #+0x3B
    1AAA:	1E0F      	leave      #+0x1E

0x00001AAB <.LFB21>:
    1AAB:	160B      	enter      #+0x16
    1AAC:	1427      	st         al, @(+0x14, y)
    1AAD:	4B00      	**prefx    0x4B
    1AAE:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1AAF:	B700      	**prefx    0xB7
    1AB0:	E838      	add        x, #-0x4918
    1AB1:	0B00      	**prefx    0xB
    1AB2:	B614      	ld         al, #+0xAB6
    1AB3:	0910      	ld         ah, #+0x9
    1AB4:	FF2B      	st         x, @(-0x1, y)
    1AB5:	FF9F      	bsr        @(-0x1, y)
    1AB6:	1327      	st         al, @(+0x13, y)
    1AB7:	1417      	ld         al, @(+0x14, y)
    1AB8:	0600      	**prefx    0x6
    1AB9:	799C      	bsr        +0x679 <___libgatt_lib_db_4640:0x2132[p]>
    1ABA:	4B00      	**prefx    0x4B
    1ABB:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1ABC:	D200      	**prefx    0xD2
    1ABD:	1E38      	add        x, #-0x2DE2
    1ABE:	1417      	ld         al, @(+0x14, y)
    1ABF:	E411      	ld         ah, @0xFFE4 <register uy>
    1AC0:	0230      	add        ah, #+0x2
    1AC1:	FF2B      	st         x, @(-0x1, y)
    1AC2:	FF9F      	bsr        @(-0x1, y)
    1AC3:	4B00      	**prefx    0x4B
    1AC4:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1AC5:	D200      	**prefx    0xD2
    1AC6:	7D38      	add        x, #-0x2D83
    1AC7:	E411      	ld         ah, @0xFFE4 <register uy>
    1AC8:	0630      	add        ah, #+0x6
    1AC9:	0023      	st         ah, @(0x0, y)
    1ACA:	5514      	ld         al, #+0x55
    1ACB:	FD30      	add        ah, #-0x3
    1ACC:	FF2B      	st         x, @(-0x1, y)
    1ACD:	FF9F      	bsr        @(-0x1, y)
    1ACE:	4B00      	**prefx    0x4B
    1ACF:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1AD0:	D200      	**prefx    0xD2
    1AD1:	7D38      	add        x, #-0x2D83
    1AD2:	E411      	ld         ah, @0xFFE4 <register uy>
    1AD3:	0830      	add        ah, #+0x8
    1AD4:	0023      	st         ah, @(0x0, y)
    1AD5:	5314      	ld         al, #+0x53
    1AD6:	FC30      	add        ah, #-0x4
    1AD7:	FF2B      	st         x, @(-0x1, y)
    1AD8:	FF9F      	bsr        @(-0x1, y)
    1AD9:	4B00      	**prefx    0x4B
    1ADA:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1ADB:	D200      	**prefx    0xD2
    1ADC:	7D38      	add        x, #-0x2D83
    1ADD:	E411      	ld         ah, @0xFFE4 <register uy>
    1ADE:	0A30      	add        ah, #+0xA
    1ADF:	0023      	st         ah, @(0x0, y)
    1AE0:	3814      	ld         al, #+0x38
    1AE1:	FB30      	add        ah, #-0x5
    1AE2:	FF2B      	st         x, @(-0x1, y)
    1AE3:	FF9F      	bsr        @(-0x1, y)
    1AE4:	4B00      	**prefx    0x4B
    1AE5:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1AE6:	D300      	**prefx    0xD3
    1AE7:	DE30      	add        ah, #-0x2D22
    1AE8:	0014      	ld         al, #+0x0
    1AE9:	FF23      	st         ah, @(-0x1, y)
    1AEA:	FF9F      	bsr        @(-0x1, y)
    1AEB:	1227      	st         al, @(+0x12, y)
    1AEC:	4B00      	**prefx    0x4B
    1AED:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1AEE:	D200      	**prefx    0xD2
    1AEF:	2630      	add        ah, #-0x2DDA
    1AF0:	E415      	ld         al, @0xFFE4 <register uy>
    1AF1:	0234      	add        al, #+0x2
    1AF2:	FF23      	st         ah, @(-0x1, y)
    1AF3:	FF9F      	bsr        @(-0x1, y)
    1AF4:	0613      	ld         ah, @(+0x6, y)
    1AF5:	0717      	ld         al, @(+0x7, y)
    1AF6:	0127      	st         al, @(+0x1, y)
    1AF7:	0023      	st         ah, @(0x0, y)
    1AF8:	E415      	ld         al, @0xFFE4 <register uy>
    1AF9:	0C34      	add        al, #+0xC
    1AFA:	0313      	ld         ah, @(+0x3, y)
    1AFB:	FF00      	**prefx    0xFF
    1AFC:	AE9C      	bsr        -0x152 <___libgatt_lib_db_4610:0x19AA[p]>
    1AFD:	0813      	ld         ah, @(+0x8, y)
    1AFE:	091B      	ld         x, @(+0x9, y)
    1AFF:	012B      	st         x, @(+0x1, y)
    1B00:	0023      	st         ah, @(0x0, y)
    1B01:	E415      	ld         al, @0xFFE4 <register uy>
    1B02:	0F34      	add        al, #+0xF
    1B03:	0413      	ld         ah, @(+0x4, y)
    1B04:	FF00      	**prefx    0xFF
    1B05:	A59C      	bsr        -0x15B <___libgatt_lib_db_4610:0x19AA[p]>
    1B06:	E411      	ld         ah, @0xFFE4 <register uy>
    1B07:	0C30      	add        ah, #+0xC
    1B08:	0023      	st         ah, @(0x0, y)
    1B09:	E415      	ld         al, @0xFFE4 <register uy>
    1B0A:	0F34      	add        al, #+0xF
    1B0B:	E111      	ld         ah, @0xFFE1 <register al>
    1B0C:	7200      	**prefx    0x72
    1B0D:	4D9C      	bsr        +0x724D <TimeSub48:0x8D5A[p]>
    1B0E:	109B      	tst        @(+0x10, y)
    1B0F:	03F0      	bne        +0x3 <.LFB21+0x67:0x1B12[p]>
    1B10:	119B      	tst        @(+0x11, y)
    1B11:	03F4      	beq        +0x3 <.LFB21+0x69:0x1B14[p]>
    1B12:	FF14      	ld         al, #-0x1
    1B13:	0F27      	st         al, @(+0xF, y)
    1B14:	0F13      	ld         ah, @(+0xF, y)
    1B15:	131B      	ld         x, @(+0x13, y)
    1B16:	0222      	st         ah, @(+0x2, x)
    1B17:	F700      	**prefx    0xF7
    1B18:	B311      	ld         ah, @0xF6B3 <___libgatt_lib_db_2015>
    1B19:	E415      	ld         al, @0xFFE4 <register uy>
    1B1A:	0C34      	add        al, #+0xC
    1B1B:	7200      	**prefx    0x72
    1B1C:	329C      	bsr        +0x7232 <TimeIncrement48:0x8D4E[p]>
    1B1D:	1317      	ld         al, @(+0x13, y)
    1B1E:	0634      	add        al, #+0x6
    1B1F:	8C00      	**prefx    0x8C
    1B20:	9618      	ld         x, #-0x746A
    1B21:	002B      	st         x, @(0x0, y)
    1B22:	E411      	ld         ah, @0xFFE4 <register uy>
    1B23:	0C30      	add        ah, #+0xC
    1B24:	7200      	**prefx    0x72
    1B25:	359C      	bsr        +0x7235 <TimeSub48:0x8D5A[p]>
    1B26:	0A13      	ld         ah, @(+0xA, y)
    1B27:	0B17      	ld         al, @(+0xB, y)
    1B28:	0127      	st         al, @(+0x1, y)
    1B29:	0023      	st         ah, @(0x0, y)
    1B2A:	E415      	ld         al, @0xFFE4 <register uy>
    1B2B:	0F34      	add        al, #+0xF
    1B2C:	0513      	ld         ah, @(+0x5, y)
    1B2D:	FE00      	**prefx    0xFE
    1B2E:	7C9C      	bsr        -0x184 <___libgatt_lib_db_4610:0x19AA[p]>
    1B2F:	E419      	ld         x, @0xFFE4 <register uy>
    1B30:	0C38      	add        x, #+0xC
    1B31:	002B      	st         x, @(0x0, y)
    1B32:	E415      	ld         al, @0xFFE4 <register uy>
    1B33:	0F34      	add        al, #+0xF
    1B34:	E111      	ld         ah, @0xFFE1 <register al>
    1B35:	7200      	**prefx    0x72
    1B36:	249C      	bsr        +0x7224 <TimeSub48:0x8D5A[p]>
    1B37:	1217      	ld         al, @(+0x12, y)
    1B38:	0009      	**unsigned
    1B39:	0500      	**prefx    0x5
    1B3A:	E290      	umult      #0x4E2
    1B3B:	0127      	st         al, @(+0x1, y)
    1B3C:	0023      	st         ah, @(0x0, y)
    1B3D:	E415      	ld         al, @0xFFE4 <register uy>
    1B3E:	0C34      	add        al, #+0xC
    1B3F:	0010      	ld         ah, #+0x0
    1B40:	FE00      	**prefx    0xFE
    1B41:	699C      	bsr        -0x197 <___libgatt_lib_db_4610:0x19AA[p]>
    1B42:	1317      	ld         al, @(+0x13, y)
    1B43:	0334      	add        al, #+0x3
    1B44:	E419      	ld         x, @0xFFE4 <register uy>
    1B45:	0C38      	add        x, #+0xC
    1B46:	002B      	st         x, @(0x0, y)
    1B47:	E411      	ld         ah, @0xFFE4 <register uy>
    1B48:	0F30      	add        ah, #+0xF
    1B49:	7200      	**prefx    0x72
    1B4A:	109C      	bsr        +0x7210 <TimeSub48:0x8D5A[p]>
    1B4B:	4B00      	**prefx    0x4B
    1B4C:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1B4D:	B900      	**prefx    0xB9
    1B4E:	AF30      	add        ah, #-0x4751
    1B4F:	1417      	ld         al, @(+0x14, y)
    1B50:	FF23      	st         ah, @(-0x1, y)
    1B51:	FF9F      	bsr        @(-0x1, y)
    1B52:	131B      	ld         x, @(+0x13, y)
    1B53:	0126      	st         al, @(+0x1, x)
    1B54:	4B00      	**prefx    0x4B
    1B55:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1B56:	B600      	**prefx    0xB6
    1B57:	2030      	add        ah, #-0x49E0
    1B58:	E315      	ld         al, @0xFFE3 <register uxl>
    1B59:	FF23      	st         ah, @(-0x1, y)
    1B5A:	FF9F      	bsr        @(-0x1, y)
    1B5B:	160F      	leave      #+0x16

0x00001B5C <.LFB13>:
    1B5C:	0C0B      	enter      #+0xC
    1B5D:	0927      	st         al, @(+0x9, y)
    1B5E:	0A23      	st         ah, @(+0xA, y)
    1B5F:	E015      	ld         al, @0xFFE0 <register ah>
    1B60:	4000      	**prefx    0x40
    1B61:	00C4      	and        al, #0x4000
    1B62:	5BF4      	beq        +0x5B <.LFB13+0x61:0x1BBD[p]>
    1B63:	091B      	ld         x, @(+0x9, y)
    1B64:	9700      	**prefx    0x97
    1B65:	5516      	ld         al, @(-0x68AB, x)
    1B66:	0684      	cmp        al, #+0x6
    1B67:	52F0      	bne        +0x52 <.LFB13+0x5D:0x1BB9[p]>
    1B68:	E315      	ld         al, @0xFFE3 <register uxl>
    1B69:	5790      	smult      #+0x57
    1B6A:	E119      	ld         x, @0xFFE1 <register al>
    1B6B:	9700      	**prefx    0x97
    1B6C:	6B38      	add        x, #-0x6895
    1B6D:	5516      	ld         al, @(+0x55, x)
    1B6E:	0384      	cmp        al, #+0x3
    1B6F:	03F0      	bne        +0x3 <.LFB13+0x16:0x1B72[p]>
    1B70:	0014      	ld         al, #+0x0
    1B71:	5626      	st         al, @(+0x56, x)
    1B72:	5516      	ld         al, @(+0x55, x)
    1B73:	0284      	cmp        al, #+0x2
    1B74:	45F0      	bne        +0x45 <.LFB13+0x5D:0x1BB9[p]>
    1B75:	9700      	**prefx    0x97
    1B76:	5799      	tst        @0x9757 <le_device+0x2>
    1B77:	25F0      	bne        +0x25 <.LFB13+0x40:0x1B9C[p]>
    1B78:	4B00      	**prefx    0x4B
    1B79:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1B7A:	D200      	**prefx    0xD2
    1B7B:	1E38      	add        x, #-0x2DE2
    1B7C:	0917      	ld         al, @(+0x9, y)
    1B7D:	E411      	ld         ah, @0xFFE4 <register uy>
    1B7E:	FF2B      	st         x, @(-0x1, y)
    1B7F:	FF9F      	bsr        @(-0x1, y)
    1B80:	4B00      	**prefx    0x4B
    1B81:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1B82:	D300      	**prefx    0xD3
    1B83:	DE30      	add        ah, #-0x2D22
    1B84:	1D14      	ld         al, #+0x1D
    1B85:	FF23      	st         ah, @(-0x1, y)
    1B86:	FF9F      	bsr        @(-0x1, y)
    1B87:	0627      	st         al, @(+0x6, y)
    1B88:	4B00      	**prefx    0x4B
    1B89:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1B8A:	D200      	**prefx    0xD2
    1B8B:	2630      	add        ah, #-0x2DDA
    1B8C:	E415      	ld         al, @0xFFE4 <register uy>
    1B8D:	FF23      	st         ah, @(-0x1, y)
    1B8E:	FF9F      	bsr        @(-0x1, y)
    1B8F:	0617      	ld         al, @(+0x6, y)
    1B90:	07C4      	and        al, #0x7
    1B91:	0684      	cmp        al, #+0x6
    1B92:	06F0      	bne        +0x6 <.LFB13+0x3C:0x1B98[p]>
    1B93:	4B00      	**prefx    0x4B
    1B94:	4B18      	ld         x, #+0x4B4B
    1B95:	F600      	**prefx    0xF6
    1B96:	4F29      	st         x, @0xF64F <___libgatt_lib_db_1805>
    1B97:	22E0      	bra        +0x22 <.LFB13+0x5D:0x1BB9[p]>
    1B98:	7F00      	**prefx    0x7F
    1B99:	4A14      	ld         al, #+0x7F4A
    1B9A:	F600      	**prefx    0xF6
    1B9B:	4F25      	st         al, @0xF64F <___libgatt_lib_db_1805>
    1B9C:	4B00      	**prefx    0x4B
    1B9D:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1B9E:	B700      	**prefx    0xB7
    1B9F:	E838      	add        x, #-0x4918
    1BA0:	0B00      	**prefx    0xB
    1BA1:	F814      	ld         al, #+0xAF8
    1BA2:	0310      	ld         ah, #+0x3
    1BA3:	FF2B      	st         x, @(-0x1, y)
    1BA4:	FF9F      	bsr        @(-0x1, y)
    1BA5:	0727      	st         al, @(+0x7, y)
    1BA6:	13F4      	beq        +0x13 <.LFB13+0x5D:0x1BB9[p]>
    1BA7:	4B00      	**prefx    0x4B
    1BA8:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1BA9:	B900      	**prefx    0xB9
    1BAA:	AF30      	add        ah, #-0x4751
    1BAB:	0917      	ld         al, @(+0x9, y)
    1BAC:	FF23      	st         ah, @(-0x1, y)
    1BAD:	FF9F      	bsr        @(-0x1, y)
    1BAE:	071B      	ld         x, @(+0x7, y)
    1BAF:	0126      	st         al, @(+0x1, x)
    1BB0:	0214      	ld         al, #+0x2
    1BB1:	0226      	st         al, @(+0x2, x)
    1BB2:	4B00      	**prefx    0x4B
    1BB3:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1BB4:	B600      	**prefx    0xB6
    1BB5:	2030      	add        ah, #-0x49E0
    1BB6:	E315      	ld         al, @0xFFE3 <register uxl>
    1BB7:	FF23      	st         ah, @(-0x1, y)
    1BB8:	FF9F      	bsr        @(-0x1, y)
    1BB9:	0A17      	ld         al, @(+0xA, y)
    1BBA:	C000      	**prefx    0xC0
    1BBB:	FFC4      	and        al, #0xBFFF
    1BBC:	0A27      	st         al, @(+0xA, y)
    1BBD:	0A17      	ld         al, @(+0xA, y)
    1BBE:	04C4      	and        al, #0x4
    1BBF:	4CF4      	beq        +0x4C <.LFB13+0xAF:0x1C0B[p]>
    1BC0:	0A17      	ld         al, @(+0xA, y)
    1BC1:	40C4      	and        al, #0x40
    1BC2:	49F0      	bne        +0x49 <.LFB13+0xAF:0x1C0B[p]>
    1BC3:	4B00      	**prefx    0x4B
    1BC4:	4F99      	tst        @0x4B4F <patch_pending>
    1BC5:	04F0      	bne        +0x4 <.LFB13+0x6D:0x1BC9[p]>
    1BC6:	4B00      	**prefx    0x4B
    1BC7:	5099      	tst        @0x4B50 <patch_rx_timing_report>
    1BC8:	43F4      	beq        +0x43 <.LFB13+0xAF:0x1C0B[p]>
    1BC9:	091B      	ld         x, @(+0x9, y)
    1BCA:	9700      	**prefx    0x97
    1BCB:	5516      	ld         al, @(-0x68AB, x)
    1BCC:	0684      	cmp        al, #+0x6
    1BCD:	03F4      	beq        +0x3 <.LFB13+0x74:0x1BD0[p]>
    1BCE:	0484      	cmp        al, #+0x4
    1BCF:	3CF0      	bne        +0x3C <.LFB13+0xAF:0x1C0B[p]>
    1BD0:	4B00      	**prefx    0x4B
    1BD1:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1BD2:	B600      	**prefx    0xB6
    1BD3:	9730      	add        ah, #-0x4A69
    1BD4:	E415      	ld         al, @0xFFE4 <register uy>
    1BD5:	0134      	add        al, #+0x1
    1BD6:	FF23      	st         ah, @(-0x1, y)
    1BD7:	FF9F      	bsr        @(-0x1, y)
    1BD8:	4B00      	**prefx    0x4B
    1BD9:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1BDA:	0327      	st         al, @(+0x3, y)
    1BDB:	4B00      	**prefx    0x4B
    1BDC:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1BDD:	D400      	**prefx    0xD4
    1BDE:	F230      	add        ah, #-0x2C0E
    1BDF:	0917      	ld         al, @(+0x9, y)
    1BE0:	FF23      	st         ah, @(-0x1, y)
    1BE1:	FF9F      	bsr        @(-0x1, y)
    1BE2:	031B      	ld         x, @(+0x3, y)
    1BE3:	B600      	**prefx    0xB6
    1BE4:	B938      	add        x, #-0x4A47
    1BE5:	032B      	st         x, @(+0x3, y)
    1BE6:	039F      	bsr        @(+0x3, y)
    1BE7:	0527      	st         al, @(+0x5, y)
    1BE8:	4B00      	**prefx    0x4B
    1BE9:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1BEA:	D400      	**prefx    0xD4
    1BEB:	A630      	add        ah, #-0x2C5A
    1BEC:	0917      	ld         al, @(+0x9, y)
    1BED:	FF23      	st         ah, @(-0x1, y)
    1BEE:	FF9F      	bsr        @(-0x1, y)
    1BEF:	0537      	add        al, @(+0x5, y)
    1BF0:	E119      	ld         x, @0xFFE1 <register al>
    1BF1:	0016      	ld         al, @(0x0, x)
    1BF2:	03C4      	and        al, #0x3
    1BF3:	0427      	st         al, @(+0x4, y)
    1BF4:	4B00      	**prefx    0x4B
    1BF5:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1BF6:	B600      	**prefx    0xB6
    1BF7:	A030      	add        ah, #-0x4A60
    1BF8:	E415      	ld         al, @0xFFE4 <register uy>
    1BF9:	0134      	add        al, #+0x1
    1BFA:	FF23      	st         ah, @(-0x1, y)
    1BFB:	FF9F      	bsr        @(-0x1, y)
    1BFC:	0417      	ld         al, @(+0x4, y)
    1BFD:	0284      	cmp        al, #+0x2
    1BFE:	0DF0      	bne        +0xD <.LFB13+0xAF:0x1C0B[p]>
    1BFF:	4B00      	**prefx    0x4B
    1C00:	4F99      	tst        @0x4B4F <patch_pending>
    1C01:	04F4      	beq        +0x4 <.LFB13+0xA9:0x1C05[p]>
    1C02:	0917      	ld         al, @(+0x9, y)
    1C03:	0300      	**prefx    0x3
    1C04:	7F9C      	bsr        +0x37F <___libgatt_lib_db_4628:0x1F83[p]>
    1C05:	4B00      	**prefx    0x4B
    1C06:	5099      	tst        @0x4B50 <patch_rx_timing_report>
    1C07:	04F4      	beq        +0x4 <.LFB13+0xAF:0x1C0B[p]>
    1C08:	0917      	ld         al, @(+0x9, y)
    1C09:	FF00      	**prefx    0xFF
    1C0A:	A19C      	bsr        -0x15F <.LFB21:0x1AAB[p]>
    1C0B:	4B00      	**prefx    0x4B
    1C0C:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1C0D:	C300      	**prefx    0xC3
    1C0E:	5138      	add        x, #-0x3CAF
    1C0F:	0917      	ld         al, @(+0x9, y)
    1C10:	0A13      	ld         ah, @(+0xA, y)
    1C11:	FF2B      	st         x, @(-0x1, y)
    1C12:	FF9F      	bsr        @(-0x1, y)
    1C13:	0A9B      	tst        @(+0xA, y)
    1C14:	32E8      	bpl        +0x32 <.LFB13+0xEA:0x1C46[p]>
    1C15:	091B      	ld         x, @(+0x9, y)
    1C16:	9700      	**prefx    0x97
    1C17:	559A      	tst        @(-0x68AB, x)
    1C18:	2EF4      	beq        +0x2E <.LFB13+0xEA:0x1C46[p]>
    1C19:	0014      	ld         al, #+0x0
    1C1A:	0500      	**prefx    0x5
    1C1B:	179C      	bsr        +0x517 <___libgatt_lib_db_4640:0x2132[p]>
    1C1C:	4B00      	**prefx    0x4B
    1C1D:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1C1E:	D200      	**prefx    0xD2
    1C1F:	1E38      	add        x, #-0x2DE2
    1C20:	0917      	ld         al, @(+0x9, y)
    1C21:	E411      	ld         ah, @0xFFE4 <register uy>
    1C22:	FF2B      	st         x, @(-0x1, y)
    1C23:	FF9F      	bsr        @(-0x1, y)
    1C24:	4B00      	**prefx    0x4B
    1C25:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1C26:	D300      	**prefx    0xD3
    1C27:	DE30      	add        ah, #-0x2D22
    1C28:	2514      	ld         al, #+0x25
    1C29:	FF23      	st         ah, @(-0x1, y)
    1C2A:	FF9F      	bsr        @(-0x1, y)
    1C2B:	0827      	st         al, @(+0x8, y)
    1C2C:	4B00      	**prefx    0x4B
    1C2D:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1C2E:	D200      	**prefx    0xD2
    1C2F:	2630      	add        ah, #-0x2DDA
    1C30:	E415      	ld         al, @0xFFE4 <register uy>
    1C31:	FF23      	st         ah, @(-0x1, y)
    1C32:	FF9F      	bsr        @(-0x1, y)
    1C33:	0817      	ld         al, @(+0x8, y)
    1C34:	0100      	**prefx    0x1
    1C35:	CA84      	cmp        al, #+0xCA
    1C36:	10F0      	bne        +0x10 <.LFB13+0xEA:0x1C46[p]>
    1C37:	F100      	**prefx    0xF1
    1C38:	1215      	ld         al, @0xF112 <___libgatt_lib_db_1698>
    1C39:	04B4      	or         al, #+0x4
    1C3A:	F100      	**prefx    0xF1
    1C3B:	1225      	st         al, @0xF112 <___libgatt_lib_db_1698>
    1C3C:	0014      	ld         al, #+0x0
    1C3D:	0000      	**prefx    0x0
    1C3E:	0134      	add        al, #+0x1
    1C3F:	6484      	cmp        al, #+0x64
    1C40:	FDF0      	bne        -0x3 <.LFB13+0xE1:0x1C3D[p]>
    1C41:	F100      	**prefx    0xF1
    1C42:	1215      	ld         al, @0xF112 <___libgatt_lib_db_1698>
    1C43:	FBC4      	and        al, #0xFFFB
    1C44:	F100      	**prefx    0xF1
    1C45:	1225      	st         al, @0xF112 <___libgatt_lib_db_1698>
    1C46:	0C0F      	leave      #+0xC

0x00001C47 <.LFB16>:
    1C47:	060B      	enter      #+0x6
    1C48:	0327      	st         al, @(+0x3, y)
    1C49:	0423      	st         ah, @(+0x4, y)
    1C4A:	4B00      	**prefx    0x4B
    1C4B:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1C4C:	D200      	**prefx    0xD2
    1C4D:	1E38      	add        x, #-0x2DE2
    1C4E:	E411      	ld         ah, @0xFFE4 <register uy>
    1C4F:	0130      	add        ah, #+0x1
    1C50:	FF2B      	st         x, @(-0x1, y)
    1C51:	FF9F      	bsr        @(-0x1, y)
    1C52:	0413      	ld         ah, @(+0x4, y)
    1C53:	B7C0      	and        ah, #0xFFB7
    1C54:	0317      	ld         al, @(+0x3, y)
    1C55:	FF00      	**prefx    0xFF
    1C56:	069C      	bsr        -0xFA <.LFB13:0x1B5C[p]>
    1C57:	0417      	ld         al, @(+0x4, y)
    1C58:	08C4      	and        al, #0x8
    1C59:	0CF4      	beq        +0xC <.LFB16+0x1E:0x1C65[p]>
    1C5A:	031B      	ld         x, @(+0x3, y)
    1C5B:	9700      	**prefx    0x97
    1C5C:	559A      	tst        @(-0x68AB, x)
    1C5D:	08F4      	beq        +0x8 <.LFB16+0x1E:0x1C65[p]>
    1C5E:	E315      	ld         al, @0xFFE3 <register uxl>
    1C5F:	0500      	**prefx    0x5
    1C60:	D29C      	bsr        +0x4D2 <___libgatt_lib_db_4640:0x2132[p]>
    1C61:	0317      	ld         al, @(+0x3, y)
    1C62:	0810      	ld         ah, #+0x8
    1C63:	FF00      	**prefx    0xFF
    1C64:	F89C      	bsr        -0x108 <.LFB13:0x1B5C[p]>
    1C65:	0417      	ld         al, @(+0x4, y)
    1C66:	40C4      	and        al, #0x40
    1C67:	32F4      	beq        +0x32 <.LFB16+0x52:0x1C99[p]>
    1C68:	031B      	ld         x, @(+0x3, y)
    1C69:	9700      	**prefx    0x97
    1C6A:	5516      	ld         al, @(-0x68AB, x)
    1C6B:	0684      	cmp        al, #+0x6
    1C6C:	25F0      	bne        +0x25 <.LFB16+0x4A:0x1C91[p]>
    1C6D:	F600      	**prefx    0xF6
    1C6E:	6C19      	ld         x, @0xF66C <___libgatt_lib_db_1944>
    1C6F:	0317      	ld         al, @(+0x3, y)
    1C70:	02A0      	asl        #0x2
    1C71:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1C72:	0214      	ld         al, #+0x2
    1C73:	F8A1      	asl        @0xFFF8 <(scratchpad)>
    1C74:	E1C9      	and        x, @0xFFE1 <register al>
    1C75:	1CF4      	beq        +0x1C <.LFB16+0x4A:0x1C91[p]>
    1C76:	4B00      	**prefx    0x4B
    1C77:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1C78:	0227      	st         al, @(+0x2, y)
    1C79:	4B00      	**prefx    0x4B
    1C7A:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1C7B:	B900      	**prefx    0xB9
    1C7C:	AF30      	add        ah, #-0x4751
    1C7D:	0317      	ld         al, @(+0x3, y)
    1C7E:	FF23      	st         ah, @(-0x1, y)
    1C7F:	FF9F      	bsr        @(-0x1, y)
    1C80:	E111      	ld         ah, @0xFFE1 <register al>
    1C81:	0217      	ld         al, @(+0x2, y)
    1C82:	B700      	**prefx    0xB7
    1C83:	6234      	add        al, #-0x489E
    1C84:	0227      	st         al, @(+0x2, y)
    1C85:	2818      	ld         x, #+0x28
    1C86:	002B      	st         x, @(0x0, y)
    1C87:	0014      	ld         al, #+0x0
    1C88:	029F      	bsr        @(+0x2, y)
    1C89:	4B00      	**prefx    0x4B
    1C8A:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1C8B:	BD00      	**prefx    0xBD
    1C8C:	B630      	add        ah, #-0x434A
    1C8D:	0317      	ld         al, @(+0x3, y)
    1C8E:	FF23      	st         ah, @(-0x1, y)
    1C8F:	FF9F      	bsr        @(-0x1, y)
    1C90:	09E0      	bra        +0x9 <.LFB16+0x52:0x1C99[p]>
    1C91:	4B00      	**prefx    0x4B
    1C92:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1C93:	BE00      	**prefx    0xBE
    1C94:	FC38      	add        x, #-0x4204
    1C95:	0317      	ld         al, @(+0x3, y)
    1C96:	0010      	ld         ah, #+0x0
    1C97:	FF2B      	st         x, @(-0x1, y)
    1C98:	FF9F      	bsr        @(-0x1, y)
    1C99:	0417      	ld         al, @(+0x4, y)
    1C9A:	1000      	**prefx    0x10
    1C9B:	00C4      	and        al, #0x1000
    1C9C:	0FF4      	beq        +0xF <.LFB16+0x64:0x1CAB[p]>
    1C9D:	031B      	ld         x, @(+0x3, y)
    1C9E:	F600      	**prefx    0xF6
    1C9F:	3D16      	ld         al, @(-0x9C3, x)
    1CA0:	F000      	**prefx    0xF0
    1CA1:	FFC4      	and        al, #0xEFFF
    1CA2:	F600      	**prefx    0xF6
    1CA3:	3D26      	st         al, @(-0x9C3, x)
    1CA4:	4B00      	**prefx    0x4B
    1CA5:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1CA6:	E400      	**prefx    0xE4
    1CA7:	F630      	add        ah, #-0x1C0A
    1CA8:	0114      	ld         al, #+0x1
    1CA9:	FF23      	st         ah, @(-0x1, y)
    1CAA:	FF9F      	bsr        @(-0x1, y)
    1CAB:	4B00      	**prefx    0x4B
    1CAC:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1CAD:	D200      	**prefx    0xD2
    1CAE:	2630      	add        ah, #-0x2DDA
    1CAF:	E415      	ld         al, @0xFFE4 <register uy>
    1CB0:	0134      	add        al, #+0x1
    1CB1:	FF23      	st         ah, @(-0x1, y)
    1CB2:	FF9F      	bsr        @(-0x1, y)
    1CB3:	060F      	leave      #+0x6

0x00001CB4 <___libgatt_lib_db_4550>:
    1CB4:	F600      	**prefx    0xF6
    1CB5:	4C11      	ld         ah, @0xF64C <___libgatt_lib_db_1778>
    1CB6:	F600      	**prefx    0xF6
    1CB7:	4921      	st         ah, @0xF649 <___libgatt_lib_db_1779>
    1CB8:	0114      	ld         al, #+0x1
    1CB9:	8EE0      	bra        -0x72 <.LFB16:0x1C47[p]>

0x00001CBA <___libgatt_lib_db_4549>:
    1CBA:	F600      	**prefx    0xF6
    1CBB:	4B11      	ld         ah, @0xF64B <___libgatt_lib_db_1776>
    1CBC:	F600      	**prefx    0xF6
    1CBD:	4821      	st         ah, @0xF648 <___libgatt_lib_db_1777>
    1CBE:	0014      	ld         al, #+0x0
    1CBF:	88E0      	bra        -0x78 <.LFB16:0x1C47[p]>

0x00001CC0 <___libgatt_lib_db_4611>:
    1CC0:	210B      	enter      #+0x21
    1CC1:	1727      	st         al, @(+0x17, y)
    1CC2:	1823      	st         ah, @(+0x18, y)
    1CC3:	5790      	smult      #+0x57
    1CC4:	9700      	**prefx    0x97
    1CC5:	6B34      	add        al, #-0x6895
    1CC6:	1227      	st         al, @(+0x12, y)
    1CC7:	4B00      	**prefx    0x4B
    1CC8:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1CC9:	E500      	**prefx    0xE5
    1CCA:	A734      	add        al, #-0x1B59
    1CCB:	FF27      	st         al, @(-0x1, y)
    1CCC:	FF9F      	bsr        @(-0x1, y)
    1CCD:	0010      	ld         ah, #+0x0
    1CCE:	121B      	ld         x, @(+0x12, y)
    1CCF:	5522      	st         ah, @(+0x55, x)
    1CD0:	5622      	st         ah, @(+0x56, x)
    1CD1:	4B00      	**prefx    0x4B
    1CD2:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1CD3:	E000      	**prefx    0xE0
    1CD4:	1930      	add        ah, #-0x1FE7
    1CD5:	4C16      	ld         al, @(+0x4C, x)
    1CD6:	FF23      	st         ah, @(-0x1, y)
    1CD7:	FF9F      	bsr        @(-0x1, y)
    1CD8:	0010      	ld         ah, #+0x0
    1CD9:	121B      	ld         x, @(+0x12, y)
    1CDA:	4C22      	st         ah, @(+0x4C, x)
    1CDB:	4B00      	**prefx    0x4B
    1CDC:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1CDD:	BA00      	**prefx    0xBA
    1CDE:	9430      	add        ah, #-0x466C
    1CDF:	1717      	ld         al, @(+0x17, y)
    1CE0:	FF23      	st         ah, @(-0x1, y)
    1CE1:	FF9F      	bsr        @(-0x1, y)
    1CE2:	171B      	ld         x, @(+0x17, y)
    1CE3:	9700      	**prefx    0x97
    1CE4:	5516      	ld         al, @(-0x68AB, x)
    1CE5:	FF34      	add        al, #-0x1
    1CE6:	0184      	cmp        al, #+0x1
    1CE7:	102C      	bcz        +0x10 <___libgatt_lib_db_4611+0x37:0x1CF7[p]>
    1CE8:	9700      	**prefx    0x97
    1CE9:	5799      	tst        @0x9757 <le_device+0x2>
    1CEA:	0DF0      	bne        +0xD <___libgatt_lib_db_4611+0x37:0x1CF7[p]>
    1CEB:	4B00      	**prefx    0x4B
    1CEC:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1CED:	E000      	**prefx    0xE0
    1CEE:	1930      	add        ah, #-0x1FE7
    1CEF:	9700      	**prefx    0x97
    1CF0:	5915      	ld         al, @0x9759 <le_device+0x4>
    1CF1:	FF23      	st         ah, @(-0x1, y)
    1CF2:	FF9F      	bsr        @(-0x1, y)
    1CF3:	9700      	**prefx    0x97
    1CF4:	5518      	ld         x, #-0x68AB
    1CF5:	0010      	ld         ah, #+0x0
    1CF6:	0422      	st         ah, @(+0x4, x)
    1CF7:	4B00      	**prefx    0x4B
    1CF8:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1CF9:	D200      	**prefx    0xD2
    1CFA:	1E38      	add        x, #-0x2DE2
    1CFB:	1717      	ld         al, @(+0x17, y)
    1CFC:	1813      	ld         ah, @(+0x18, y)
    1CFD:	FF2B      	st         x, @(-0x1, y)
    1CFE:	FF9F      	bsr        @(-0x1, y)
    1CFF:	171B      	ld         x, @(+0x17, y)
    1D00:	9700      	**prefx    0x97
    1D01:	559A      	tst        @(-0x68AB, x)
    1D02:	0100      	**prefx    0x1
    1D03:	83F4      	beq        +0x83 <UART_RATE_1843K2+0x8:0x1D86[p]>
    1D04:	E415      	ld         al, @0xFFE4 <register uy>
    1D05:	0734      	add        al, #+0x7
    1D06:	0400      	**prefx    0x4
    1D07:	329C      	bsr        +0x432 <___libgatt_lib_db_4654:0x2139[p]>
    1D08:	0710      	ld         ah, #+0x7
    1D09:	F800      	**prefx    0xF8
    1D0A:	5621      	st         ah, @0xF856 <___libgatt_lib_db_3128>
    1D0B:	2814      	ld         al, #+0x28
    1D0C:	F000      	**prefx    0xF0
    1D0D:	5625      	st         al, @0xF056 <___libgatt_lib_db_1695>
    1D0E:	0018      	ld         x, #+0x0
    1D0F:	0E2B      	st         x, @(+0xE, y)
    1D10:	0F2B      	st         x, @(+0xF, y)
    1D11:	0D2B      	st         x, @(+0xD, y)
    1D12:	03E0      	bra        +0x3 <L0+0x12:0x1D15[p]>
    1D13:	0110      	ld         ah, #+0x1
    1D14:	0D23      	st         ah, @(+0xD, y)
    1D15:	FC00      	**prefx    0xFC
    1D16:	9311      	ld         ah, @0xFB93 <___libgatt_lib_db_3122>
    1D17:	E015      	ld         al, @0xFFE0 <register ah>
    1D18:	0100      	**prefx    0x1
    1D19:	80C4      	and        al, #0x80
    1D1A:	1FF4      	beq        +0x1F <L0+0x36:0x1D39[p]>
    1D1B:	E015      	ld         al, @0xFFE0 <register ah>
    1D1C:	07C4      	and        al, #0x7
    1D1D:	1CF4      	beq        +0x1C <L0+0x36:0x1D39[p]>
    1D1E:	0184      	cmp        al, #+0x1
    1D1F:	04F4      	beq        +0x4 <L0+0x20:0x1D23[p]>
    1D20:	0014      	ld         al, #+0x0
    1D21:	0D27      	st         al, @(+0xD, y)
    1D22:	F3E0      	bra        -0xD <L0+0x12:0x1D15[p]>
    1D23:	0D9B      	tst        @(+0xD, y)
    1D24:	10F4      	beq        +0x10 <L0+0x31:0x1D34[p]>
    1D25:	7000      	**prefx    0x70
    1D26:	FD9C      	bsr        +0x6FFD <TimeGet32:0x8D23[p]>
    1D27:	1A27      	st         al, @(+0x1A, y)
    1D28:	1923      	st         ah, @(+0x19, y)
    1D29:	1A17      	ld         al, @(+0x1A, y)
    1D2A:	1913      	ld         ah, @(+0x19, y)
    1D2B:	0F57      	sub        al, @(+0xF, y)
    1D2C:	0E63      	subc       ah, @(+0xE, y)
    1D2D:	1A27      	st         al, @(+0x1A, y)
    1D2E:	1923      	st         ah, @(+0x19, y)
    1D2F:	53F0      	bne        +0x53 <UART_RATE_1843K2+0x4:0x1D82[p]>
    1D30:	1A1B      	ld         x, @(+0x1A, y)
    1D31:	6588      	cmp        x, #+0x65
    1D32:	50F8      	bcc        +0x50 <UART_RATE_1843K2+0x4:0x1D82[p]>
    1D33:	E0E0      	bra        -0x20 <L0+0x10:0x1D13[p]>
    1D34:	7000      	**prefx    0x70
    1D35:	EE9C      	bsr        +0x6FEE <TimeGet32:0x8D23[p]>
    1D36:	0F27      	st         al, @(+0xF, y)
    1D37:	0E23      	st         ah, @(+0xE, y)
    1D38:	DBE0      	bra        -0x25 <L0+0x10:0x1D13[p]>
    1D39:	0014      	ld         al, #+0x0
    1D3A:	0127      	st         al, @(+0x1, y)
    1D3B:	0118      	ld         x, #+0x1
    1D3C:	022B      	st         x, @(+0x2, y)
    1D3D:	4B00      	**prefx    0x4B
    1D3E:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1D3F:	D200      	**prefx    0xD2
    1D40:	7D38      	add        x, #-0x2D83
    1D41:	E411      	ld         ah, @0xFFE4 <register uy>
    1D42:	0330      	add        ah, #+0x3
    1D43:	0023      	st         ah, @(0x0, y)
    1D44:	1A14      	ld         al, #+0x1A
    1D45:	FE30      	add        ah, #-0x2
    1D46:	FF2B      	st         x, @(-0x1, y)
    1D47:	FF9F      	bsr        @(-0x1, y)
    1D48:	4B00      	**prefx    0x4B
    1D49:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1D4A:	D200      	**prefx    0xD2
    1D4B:	7D38      	add        x, #-0x2D83
    1D4C:	E411      	ld         ah, @0xFFE4 <register uy>
    1D4D:	0530      	add        ah, #+0x5
    1D4E:	0023      	st         ah, @(0x0, y)
    1D4F:	1A14      	ld         al, #+0x1A
    1D50:	FD30      	add        ah, #-0x3
    1D51:	FF2B      	st         x, @(-0x1, y)
    1D52:	FF9F      	bsr        @(-0x1, y)
    1D53:	0113      	ld         ah, @(+0x1, y)
    1D54:	0C23      	st         ah, @(+0xC, y)
    1D55:	021B      	ld         x, @(+0x2, y)
    1D56:	E381      	cmp        ah, @0xFFE3 <register uxl>
    1D57:	09F0      	bne        +0x9 <L0+0x5D:0x1D60[p]>
    1D58:	0413      	ld         ah, @(+0x4, y)
    1D59:	0517      	ld         al, @(+0x5, y)
    1D5A:	1B27      	st         al, @(+0x1B, y)
    1D5B:	0387      	cmp        al, @(+0x3, y)
    1D5C:	04F0      	bne        +0x4 <L0+0x5D:0x1D60[p]>
    1D5D:	0617      	ld         al, @(+0x6, y)
    1D5E:	E085      	cmp        al, @0xFFE0 <register ah>
    1D5F:	07F4      	beq        +0x7 <L0+0x63:0x1D66[p]>
    1D60:	012B      	st         x, @(+0x1, y)
    1D61:	0513      	ld         ah, @(+0x5, y)
    1D62:	061B      	ld         x, @(+0x6, y)
    1D63:	042B      	st         x, @(+0x4, y)
    1D64:	0323      	st         ah, @(+0x3, y)
    1D65:	E3E0      	bra        -0x1D <L0+0x45:0x1D48[p]>
    1D66:	7000      	**prefx    0x70
    1D67:	BC9C      	bsr        +0x6FBC <TimeGet32:0x8D23[p]>
    1D68:	0800      	**prefx    0x8
    1D69:	FFC0      	and        ah, #0x7FF
    1D6A:	1D27      	st         al, @(+0x1D, y)
    1D6B:	1C23      	st         ah, @(+0x1C, y)
    1D6C:	0010      	ld         ah, #+0x0
    1D6D:	0514      	ld         al, #+0x5
    1D6E:	1D57      	sub        al, @(+0x1D, y)
    1D6F:	1C63      	subc       ah, @(+0x1C, y)
    1D70:	F925      	st         al, @0xFFF9 <(scratchpad)>
    1D71:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    1D72:	0010      	ld         ah, #+0x0
    1D73:	0C17      	ld         al, @(+0xC, y)
    1D74:	10A0      	asl        #0x10
    1D75:	1BB7      	or         al, @(+0x1B, y)
    1D76:	0800      	**prefx    0x8
    1D77:	FFC0      	and        ah, #0x7FF
    1D78:	1F27      	st         al, @(+0x1F, y)
    1D79:	1E23      	st         ah, @(+0x1E, y)
    1D7A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    1D7B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    1D7C:	1F37      	add        al, @(+0x1F, y)
    1D7D:	1E43      	addc       ah, @(+0x1E, y)
    1D7E:	E099      	tst        @0xFFE0 <register ah>
    1D7F:	03F0      	bne        +0x3 <UART_RATE_1843K2+0x4:0x1D82[p]>
    1D80:	7484      	cmp        al, #+0x74
    1D81:	94FC      	bcs        -0x6C <L0+0x12:0x1D15[p]>
    1D82:	E415      	ld         al, @0xFFE4 <register uy>
    1D83:	0734      	add        al, #+0x7
    1D84:	0400      	**prefx    0x4
    1D85:	C09C      	bsr        +0x3C0 <___libgatt_lib_db_4653:0x2145[p]>
    1D86:	4B00      	**prefx    0x4B
    1D87:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1D88:	D300      	**prefx    0xD3
    1D89:	C938      	add        x, #-0x2D37
    1D8A:	2314      	ld         al, #+0x23
    1D8B:	0010      	ld         ah, #+0x0
    1D8C:	FF2B      	st         x, @(-0x1, y)
    1D8D:	FF9F      	bsr        @(-0x1, y)
    1D8E:	4B00      	**prefx    0x4B
    1D8F:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1D90:	D300      	**prefx    0xD3
    1D91:	C938      	add        x, #-0x2D37
    1D92:	5F14      	ld         al, #+0x5F
    1D93:	0010      	ld         ah, #+0x0
    1D94:	FF2B      	st         x, @(-0x1, y)
    1D95:	FF9F      	bsr        @(-0x1, y)
    1D96:	1717      	ld         al, @(+0x17, y)
    1D97:	5790      	smult      #+0x57
    1D98:	0010      	ld         ah, #+0x0
    1D99:	E119      	ld         x, @0xFFE1 <register al>
    1D9A:	9700      	**prefx    0x97
    1D9B:	7722      	st         ah, @(-0x6889, x)
    1D9C:	121B      	ld         x, @(+0x12, y)
    1D9D:	4822      	st         ah, @(+0x48, x)
    1D9E:	F100      	**prefx    0xF1
    1D9F:	0315      	ld         al, @0xF103 <___libgatt_lib_db_1700>
    1DA0:	FEF0      	bne        -0x2 <UART_RATE_1843K2+0x20:0x1D9E[p]>
    1DA1:	0010      	ld         ah, #+0x0
    1DA2:	F100      	**prefx    0xF1
    1DA3:	F821      	st         ah, @0xF0F8 <___libgatt_lib_db_1699>
    1DA4:	4B00      	**prefx    0x4B
    1DA5:	5215      	ld         al, @0x4B52 <patch_pending_mode+0x1>
    1DA6:	0A27      	st         al, @(+0xA, y)
    1DA7:	4B00      	**prefx    0x4B
    1DA8:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1DA9:	D400      	**prefx    0xD4
    1DAA:	B630      	add        ah, #-0x2C4A
    1DAB:	1717      	ld         al, @(+0x17, y)
    1DAC:	FF23      	st         ah, @(-0x1, y)
    1DAD:	FF9F      	bsr        @(-0x1, y)
    1DAE:	E111      	ld         ah, @0xFFE1 <register al>
    1DAF:	0A17      	ld         al, @(+0xA, y)
    1DB0:	D400      	**prefx    0xD4
    1DB1:	AD34      	add        al, #-0x2C53
    1DB2:	0A27      	st         al, @(+0xA, y)
    1DB3:	1717      	ld         al, @(+0x17, y)
    1DB4:	0A9F      	bsr        @(+0xA, y)
    1DB5:	E415      	ld         al, @0xFFE4 <register uy>
    1DB6:	0734      	add        al, #+0x7
    1DB7:	0400      	**prefx    0x4
    1DB8:	819C      	bsr        +0x381 <___libgatt_lib_db_4654:0x2139[p]>
    1DB9:	F600      	**prefx    0xF6
    1DBA:	6A19      	ld         x, @0xF66A <___libgatt_lib_db_1870>
    1DBB:	0B2B      	st         x, @(+0xB, y)
    1DBC:	0710      	ld         ah, #+0x7
    1DBD:	F800      	**prefx    0xF8
    1DBE:	5621      	st         ah, @0xF856 <___libgatt_lib_db_3128>
    1DBF:	4614      	ld         al, #+0x46
    1DC0:	F000      	**prefx    0xF0
    1DC1:	5625      	st         al, @0xF056 <___libgatt_lib_db_1695>
    1DC2:	1818      	ld         x, #+0x18
    1DC3:	F600      	**prefx    0xF6
    1DC4:	3729      	st         x, @0xF637 <___libgatt_lib_db_1827>
    1DC5:	0010      	ld         ah, #+0x0
    1DC6:	F600      	**prefx    0xF6
    1DC7:	6A21      	st         ah, @0xF66A <___libgatt_lib_db_1870>
    1DC8:	171B      	ld         x, @(+0x17, y)
    1DC9:	9700      	**prefx    0x97
    1DCA:	559A      	tst        @(-0x68AB, x)
    1DCB:	16F4      	beq        +0x16 <UART_RATE_1843K2+0x63:0x1DE1[p]>
    1DCC:	F600      	**prefx    0xF6
    1DCD:	3411      	ld         ah, @0xF634 <___libgatt_lib_db_1765>
    1DCE:	0009      	**unsigned
    1DCF:	0CA4      	lsr        #0xC
    1DD0:	E099      	tst        @0xFFE0 <register ah>
    1DD1:	03F4      	beq        +0x3 <UART_RATE_1843K2+0x56:0x1DD4[p]>
    1DD2:	0480      	cmp        ah, #+0x4
    1DD3:	F9F0      	bne        -0x7 <UART_RATE_1843K2+0x4E:0x1DCC[p]>
    1DD4:	4B00      	**prefx    0x4B
    1DD5:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1DD6:	B900      	**prefx    0xB9
    1DD7:	4130      	add        ah, #-0x46BF
    1DD8:	1717      	ld         al, @(+0x17, y)
    1DD9:	FF23      	st         ah, @(-0x1, y)
    1DDA:	FF9F      	bsr        @(-0x1, y)
    1DDB:	0434      	add        al, #+0x4
    1DDC:	0040      	addc       ah, #+0x0
    1DDD:	E099      	tst        @0xFFE0 <register ah>
    1DDE:	03F0      	bne        +0x3 <UART_RATE_1843K2+0x63:0x1DE1[p]>
    1DDF:	0F84      	cmp        al, #+0xF
    1DE0:	ECFC      	bcs        -0x14 <UART_RATE_1843K2+0x4E:0x1DCC[p]>
    1DE1:	0B13      	ld         ah, @(+0xB, y)
    1DE2:	F600      	**prefx    0xF6
    1DE3:	6A21      	st         ah, @0xF66A <___libgatt_lib_db_1870>
    1DE4:	E415      	ld         al, @0xFFE4 <register uy>
    1DE5:	0734      	add        al, #+0x7
    1DE6:	0300      	**prefx    0x3
    1DE7:	5E9C      	bsr        +0x35E <___libgatt_lib_db_4653:0x2145[p]>
    1DE8:	0114      	ld         al, #+0x1
    1DE9:	17A3      	asl        @(+0x17, y)
    1DEA:	1627      	st         al, @(+0x16, y)
    1DEB:	F600      	**prefx    0xF6
    1DEC:	7A25      	st         al, @0xF67A <___libgatt_lib_db_1952>
    1DED:	0014      	ld         al, #+0x0
    1DEE:	F600      	**prefx    0xF6
    1DEF:	7A25      	st         al, @0xF67A <___libgatt_lib_db_1952>
    1DF0:	179B      	tst        @(+0x17, y)
    1DF1:	02F0      	bne        +0x2 <UART_RATE_1843K2+0x75:0x1DF3[p]>
    1DF2:	0114      	ld         al, #+0x1
    1DF3:	F600      	**prefx    0xF6
    1DF4:	3C25      	st         al, @0xF63C <___libgatt_lib_db_1754>
    1DF5:	4B00      	**prefx    0x4B
    1DF6:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1DF7:	D300      	**prefx    0xD3
    1DF8:	DE30      	add        ah, #-0x2D22
    1DF9:	6714      	ld         al, #+0x67
    1DFA:	FF23      	st         ah, @(-0x1, y)
    1DFB:	FF9F      	bsr        @(-0x1, y)
    1DFC:	1527      	st         al, @(+0x15, y)
    1DFD:	4B00      	**prefx    0x4B
    1DFE:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1DFF:	D300      	**prefx    0xD3
    1E00:	C938      	add        x, #-0x2D37
    1E01:	6714      	ld         al, #+0x67
    1E02:	0010      	ld         ah, #+0x0
    1E03:	FF2B      	st         x, @(-0x1, y)
    1E04:	FF9F      	bsr        @(-0x1, y)
    1E05:	0110      	ld         ah, #+0x1
    1E06:	F600      	**prefx    0xF6
    1E07:	6B21      	st         ah, @0xF66B <___libgatt_lib_db_1866>
    1E08:	0014      	ld         al, #+0x0
    1E09:	F600      	**prefx    0xF6
    1E0A:	6B25      	st         al, @0xF66B <___libgatt_lib_db_1866>
    1E0B:	6F00      	**prefx    0x6F
    1E0C:	179C      	bsr        +0x6F17 <TimeGet32:0x8D23[p]>
    1E0D:	1427      	st         al, @(+0x14, y)
    1E0E:	1323      	st         ah, @(+0x13, y)
    1E0F:	17E0      	bra        +0x17 <L0+0x17:0x1E26[p]>
    1E10:	6F00      	**prefx    0x6F
    1E11:	129C      	bsr        +0x6F12 <TimeGet32:0x8D23[p]>
    1E12:	1127      	st         al, @(+0x11, y)
    1E13:	1023      	st         ah, @(+0x10, y)
    1E14:	1117      	ld         al, @(+0x11, y)
    1E15:	1013      	ld         ah, @(+0x10, y)
    1E16:	1457      	sub        al, @(+0x14, y)
    1E17:	1363      	subc       ah, @(+0x13, y)
    1E18:	E099      	tst        @0xFFE0 <register ah>
    1E19:	03F0      	bne        +0x3 <L0+0xD:0x1E1C[p]>
    1E1A:	6584      	cmp        al, #+0x65
    1E1B:	0BFC      	bcs        +0xB <L0+0x17:0x1E26[p]>
    1E1C:	0318      	ld         x, #+0x3
    1E1D:	F100      	**prefx    0xF1
    1E1E:	F829      	st         x, @0xF0F8 <___libgatt_lib_db_1699>
    1E1F:	0010      	ld         ah, #+0x0
    1E20:	F100      	**prefx    0xF1
    1E21:	F821      	st         ah, @0xF0F8 <___libgatt_lib_db_1699>
    1E22:	111B      	ld         x, @(+0x11, y)
    1E23:	142B      	st         x, @(+0x14, y)
    1E24:	1017      	ld         al, @(+0x10, y)
    1E25:	1327      	st         al, @(+0x13, y)
    1E26:	F600      	**prefx    0xF6
    1E27:	2315      	ld         al, @0xF623 <___libgatt_lib_db_1980>
    1E28:	02C4      	and        al, #0x2
    1E29:	E7F0      	bne        -0x19 <L0+0x1:0x1E10[p]>
    1E2A:	F100      	**prefx    0xF1
    1E2B:	0315      	ld         al, @0xF103 <___libgatt_lib_db_1700>
    1E2C:	E4F0      	bne        -0x1C <L0+0x1:0x1E10[p]>
    1E2D:	161B      	ld         x, @(+0x16, y)
    1E2E:	F600      	**prefx    0xF6
    1E2F:	7A29      	st         x, @0xF67A <___libgatt_lib_db_1952>
    1E30:	0010      	ld         ah, #+0x0
    1E31:	F600      	**prefx    0xF6
    1E32:	7A21      	st         ah, @0xF67A <___libgatt_lib_db_1952>
    1E33:	0314      	ld         al, #+0x3
    1E34:	F100      	**prefx    0xF1
    1E35:	F825      	st         al, @0xF0F8 <___libgatt_lib_db_1699>
    1E36:	4B00      	**prefx    0x4B
    1E37:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1E38:	D300      	**prefx    0xD3
    1E39:	C938      	add        x, #-0x2D37
    1E3A:	6714      	ld         al, #+0x67
    1E3B:	1513      	ld         ah, @(+0x15, y)
    1E3C:	FF2B      	st         x, @(-0x1, y)
    1E3D:	FF9F      	bsr        @(-0x1, y)
    1E3E:	210F      	leave      #+0x21

0x00001E3F <___libgatt_lib_db_4544>:
    1E3F:	030B      	enter      #+0x3
    1E40:	0717      	ld         al, @(+0x7, y)
    1E41:	0127      	st         al, @(+0x1, y)
    1E42:	0217      	ld         al, @(+0x2, y)
    1E43:	BD00      	**prefx    0xBD
    1E44:	C084      	cmp        al, #-0x4340
    1E45:	1FF0      	bne        +0x1F <___libgatt_lib_db_4544+0x25:0x1E64[p]>
    1E46:	4B00      	**prefx    0x4B
    1E47:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1E48:	E500      	**prefx    0xE5
    1E49:	BE38      	add        x, #-0x1B42
    1E4A:	1D00      	**prefx    0x1D
    1E4B:	BA14      	ld         al, #+0x1CBA
    1E4C:	0027      	st         al, @(0x0, y)
    1E4D:	0B14      	ld         al, #+0xB
    1E4E:	0210      	ld         ah, #+0x2
    1E4F:	FF2B      	st         x, @(-0x1, y)
    1E50:	FF9F      	bsr        @(-0x1, y)
    1E51:	4B00      	**prefx    0x4B
    1E52:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1E53:	E500      	**prefx    0xE5
    1E54:	BE38      	add        x, #-0x1B42
    1E55:	1D00      	**prefx    0x1D
    1E56:	B414      	ld         al, #+0x1CB4
    1E57:	0027      	st         al, @(0x0, y)
    1E58:	0C14      	ld         al, #+0xC
    1E59:	0210      	ld         ah, #+0x2
    1E5A:	FF2B      	st         x, @(-0x1, y)
    1E5B:	FF9F      	bsr        @(-0x1, y)
    1E5C:	0117      	ld         al, @(+0x1, y)
    1E5D:	E411      	ld         ah, @0xFFE4 <register uy>
    1E5E:	0430      	add        ah, #+0x4
    1E5F:	FE00      	**prefx    0xFE
    1E60:	609C      	bsr        -0x1A0 <___libgatt_lib_db_4611:0x1CC0[p]>
    1E61:	BD00      	**prefx    0xBD
    1E62:	4914      	ld         al, #-0x42B7
    1E63:	0227      	st         al, @(+0x2, y)
    1E64:	030F      	leave      #+0x3

0x00001E65 <___libgatt_lib_db_4618>:
    1E65:	0F0B      	enter      #+0xF
    1E66:	3813      	ld         ah, @(+0x38, y)
    1E67:	0A23      	st         ah, @(+0xA, y)
    1E68:	3717      	ld         al, @(+0x37, y)
    1E69:	0D27      	st         al, @(+0xD, y)
    1E6A:	3B1B      	ld         x, @(+0x3B, y)
    1E6B:	092B      	st         x, @(+0x9, y)
    1E6C:	E315      	ld         al, @0xFFE3 <register uxl>
    1E6D:	5790      	smult      #+0x57
    1E6E:	9700      	**prefx    0x97
    1E6F:	6B34      	add        al, #-0x6895
    1E70:	0827      	st         al, @(+0x8, y)
    1E71:	E119      	ld         x, @0xFFE1 <register al>
    1E72:	0C12      	ld         ah, @(+0xC, x)
    1E73:	0100      	**prefx    0x1
    1E74:	02F4      	beq        +0x102 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1E75:	E015      	ld         al, @0xFFE0 <register ah>
    1E76:	FE34      	add        al, #-0x2
    1E77:	0484      	cmp        al, #+0x4
    1E78:	37F8      	bcc        +0x37 <___libgatt_lib_db_4618+0x4A:0x1EAF[p]>
    1E79:	0A17      	ld         al, @(+0xA, y)
    1E7A:	FB34      	add        al, #-0x5
    1E7B:	0184      	cmp        al, #+0x1
    1E7C:	0100      	**prefx    0x1
    1E7D:	F92C      	bcz        +0xF9 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1E7E:	0A13      	ld         ah, @(+0xA, y)
    1E7F:	0280      	cmp        ah, #+0x2
    1E80:	0100      	**prefx    0x1
    1E81:	F5F4      	beq        +0xF5 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1E82:	0D80      	cmp        ah, #+0xD
    1E83:	0100      	**prefx    0x1
    1E84:	F2F4      	beq        +0xF2 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1E85:	9700      	**prefx    0x97
    1E86:	5799      	tst        @0x9757 <le_device+0x2>
    1E87:	03F4      	beq        +0x3 <___libgatt_lib_db_4618+0x25:0x1E8A[p]>
    1E88:	0480      	cmp        ah, #+0x4
    1E89:	09F0      	bne        +0x9 <___libgatt_lib_db_4618+0x2D:0x1E92[p]>
    1E8A:	9700      	**prefx    0x97
    1E8B:	5799      	tst        @0x9757 <le_device+0x2>
    1E8C:	0100      	**prefx    0x1
    1E8D:	E9F0      	bne        +0xE9 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1E8E:	0A17      	ld         al, @(+0xA, y)
    1E8F:	0384      	cmp        al, #+0x3
    1E90:	0100      	**prefx    0x1
    1E91:	E5F4      	beq        +0xE5 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1E92:	4B00      	**prefx    0x4B
    1E93:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1E94:	0C2B      	st         x, @(+0xC, y)
    1E95:	4B00      	**prefx    0x4B
    1E96:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1E97:	B900      	**prefx    0xB9
    1E98:	AF30      	add        ah, #-0x4751
    1E99:	0917      	ld         al, @(+0x9, y)
    1E9A:	FF23      	st         ah, @(-0x1, y)
    1E9B:	FF9F      	bsr        @(-0x1, y)
    1E9C:	E111      	ld         ah, @0xFFE1 <register al>
    1E9D:	0C17      	ld         al, @(+0xC, y)
    1E9E:	B700      	**prefx    0xB7
    1E9F:	6234      	add        al, #-0x489E
    1EA0:	0C27      	st         al, @(+0xC, y)
    1EA1:	3D18      	ld         x, #+0x3D
    1EA2:	002B      	st         x, @(0x0, y)
    1EA3:	0014      	ld         al, #+0x0
    1EA4:	0C9F      	bsr        @(+0xC, y)
    1EA5:	4B00      	**prefx    0x4B
    1EA6:	5211      	ld         ah, @0x4B52 <patch_pending_mode+0x1>
    1EA7:	BD00      	**prefx    0xBD
    1EA8:	B630      	add        ah, #-0x434A
    1EA9:	0917      	ld         al, @(+0x9, y)
    1EAA:	FF23      	st         ah, @(-0x1, y)
    1EAB:	FF9F      	bsr        @(-0x1, y)
    1EAC:	410F      	leave      #+0x41
    1EAD:	0100      	**prefx    0x1
    1EAE:	C8E0      	bra        +0xC8 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1EAF:	0680      	cmp        ah, #+0x6
    1EB0:	0100      	**prefx    0x1
    1EB1:	C5F0      	bne        +0xC5 <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1EB2:	0A9B      	tst        @(+0xA, y)
    1EB3:	06F0      	bne        +0x6 <___libgatt_lib_db_4618+0x54:0x1EB9[p]>
    1EB4:	0D1B      	ld         x, @(+0xD, y)
    1EB5:	0A16      	ld         al, @(+0xA, x)
    1EB6:	08A0      	asl        #0x8
    1EB7:	09B6      	or         al, @(+0x9, x)
    1EB8:	09E0      	bra        +0x9 <___libgatt_lib_db_4618+0x5C:0x1EC1[p]>
    1EB9:	0A13      	ld         ah, @(+0xA, y)
    1EBA:	0180      	cmp        ah, #+0x1
    1EBB:	0100      	**prefx    0x1
    1EBC:	BAF0      	bne        +0xBA <___libgatt_lib_db_4618+0x111:0x1F76[p]>
    1EBD:	0D1B      	ld         x, @(+0xD, y)
    1EBE:	0616      	ld         al, @(+0x6, x)
    1EBF:	08A0      	asl        #0x8
    1EC0:	05B6      	or         al, @(+0x5, x)
    1EC1:	0727      	st         al, @(+0x7, y)
    1EC2:	3B14      	ld         al, #+0x3B
    1EC3:	0200      	**prefx    0x2
    1EC4:	5F9C      	bsr        +0x25F <___libgatt_lib_db_4641:0x2123[p]>
    1EC5:	0713      	ld         ah, @(+0x7, y)
    1EC6:	E151      	sub        ah, @0xFFE1 <register al>
    1EC7:	0623      	st         ah, @(+0x6, y)
    1EC8:	8000      	**prefx    0x80
    1EC9:	0080      	cmp        ah, #-0x8000
    1ECA:	0A2C      	bcz        +0xA <___libgatt_lib_db_4618+0x6F:0x1ED4[p]>
    1ECB:	4B00      	**prefx    0x4B
    1ECC:	5219      	ld         x, @0x4B52 <patch_pending_mode+0x1>
    1ECD:	BE00      	**prefx    0xBE
    1ECE:	FC38      	add        x, #-0x4204
    1ECF:	0917      	ld         al, @(+0x9, y)
    1ED0:	0010      	ld         ah, #+0x0
    1ED1:	FF2B      	st         x, @(-0x1, y)
    1ED2:	FF9F      	bsr        @(-0x1, y)
    1ED3:	410F      	leave      #+0x41
    1ED4:	0214      	ld         al, #+0x2
    1ED5:	0200      	**prefx    0x2
    1ED6:	4D9C      	bsr        +0x24D <___libgatt_lib_db_4641:0x2123[p]>
    1ED7:	F825      	st         al, @0xFFF8 <(scratchpad)>
    1ED8:	0613      	ld         ah, @(+0x6, y)
    1ED9:	0580      	cmp        ah, #+0x5
    1EDA:	03F8      	bcc        +0x3 <___libgatt_lib_db_4618+0x78:0x1EDD[p]>
    1EDB:	0014      	ld         al, #+0x0
    1EDC:	04E0      	bra        +0x4 <___libgatt_lib_db_4618+0x7B:0x1EE0[p]>
    1EDD:	F899      	tst        @0xFFF8 <(scratchpad)>
    1EDE:	02F4      	beq        +0x2 <___libgatt_lib_db_4618+0x7B:0x1EE0[p]>
    1EDF:	0114      	ld         al, #+0x1
    1EE0:	0B27      	st         al, @(+0xB, y)
    1EE1:	0A1B      	ld         x, @(+0xA, y)
    1EE2:	0338      	add        x, #+0x3
    1EE3:	0114      	ld         al, #+0x1
    1EE4:	E3A1      	asl        @0xFFE3 <register uxl>
    1EE5:	0527      	st         al, @(+0x5, y)
    1EE6:	0B9B      	tst        @(+0xB, y)
    1EE7:	14F4      	beq        +0x14 <___libgatt_lib_db_4618+0x96:0x1EFB[p]>
    1EE8:	08A0      	asl        #0x8
    1EE9:	E119      	ld         x, @0xFFE1 <register al>
    1EEA:	0114      	ld         al, #+0x1
    1EEB:	0AA3      	asl        @(+0xA, y)
    1EEC:	E1B9      	or         x, @0xFFE1 <register al>
    1EED:	0713      	ld         ah, @(+0x7, y)
    1EEE:	FD30      	add        ah, #-0x3
    1EEF:	0023      	st         ah, @(0x0, y)
    1EF0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    1EF1:	0100      	**prefx    0x1
    1EF2:	FF84      	cmp        al, #+0xFF
    1EF3:	032C      	bcz        +0x3 <___libgatt_lib_db_4618+0x91:0x1EF6[p]>
    1EF4:	0100      	**prefx    0x1
    1EF5:	FF14      	ld         al, #+0xFF
    1EF6:	0127      	st         al, @(+0x1, y)
    1EF7:	6014      	ld         al, #+0x60
    1EF8:	E311      	ld         ah, @0xFFE3 <register uxl>
    1EF9:	0200      	**prefx    0x2
    1EFA:	BE9C      	bsr        +0x1BE <___libgatt_lib_db_4645:0x20B8[p]>
    1EFB:	0A9B      	tst        @(+0xA, y)
    1EFC:	3AF0      	bne        +0x3A <___libgatt_lib_db_4618+0xD1:0x1F36[p]>
    1EFD:	0014      	ld         al, #+0x0
    1EFE:	0027      	st         al, @(0x0, y)
    1EFF:	0127      	st         al, @(+0x1, y)
    1F00:	3C14      	ld         al, #+0x3C
    1F01:	0D1B      	ld         x, @(+0xD, y)
    1F02:	0012      	ld         ah, @(0x0, x)
    1F03:	0200      	**prefx    0x2
    1F04:	B49C      	bsr        +0x1B4 <___libgatt_lib_db_4645:0x20B8[p]>
    1F05:	0D1B      	ld         x, @(+0xD, y)
    1F06:	0216      	ld         al, @(+0x2, x)
    1F07:	08A0      	asl        #0x8
    1F08:	E111      	ld         ah, @0xFFE1 <register al>
    1F09:	01B2      	or         ah, @(+0x1, x)
    1F0A:	0014      	ld         al, #+0x0
    1F0B:	0027      	st         al, @(0x0, y)
    1F0C:	0127      	st         al, @(+0x1, y)
    1F0D:	3D14      	ld         al, #+0x3D
    1F0E:	0200      	**prefx    0x2
    1F0F:	A99C      	bsr        +0x1A9 <___libgatt_lib_db_4645:0x20B8[p]>
    1F10:	0D1B      	ld         x, @(+0xD, y)
    1F11:	0416      	ld         al, @(+0x4, x)
    1F12:	08A0      	asl        #0x8
    1F13:	E111      	ld         ah, @0xFFE1 <register al>
    1F14:	03B2      	or         ah, @(+0x3, x)
    1F15:	0014      	ld         al, #+0x0
    1F16:	0027      	st         al, @(0x0, y)
    1F17:	0127      	st         al, @(+0x1, y)
    1F18:	3014      	ld         al, #+0x30
    1F19:	0200      	**prefx    0x2
    1F1A:	9E9C      	bsr        +0x19E <___libgatt_lib_db_4645:0x20B8[p]>
    1F1B:	0D1B      	ld         x, @(+0xD, y)
    1F1C:	0616      	ld         al, @(+0x6, x)
    1F1D:	08A0      	asl        #0x8
    1F1E:	E111      	ld         ah, @0xFFE1 <register al>
    1F1F:	05B2      	or         ah, @(+0x5, x)
    1F20:	0014      	ld         al, #+0x0
    1F21:	0027      	st         al, @(0x0, y)
    1F22:	0127      	st         al, @(+0x1, y)
    1F23:	3214      	ld         al, #+0x32
    1F24:	0200      	**prefx    0x2
    1F25:	939C      	bsr        +0x193 <___libgatt_lib_db_4645:0x20B8[p]>
    1F26:	0D1B      	ld         x, @(+0xD, y)
    1F27:	0816      	ld         al, @(+0x8, x)
    1F28:	08A0      	asl        #0x8
    1F29:	E111      	ld         ah, @0xFFE1 <register al>
    1F2A:	07B2      	or         ah, @(+0x7, x)
    1F2B:	0014      	ld         al, #+0x0
    1F2C:	0027      	st         al, @(0x0, y)
    1F2D:	0127      	st         al, @(+0x1, y)
    1F2E:	3114      	ld         al, #+0x31
    1F2F:	0200      	**prefx    0x2
    1F30:	889C      	bsr        +0x188 <___libgatt_lib_db_4645:0x20B8[p]>
    1F31:	0018      	ld         x, #+0x0
    1F32:	002B      	st         x, @(0x0, y)
    1F33:	012B      	st         x, @(+0x1, y)
    1F34:	2E14      	ld         al, #+0x2E
    1F35:	16E0      	bra        +0x16 <___libgatt_lib_db_4618+0xE6:0x1F4B[p]>
    1F36:	0510      	ld         ah, #+0x5
    1F37:	0023      	st         ah, @(0x0, y)
    1F38:	E415      	ld         al, @0xFFE4 <register uy>
    1F39:	0234      	add        al, #+0x2
    1F3A:	0D13      	ld         ah, @(+0xD, y)
    1F3B:	6D00      	**prefx    0x6D
    1F3C:	7A9C      	bsr        +0x6D7A <MemCopyPack:0x8CB6[p]>
    1F3D:	0417      	ld         al, @(+0x4, y)
    1F3E:	1FC4      	and        al, #0x1F
    1F3F:	0427      	st         al, @(+0x4, y)
    1F40:	031B      	ld         x, @(+0x3, y)
    1F41:	002B      	st         x, @(0x0, y)
    1F42:	0127      	st         al, @(+0x1, y)
    1F43:	1514      	ld         al, #+0x15
    1F44:	0213      	ld         ah, @(+0x2, y)
    1F45:	0100      	**prefx    0x1
    1F46:	729C      	bsr        +0x172 <___libgatt_lib_db_4645:0x20B8[p]>
    1F47:	0010      	ld         ah, #+0x0
    1F48:	0023      	st         ah, @(0x0, y)
    1F49:	0123      	st         ah, @(+0x1, y)
    1F4A:	2F14      	ld         al, #+0x2F
    1F4B:	0713      	ld         ah, @(+0x7, y)
    1F4C:	0100      	**prefx    0x1
    1F4D:	6B9C      	bsr        +0x16B <___libgatt_lib_db_4645:0x20B8[p]>
    1F4E:	0B9B      	tst        @(+0xB, y)
    1F4F:	23F0      	bne        +0x23 <___libgatt_lib_db_4618+0x10D:0x1F72[p]>
    1F50:	5F14      	ld         al, #+0x5F
    1F51:	0200      	**prefx    0x2
    1F52:	D19C      	bsr        +0x1D1 <___libgatt_lib_db_4641:0x2123[p]>
    1F53:	E111      	ld         ah, @0xFFE1 <register al>
    1F54:	05B3      	or         ah, @(+0x5, y)
    1F55:	0014      	ld         al, #+0x0
    1F56:	0027      	st         al, @(0x0, y)
    1F57:	0127      	st         al, @(+0x1, y)
    1F58:	5F14      	ld         al, #+0x5F
    1F59:	0100      	**prefx    0x1
    1F5A:	5E9C      	bsr        +0x15E <___libgatt_lib_db_4645:0x20B8[p]>
    1F5B:	3E14      	ld         al, #+0x3E
    1F5C:	0200      	**prefx    0x2
    1F5D:	B59C      	bsr        +0x1B5 <___libgatt_lib_db_4642:0x2112[p]>
    1F5E:	FA21      	st         ah, @0xFFFA <(scratchpad)>
    1F5F:	E119      	ld         x, @0xFFE1 <register al>
    1F60:	0114      	ld         al, #+0x1
    1F61:	0AA3      	asl        @(+0xA, y)
    1F62:	E111      	ld         ah, @0xFFE1 <register al>
    1F63:	10A4      	asr        #0x10
    1F64:	F925      	st         al, @0xFFF9 <(scratchpad)>
    1F65:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    1F66:	E315      	ld         al, @0xFFE3 <register uxl>
    1F67:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
    1F68:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    1F69:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
    1F6A:	E119      	ld         x, @0xFFE1 <register al>
    1F6B:	0023      	st         ah, @(0x0, y)
    1F6C:	0014      	ld         al, #+0x0
    1F6D:	0127      	st         al, @(+0x1, y)
    1F6E:	3E14      	ld         al, #+0x3E
    1F6F:	E311      	ld         ah, @0xFFE3 <register uxl>
    1F70:	0100      	**prefx    0x1
    1F71:	479C      	bsr        +0x147 <___libgatt_lib_db_4645:0x20B8[p]>
    1F72:	0A13      	ld         ah, @(+0xA, y)
    1F73:	081B      	ld         x, @(+0x8, y)
    1F74:	4B22      	st         ah, @(+0x4B, x)
    1F75:	410F      	leave      #+0x41
    1F76:	0F0F      	leave      #+0xF

0x00001F77 <___libgatt_lib_db_4629>:
    1F77:	020B      	enter      #+0x2
    1F78:	0617      	ld         al, @(+0x6, y)
    1F79:	0027      	st         al, @(0x0, y)
    1F7A:	E119      	ld         x, @0xFFE1 <register al>
    1F7B:	0016      	ld         al, @(0x0, x)
    1F7C:	0C84      	cmp        al, #+0xC
    1F7D:	05F0      	bne        +0x5 <___libgatt_lib_db_4629+0xB:0x1F82[p]>
    1F7E:	0400      	**prefx    0x4
    1F7F:	B09C      	bsr        +0x3B0 <IdGetLlVerBtle:0x232F[p]>
    1F80:	001B      	ld         x, @(0x0, y)
    1F81:	0126      	st         al, @(+0x1, x)
    1F82:	020F      	leave      #+0x2

0x00001F83 <___libgatt_lib_db_4628>:
    1F83:	020B      	enter      #+0x2
    1F84:	0027      	st         al, @(0x0, y)
    1F85:	0100      	**prefx    0x1
    1F86:	B400      	**prefx    0xB4
    1F87:	3D9C      	bsr        +0xB43D <___libgatt_lib_db_4148:0xD3C4[p]>
    1F88:	E111      	ld         ah, @0xFFE1 <register al>
    1F89:	4B00      	**prefx    0x4B
    1F8A:	4F31      	add        ah, @0x4B4F <patch_pending>
    1F8B:	7FC0      	and        ah, #0x7F
    1F8C:	0017      	ld         al, @(0x0, y)
    1F8D:	0100      	**prefx    0x1
    1F8E:	B400      	**prefx    0xB4
    1F8F:	3C9C      	bsr        +0xB43C <___libgatt_lib_db_4152:0xD3CB[p]>
    1F90:	0014      	ld         al, #+0x0
    1F91:	4B00      	**prefx    0x4B
    1F92:	4F25      	st         al, @0x4B4F <patch_pending>
    1F93:	020F      	leave      #+0x2

0x00001F94 <___libgatt_lib_db_4630>:
    1F94:	1C0B      	enter      #+0x1C
    1F95:	2E13      	ld         ah, @(+0x2E, y)
    1F96:	1323      	st         ah, @(+0x13, y)
    1F97:	2D17      	ld         al, @(+0x2D, y)
    1F98:	1927      	st         al, @(+0x19, y)
    1F99:	E015      	ld         al, @0xFFE0 <register ah>
    1F9A:	5790      	smult      #+0x57
    1F9B:	1A27      	st         al, @(+0x1A, y)
    1F9C:	9700      	**prefx    0x97
    1F9D:	6B34      	add        al, #-0x6895
    1F9E:	0D27      	st         al, @(+0xD, y)
    1F9F:	4B00      	**prefx    0x4B
    1FA0:	4F99      	tst        @0x4B4F <patch_pending>
    1FA1:	0100      	**prefx    0x1
    1FA2:	9AF0      	bne        +0x9A <DATA_RAM_START+0x3C:0x203C[p]>
    1FA3:	1913      	ld         ah, @(+0x19, y)
    1FA4:	0130      	add        ah, #+0x1
    1FA5:	1223      	st         ah, @(+0x12, y)
    1FA6:	191B      	ld         x, @(+0x19, y)
    1FA7:	0112      	ld         ah, @(+0x1, x)
    1FA8:	0009      	**unsigned
    1FA9:	08A4      	lsr        #0x8
    1FAA:	1FC0      	and        ah, #0x1F
    1FAB:	1123      	st         ah, @(+0x11, y)
    1FAC:	0230      	add        ah, #+0x2
    1FAD:	0A23      	st         ah, @(+0xA, y)
    1FAE:	1A1B      	ld         x, @(+0x1A, y)
    1FAF:	9700      	**prefx    0x97
    1FB0:	7716      	ld         al, @(-0x6889, x)
    1FB1:	0484      	cmp        al, #+0x4
    1FB2:	03FC      	bcs        +0x3 <___libgatt_lib_db_4630+0x21:0x1FB5[p]>
    1FB3:	1113      	ld         ah, @(+0x11, y)
    1FB4:	0630      	add        ah, #+0x6
    1FB5:	1023      	st         ah, @(+0x10, y)
    1FB6:	1317      	ld         al, @(+0x13, y)
    1FB7:	0100      	**prefx    0x1
    1FB8:	B400      	**prefx    0xB4
    1FB9:	049C      	bsr        +0xB404 <___libgatt_lib_db_4149:0xD3BD[p]>
    1FBA:	1827      	st         al, @(+0x18, y)
    1FBB:	1317      	ld         al, @(+0x13, y)
    1FBC:	0100      	**prefx    0x1
    1FBD:	B400      	**prefx    0xB4
    1FBE:	069C      	bsr        +0xB406 <___libgatt_lib_db_4148:0xD3C4[p]>
    1FBF:	181B      	ld         x, @(+0x18, y)
    1FC0:	E159      	sub        x, @0xFFE1 <register al>
    1FC1:	E311      	ld         ah, @0xFFE3 <register uxl>
    1FC2:	FF30      	add        ah, #-0x1
    1FC3:	03E8      	bpl        +0x3 <___libgatt_lib_db_4630+0x32:0x1FC6[p]>
    1FC4:	0100      	**prefx    0x1
    1FC5:	8030      	add        ah, #+0x80
    1FC6:	1083      	cmp        ah, @(+0x10, y)
    1FC7:	75E4      	blt        +0x75 <DATA_RAM_START+0x3C:0x203C[p]>
    1FC8:	7F80      	cmp        ah, #+0x7F
    1FC9:	47F0      	bne        +0x47 <DATA_RAM_START+0x10:0x2010[p]>
    1FCA:	9700      	**prefx    0x97
    1FCB:	5799      	tst        @0x9757 <le_device+0x2>
    1FCC:	44F0      	bne        +0x44 <DATA_RAM_START+0x10:0x2010[p]>
    1FCD:	0D1B      	ld         x, @(+0xD, y)
    1FCE:	129A      	tst        @(+0x12, x)
    1FCF:	41F4      	beq        +0x41 <DATA_RAM_START+0x10:0x2010[p]>
    1FD0:	1317      	ld         al, @(+0x13, y)
    1FD1:	E411      	ld         ah, @0xFFE4 <register uy>
    1FD2:	0230      	add        ah, #+0x2
    1FD3:	0100      	**prefx    0x1
    1FD4:	B200      	**prefx    0xB2
    1FD5:	499C      	bsr        +0xB249 <___libgatt_lib_db_4118:0xD21E[p]>
    1FD6:	2514      	ld         al, #+0x25
    1FD7:	0100      	**prefx    0x1
    1FD8:	4B9C      	bsr        +0x14B <___libgatt_lib_db_4641:0x2123[p]>
    1FD9:	0C27      	st         al, @(+0xC, y)
    1FDA:	E411      	ld         ah, @0xFFE4 <register uy>
    1FDB:	0630      	add        ah, #+0x6
    1FDC:	0023      	st         ah, @(0x0, y)
    1FDD:	3414      	ld         al, #+0x34
    1FDE:	FD30      	add        ah, #-0x3
    1FDF:	0100      	**prefx    0x1
    1FE0:	219C      	bsr        +0x121 <___libgatt_lib_db_4644:0x2101[p]>
    1FE1:	0717      	ld         al, @(+0x7, y)
    1FE2:	1727      	st         al, @(+0x17, y)
    1FE3:	061B      	ld         x, @(+0x6, y)
    1FE4:	162B      	st         x, @(+0x16, y)
    1FE5:	6D00      	**prefx    0x6D
    1FE6:	3D9C      	bsr        +0x6D3D <TimeGet32:0x8D23[p]>
    1FE7:	1527      	st         al, @(+0x15, y)
    1FE8:	1423      	st         ah, @(+0x14, y)
    1FE9:	E415      	ld         al, @0xFFE4 <register uy>
    1FEA:	0234      	add        al, #+0x2
    1FEB:	0100      	**prefx    0x1
    1FEC:	B200      	**prefx    0xB2
    1FED:	399C      	bsr        +0xB239 <___libgatt_lib_db_4123:0xD226[p]>
    1FEE:	0C13      	ld         ah, @(+0xC, y)
    1FEF:	0100      	**prefx    0x1
    1FF0:	CA80      	cmp        ah, #+0xCA
    1FF1:	1FF0      	bne        +0x1F <DATA_RAM_START+0x10:0x2010[p]>
    1FF2:	A000      	**prefx    0xA0
    1FF3:	C011      	ld         ah, @0x9FC0 <___libgatt_lib_db_4269+0x3C>
    1FF4:	10A4      	asr        #0x10
    1FF5:	F925      	st         al, @0xFFF9 <(scratchpad)>
    1FF6:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    1FF7:	1717      	ld         al, @(+0x17, y)
    1FF8:	1613      	ld         ah, @(+0x16, y)
    1FF9:	1557      	sub        al, @(+0x15, y)
    1FFA:	1463      	subc       ah, @(+0x14, y)
    1FFB:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    1FFC:	E089      	cmp        x, @0xFFE0 <register ah>
    1FFD:	0620      	bgt        +0x6 <DATA_RAM_START+0x3:0x2003[p]>
    1FFE:	E089      	cmp        x, @0xFFE0 <register ah>
    1FFF:	11F0      	bne        +0x11 <DATA_RAM_START+0x10:0x2010[p]>
    2000:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    2001:	E189      	cmp        x, @0xFFE1 <register al>
    2002:	0E2C      	bcz        +0xE <DATA_RAM_START+0x10:0x2010[p]>
    2003:	F600      	**prefx    0xF6
    2004:	3D15      	ld         al, @0xF63D <___libgatt_lib_db_1819>
    2005:	1000      	**prefx    0x10
    2006:	00B4      	or         al, #+0x1000
    2007:	F600      	**prefx    0xF6
    2008:	3D25      	st         al, @0xF63D <___libgatt_lib_db_1819>
    2009:	0410      	ld         ah, #+0x4
    200A:	2823      	st         ah, @(+0x28, y)
    200B:	C900      	**prefx    0xC9
    200C:	0814      	ld         al, #-0x36F8
    200D:	1B27      	st         al, @(+0x1B, y)
    200E:	0100      	**prefx    0x1
    200F:	A8E0      	bra        +0xA8 <DATA_RAM_START+0xB7:0x20B7[p]>
    2010:	121B      	ld         x, @(+0x12, y)
    2011:	009A      	tst        @(0x0, x)
    2012:	38E8      	bpl        +0x38 <DATA_RAM_START+0x4A:0x204A[p]>
    2013:	8D00      	**prefx    0x8D
    2014:	9E19      	ld         x, @0x8C9E <___libgatt_lib_db_4631>
    2015:	0010      	ld         ah, #+0x0
    2016:	0B23      	st         ah, @(+0xB, y)
    2017:	0B17      	ld         al, @(+0xB, y)
    2018:	0390      	smult      #+0x3
    2019:	F825      	st         al, @0xFFF8 <(scratchpad)>
    201A:	0016      	ld         al, @(0x0, x)
    201B:	0284      	cmp        al, #+0x2
    201C:	1AF0      	bne        +0x1A <DATA_RAM_START+0x36:0x2036[p]>
    201D:	1313      	ld         ah, @(+0x13, y)
    201E:	0022      	st         ah, @(0x0, x)
    201F:	8D00      	**prefx    0x8D
    2020:	9E11      	ld         ah, @0x8C9E <___libgatt_lib_db_4631>
    2021:	F831      	add        ah, @0xFFF8 <(scratchpad)>
    2022:	121B      	ld         x, @(+0x12, y)
    2023:	0116      	ld         al, @(+0x1, x)
    2024:	0100      	**prefx    0x1
    2025:	FFC4      	and        al, #0xFF
    2026:	E019      	ld         x, @0xFFE0 <register ah>
    2027:	0126      	st         al, @(+0x1, x)
    2028:	8D00      	**prefx    0x8D
    2029:	9E19      	ld         x, @0x8C9E <___libgatt_lib_db_4631>
    202A:	F839      	add        x, @0xFFF8 <(scratchpad)>
    202B:	092B      	st         x, @(+0x9, y)
    202C:	1317      	ld         al, @(+0x13, y)
    202D:	0100      	**prefx    0x1
    202E:	B400      	**prefx    0xB4
    202F:	959C      	bsr        +0xB395 <___libgatt_lib_db_4148:0xD3C4[p]>
    2030:	091B      	ld         x, @(+0x9, y)
    2031:	0226      	st         al, @(+0x2, x)
    2032:	0B13      	ld         ah, @(+0xB, y)
    2033:	0480      	cmp        ah, #+0x4
    2034:	11FC      	bcs        +0x11 <DATA_RAM_START+0x45:0x2045[p]>
    2035:	07E0      	bra        +0x7 <DATA_RAM_START+0x3C:0x203C[p]>
    2036:	0B17      	ld         al, @(+0xB, y)
    2037:	0134      	add        al, #+0x1
    2038:	0B27      	st         al, @(+0xB, y)
    2039:	0338      	add        x, #+0x3
    203A:	0484      	cmp        al, #+0x4
    203B:	DCF0      	bne        -0x24 <DATA_RAM_START+0x17:0x2017[p]>
    203C:	0110      	ld         ah, #+0x1
    203D:	1A1B      	ld         x, @(+0x1A, y)
    203E:	9800      	**prefx    0x98
    203F:	B222      	st         ah, @(-0x684E, x)
    2040:	0414      	ld         al, #+0x4
    2041:	2827      	st         al, @(+0x28, y)
    2042:	C900      	**prefx    0xC9
    2043:	0818      	ld         x, #-0x36F8
    2044:	72E0      	bra        +0x72 <DATA_RAM_START+0xB6:0x20B6[p]>
    2045:	191B      	ld         x, @(+0x19, y)
    2046:	0112      	ld         ah, @(+0x1, x)
    2047:	8000      	**prefx    0x80
    2048:	FFC0      	and        ah, #0x7FFF
    2049:	0122      	st         ah, @(+0x1, x)
    204A:	191B      	ld         x, @(+0x19, y)
    204B:	0112      	ld         ah, @(+0x1, x)
    204C:	03C0      	and        ah, #0x3
    204D:	0E23      	st         ah, @(+0xE, y)
    204E:	2823      	st         ah, @(+0x28, y)
    204F:	E415      	ld         al, @0xFFE4 <register uy>
    2050:	0434      	add        al, #+0x4
    2051:	0100      	**prefx    0x1
    2052:	9500      	**prefx    0x95
    2053:	449C      	bsr        +0x9544 <___libgatt_lib_db_3944:0xB597[p]>
    2054:	1317      	ld         al, @(+0x13, y)
    2055:	0100      	**prefx    0x1
    2056:	B400      	**prefx    0xB4
    2057:	A39C      	bsr        +0xB3A3 <___libgatt_lib_db_4150:0xD3FA[p]>
    2058:	0100      	**prefx    0x1
    2059:	9500      	**prefx    0x95
    205A:	5F9C      	bsr        +0x955F <___libgatt_lib_db_3947:0xB5B9[p]>
    205B:	0F27      	st         al, @(+0xF, y)
    205C:	1317      	ld         al, @(+0x13, y)
    205D:	0100      	**prefx    0x1
    205E:	B300      	**prefx    0xB3
    205F:	659C      	bsr        +0xB365 <___libgatt_lib_db_4148:0xD3C4[p]>
    2060:	0F37      	add        al, @(+0xF, y)
    2061:	0827      	st         al, @(+0x8, y)
    2062:	0A17      	ld         al, @(+0xA, y)
    2063:	0027      	st         al, @(0x0, y)
    2064:	0817      	ld         al, @(+0x8, y)
    2065:	1213      	ld         ah, @(+0x12, y)
    2066:	6C00      	**prefx    0x6C
    2067:	799C      	bsr        +0x6C79 <MemCopyUnPack:0x8CE0[p]>
    2068:	1A1B      	ld         x, @(+0x1A, y)
    2069:	9700      	**prefx    0x97
    206A:	7716      	ld         al, @(-0x6889, x)
    206B:	0384      	cmp        al, #+0x3
    206C:	0E2C      	bcz        +0xE <DATA_RAM_START+0x7A:0x207A[p]>
    206D:	0E13      	ld         ah, @(+0xE, y)
    206E:	0023      	st         ah, @(0x0, y)
    206F:	0014      	ld         al, #+0x0
    2070:	0127      	st         al, @(+0x1, y)
    2071:	1317      	ld         al, @(+0x13, y)
    2072:	1113      	ld         ah, @(+0x11, y)
    2073:	0100      	**prefx    0x1
    2074:	C600      	**prefx    0xC6
    2075:	399C      	bsr        +0xC639 <___libgatt_lib_db_4316:0xE6AE[p]>
    2076:	081B      	ld         x, @(+0x8, y)
    2077:	0116      	ld         al, @(+0x1, x)
    2078:	0434      	add        al, #+0x4
    2079:	0126      	st         al, @(+0x1, x)
    207A:	E415      	ld         al, @0xFFE4 <register uy>
    207B:	0434      	add        al, #+0x4
    207C:	0100      	**prefx    0x1
    207D:	9500      	**prefx    0x95
    207E:	229C      	bsr        +0x9522 <___libgatt_lib_db_3945:0xB5A0[p]>
    207F:	4B00      	**prefx    0x4B
    2080:	5199      	tst        @0x4B51 <patch_pending_mode>
    2081:	08F4      	beq        +0x8 <DATA_RAM_START+0x89:0x2089[p]>
    2082:	0E13      	ld         ah, @(+0xE, y)
    2083:	0380      	cmp        ah, #+0x3
    2084:	05F4      	beq        +0x5 <DATA_RAM_START+0x89:0x2089[p]>
    2085:	1017      	ld         al, @(+0x10, y)
    2086:	4B00      	**prefx    0x4B
    2087:	4F25      	st         al, @0x4B4F <patch_pending>
    2088:	2CE0      	bra        +0x2C <DATA_RAM_START+0xB4:0x20B4[p]>
    2089:	1317      	ld         al, @(+0x13, y)
    208A:	0100      	**prefx    0x1
    208B:	B300      	**prefx    0xB3
    208C:	389C      	bsr        +0xB338 <___libgatt_lib_db_4148:0xD3C4[p]>
    208D:	E111      	ld         ah, @0xFFE1 <register al>
    208E:	1033      	add        ah, @(+0x10, y)
    208F:	7FC0      	and        ah, #0x7F
    2090:	1317      	ld         al, @(+0x13, y)
    2091:	0100      	**prefx    0x1
    2092:	B300      	**prefx    0xB3
    2093:	389C      	bsr        +0xB338 <___libgatt_lib_db_4152:0xD3CB[p]>
    2094:	9700      	**prefx    0x97
    2095:	5799      	tst        @0x9757 <le_device+0x2>
    2096:	1EF4      	beq        +0x1E <DATA_RAM_START+0xB4:0x20B4[p]>
    2097:	1317      	ld         al, @(+0x13, y)
    2098:	E411      	ld         ah, @0xFFE4 <register uy>
    2099:	0230      	add        ah, #+0x2
    209A:	0100      	**prefx    0x1
    209B:	B200      	**prefx    0xB2
    209C:	829C      	bsr        +0xB182 <___libgatt_lib_db_4118:0xD21E[p]>
    209D:	E419      	ld         x, @0xFFE4 <register uy>
    209E:	0638      	add        x, #+0x6
    209F:	002B      	st         x, @(0x0, y)
    20A0:	3814      	ld         al, #+0x38
    20A1:	E411      	ld         ah, @0xFFE4 <register uy>
    20A2:	0330      	add        ah, #+0x3
    20A3:	0100      	**prefx    0x1
    20A4:	B200      	**prefx    0xB2
    20A5:	D89C      	bsr        +0xB1D8 <___libgatt_lib_db_4122:0xD27D[p]>
    20A6:	E415      	ld         al, @0xFFE4 <register uy>
    20A7:	0234      	add        al, #+0x2
    20A8:	0100      	**prefx    0x1
    20A9:	B100      	**prefx    0xB1
    20AA:	7C9C      	bsr        +0xB17C <___libgatt_lib_db_4123:0xD226[p]>
    20AB:	0613      	ld         ah, @(+0x6, y)
    20AC:	0717      	ld         al, @(+0x7, y)
    20AD:	0127      	st         al, @(+0x1, y)
    20AE:	0023      	st         ah, @(0x0, y)
    20AF:	8C00      	**prefx    0x8C
    20B0:	9614      	ld         al, #-0x746A
    20B1:	0313      	ld         ah, @(+0x3, y)
    20B2:	F900      	**prefx    0xF9
    20B3:	F79C      	bsr        -0x709 <___libgatt_lib_db_4610:0x19AA[p]>
    20B4:	C900      	**prefx    0xC9
    20B5:	F618      	ld         x, #-0x370A
    20B6:	1B2B      	st         x, @(+0x1B, y)
    20B7:	1C0F      	leave      #+0x1C

0x000020B8 <___libgatt_lib_db_4645>:
    20B8:	050B      	enter      #+0x5
    20B9:	0027      	st         al, @(0x0, y)
    20BA:	0123      	st         ah, @(+0x1, y)
    20BB:	0517      	ld         al, @(+0x5, y)
    20BC:	0227      	st         al, @(+0x2, y)
    20BD:	0617      	ld         al, @(+0x6, y)
    20BE:	0327      	st         al, @(+0x3, y)
    20BF:	0100      	**prefx    0x1
    20C0:	C400      	**prefx    0xC4
    20C1:	E69C      	bsr        +0xC3E6 <___libgatt_lib_db_4276:0xE4A7[p]>
    20C2:	0017      	ld         al, @(0x0, y)
    20C3:	F600      	**prefx    0xF6
    20C4:	2C25      	st         al, @0xF62C <___libgatt_lib_db_1756>
    20C5:	0117      	ld         al, @(+0x1, y)
    20C6:	F600      	**prefx    0xF6
    20C7:	2D25      	st         al, @0xF62D <___libgatt_lib_db_1760>
    20C8:	0217      	ld         al, @(+0x2, y)
    20C9:	F600      	**prefx    0xF6
    20CA:	2E25      	st         al, @0xF62E <___libgatt_lib_db_1761>
    20CB:	0317      	ld         al, @(+0x3, y)
    20CC:	F600      	**prefx    0xF6
    20CD:	2F25      	st         al, @0xF62F <___libgatt_lib_db_1762>
    20CE:	0114      	ld         al, #+0x1
    20CF:	F600      	**prefx    0xF6
    20D0:	2B25      	st         al, @0xF62B <___libgatt_lib_db_1763>
    20D1:	F600      	**prefx    0xF6
    20D2:	2A11      	ld         ah, @0xF62A <___libgatt_lib_db_1755>
    20D3:	F600      	**prefx    0xF6
    20D4:	2A15      	ld         al, @0xF62A <___libgatt_lib_db_1755>
    20D5:	E0B5      	or         al, @0xFFE0 <register ah>
    20D6:	FBF4      	beq        -0x5 <___libgatt_lib_db_4645+0x19:0x20D1[p]>
    20D7:	0014      	ld         al, #+0x0
    20D8:	F600      	**prefx    0xF6
    20D9:	2B25      	st         al, @0xF62B <___libgatt_lib_db_1763>
    20DA:	041B      	ld         x, @(+0x4, y)
    20DB:	053C      	add        y, #+0x5
    20DC:	0100      	**prefx    0x1
    20DD:	C400      	**prefx    0xC4
    20DE:	D2E0      	bra        +0xC3D2 <___libgatt_lib_db_4283:0xE4B0[p]>

0x000020DF <___libgatt_lib_db_4639>:
    20DF:	060B      	enter      #+0x6
    20E0:	0427      	st         al, @(+0x4, y)
    20E1:	E415      	ld         al, @0xFFE4 <register uy>
    20E2:	579C      	bsr        +0x57 <___libgatt_lib_db_4654:0x2139[p]>
    20E3:	0714      	ld         al, #+0x7
    20E4:	F800      	**prefx    0xF8
    20E5:	5625      	st         al, @0xF856 <___libgatt_lib_db_3128>
    20E6:	4618      	ld         x, #+0x46
    20E7:	F000      	**prefx    0xF0
    20E8:	5629      	st         x, @0xF056 <___libgatt_lib_db_1695>
    20E9:	0417      	ld         al, @(+0x4, y)
    20EA:	03A0      	asl        #0x3
    20EB:	F600      	**prefx    0xF6
    20EC:	3725      	st         al, @0xF637 <___libgatt_lib_db_1827>
    20ED:	F600      	**prefx    0xF6
    20EE:	3415      	ld         al, @0xF634 <___libgatt_lib_db_1765>
    20EF:	40C4      	and        al, #0x40
    20F0:	08F0      	bne        +0x8 <___libgatt_lib_db_4639+0x19:0x20F8[p]>
    20F1:	F600      	**prefx    0xF6
    20F2:	3315      	ld         al, @0xF633 <___libgatt_lib_db_1764>
    20F3:	0018      	ld         x, #+0x0
    20F4:	032B      	st         x, @(+0x3, y)
    20F5:	0100      	**prefx    0x1
    20F6:	FFC4      	and        al, #0xFF
    20F7:	03F0      	bne        +0x3 <___libgatt_lib_db_4639+0x1B:0x20FA[p]>
    20F8:	0114      	ld         al, #+0x1
    20F9:	0327      	st         al, @(+0x3, y)
    20FA:	E415      	ld         al, @0xFFE4 <register uy>
    20FB:	4A9C      	bsr        +0x4A <___libgatt_lib_db_4653:0x2145[p]>
    20FC:	0317      	ld         al, @(+0x3, y)
    20FD:	060F      	leave      #+0x6

0x000020FE <.LFB4>:
    20FE:	F600      	**prefx    0xF6
    20FF:	3C15      	ld         al, @0xF63C <___libgatt_lib_db_1754>
    2100:	DFE0      	bra        -0x21 <___libgatt_lib_db_4639:0x20DF[p]>

0x00002101 <___libgatt_lib_db_4644>:
    2101:	040B      	enter      #+0x4
    2102:	0127      	st         al, @(+0x1, y)
    2103:	0223      	st         ah, @(+0x2, y)
    2104:	FA9C      	bsr        -0x6 <.LFB4:0x20FE[p]>
    2105:	E199      	tst        @0xFFE1 <register al>
    2106:	FEF4      	beq        -0x2 <___libgatt_lib_db_4644+0x3:0x2104[p]>
    2107:	0417      	ld         al, @(+0x4, y)
    2108:	0027      	st         al, @(0x0, y)
    2109:	0117      	ld         al, @(+0x1, y)
    210A:	0213      	ld         ah, @(+0x2, y)
    210B:	0100      	**prefx    0x1
    210C:	B100      	**prefx    0xB1
    210D:	709C      	bsr        +0xB170 <___libgatt_lib_db_4122:0xD27D[p]>
    210E:	F09C      	bsr        -0x10 <.LFB4:0x20FE[p]>
    210F:	E199      	tst        @0xFFE1 <register al>
    2110:	F4F4      	beq        -0xC <___libgatt_lib_db_4644+0x3:0x2104[p]>
    2111:	040F      	leave      #+0x4

0x00002112 <___libgatt_lib_db_4642>:
    2112:	040B      	enter      #+0x4
    2113:	0027      	st         al, @(0x0, y)
    2114:	EA9C      	bsr        -0x16 <.LFB4:0x20FE[p]>
    2115:	E199      	tst        @0xFFE1 <register al>
    2116:	FEF4      	beq        -0x2 <___libgatt_lib_db_4642+0x2:0x2114[p]>
    2117:	0017      	ld         al, @(0x0, y)
    2118:	0100      	**prefx    0x1
    2119:	B200      	**prefx    0xB2
    211A:	9A9C      	bsr        +0xB19A <___libgatt_lib_db_4120:0xD2B4[p]>
    211B:	0227      	st         al, @(+0x2, y)
    211C:	0123      	st         ah, @(+0x1, y)
    211D:	E19C      	bsr        -0x1F <.LFB4:0x20FE[p]>
    211E:	E199      	tst        @0xFFE1 <register al>
    211F:	F5F4      	beq        -0xB <___libgatt_lib_db_4642+0x2:0x2114[p]>
    2120:	0217      	ld         al, @(+0x2, y)
    2121:	0113      	ld         ah, @(+0x1, y)
    2122:	040F      	leave      #+0x4

0x00002123 <___libgatt_lib_db_4641>:
    2123:	030B      	enter      #+0x3
    2124:	0127      	st         al, @(+0x1, y)
    2125:	D99C      	bsr        -0x27 <.LFB4:0x20FE[p]>
    2126:	E199      	tst        @0xFFE1 <register al>
    2127:	FEF4      	beq        -0x2 <___libgatt_lib_db_4641+0x2:0x2125[p]>
    2128:	0117      	ld         al, @(+0x1, y)
    2129:	0100      	**prefx    0x1
    212A:	B200      	**prefx    0xB2
    212B:	B39C      	bsr        +0xB1B3 <___libgatt_lib_db_4119:0xD2DE[p]>
    212C:	0027      	st         al, @(0x0, y)
    212D:	D19C      	bsr        -0x2F <.LFB4:0x20FE[p]>
    212E:	E199      	tst        @0xFFE1 <register al>
    212F:	F6F4      	beq        -0xA <___libgatt_lib_db_4641+0x2:0x2125[p]>
    2130:	0017      	ld         al, @(0x0, y)
    2131:	030F      	leave      #+0x3

0x00002132 <___libgatt_lib_db_4640>:
    2132:	020B      	enter      #+0x2
    2133:	0027      	st         al, @(0x0, y)
    2134:	0017      	ld         al, @(0x0, y)
    2135:	AA9C      	bsr        -0x56 <___libgatt_lib_db_4639:0x20DF[p]>
    2136:	E199      	tst        @0xFFE1 <register al>
    2137:	FDF4      	beq        -0x3 <___libgatt_lib_db_4640+0x2:0x2134[p]>
    2138:	020F      	leave      #+0x2

0x00002139 <___libgatt_lib_db_4654>:
    2139:	010B      	enter      #+0x1
    213A:	E119      	ld         x, @0xFFE1 <register al>
    213B:	F800      	**prefx    0xF8
    213C:	5615      	ld         al, @0xF856 <___libgatt_lib_db_3128>
    213D:	0026      	st         al, @(0x0, x)
    213E:	F000      	**prefx    0xF0
    213F:	5615      	ld         al, @0xF056 <___libgatt_lib_db_1695>
    2140:	0126      	st         al, @(+0x1, x)
    2141:	F600      	**prefx    0xF6
    2142:	3715      	ld         al, @0xF637 <___libgatt_lib_db_1827>
    2143:	0226      	st         al, @(+0x2, x)
    2144:	010F      	leave      #+0x1

0x00002145 <___libgatt_lib_db_4653>:
    2145:	010B      	enter      #+0x1
    2146:	E119      	ld         x, @0xFFE1 <register al>
    2147:	0016      	ld         al, @(0x0, x)
    2148:	F800      	**prefx    0xF8
    2149:	5625      	st         al, @0xF856 <___libgatt_lib_db_3128>
    214A:	0116      	ld         al, @(+0x1, x)
    214B:	F000      	**prefx    0xF0
    214C:	5625      	st         al, @0xF056 <___libgatt_lib_db_1695>
    214D:	0216      	ld         al, @(+0x2, x)
    214E:	F600      	**prefx    0xF6
    214F:	3725      	st         al, @0xF637 <___libgatt_lib_db_1827>
    2150:	010F      	leave      #+0x1

0x00002151 <___libgatt_lib_db_4668>:
    2151:	010B      	enter      #+0x1
    2152:	E315      	ld         al, @0xFFE3 <register uxl>
    2153:	E000      	**prefx    0xE0
    2154:	6084      	cmp        al, #-0x1FA0
    2155:	1FF0      	bne        +0x1F <___libgatt_lib_db_4668+0x23:0x2174[p]>
    2156:	0917      	ld         al, @(+0x9, y)
    2157:	E100      	**prefx    0xE1
    2158:	EA84      	cmp        al, #-0x1F16
    2159:	1BF0      	bne        +0x1B <___libgatt_lib_db_4668+0x23:0x2174[p]>
    215A:	0B13      	ld         ah, @(+0xB, y)
    215B:	4B00      	**prefx    0x4B
    215C:	5315      	ld         al, @0x4B53 <patch_pending_mode+0x2>
    215D:	9300      	**prefx    0x93
    215E:	A634      	add        al, #-0x6D5A
    215F:	E085      	cmp        al, @0xFFE0 <register ah>
    2160:	14F0      	bne        +0x14 <___libgatt_lib_db_4668+0x23:0x2174[p]>
    2161:	8D00      	**prefx    0x8D
    2162:	9F15      	ld         al, @0x8C9F <___libgatt_lib_db_4670>
    2163:	07F4      	beq        +0x7 <___libgatt_lib_db_4668+0x19:0x216A[p]>
    2164:	0009      	**unsigned
    2165:	2700      	**prefx    0x27
    2166:	1090      	umult      #0x2710
    2167:	0827      	st         al, @(+0x8, y)
    2168:	0723      	st         ah, @(+0x7, y)
    2169:	0BE0      	bra        +0xB <___libgatt_lib_db_4668+0x23:0x2174[p]>
    216A:	4B00      	**prefx    0x4B
    216B:	5311      	ld         ah, @0x4B53 <patch_pending_mode+0x2>
    216C:	E000      	**prefx    0xE0
    216D:	1930      	add        ah, #-0x1FE7
    216E:	9400      	**prefx    0x94
    216F:	7015      	ld         al, @0x9470 <tid_con_param_update>
    2170:	FF23      	st         ah, @(-0x1, y)
    2171:	FF9F      	bsr        @(-0x1, y)
    2172:	0014      	ld         al, #+0x0
    2173:	0F0F      	leave      #+0xF
    2174:	010F      	leave      #+0x1

0x00002175 <ram_app_init>:
    2175:	020B      	enter      #+0x2
    2176:	4100      	**prefx    0x41
    2177:	D214      	ld         al, #+0x40D2
    2178:	0027      	st         al, @(0x0, y)
    2179:	4B00      	**prefx    0x4B
    217A:	C914      	ld         al, #+0x4AC9
    217B:	0010      	ld         ah, #+0x0
    217C:	6C00      	**prefx    0x6C
    217D:	909C      	bsr        +0x6B90 <MemSet:0x8D0D[p]>
    217E:	0700      	**prefx    0x7
    217F:	C214      	ld         al, #+0x6C2
    2180:	0100      	**prefx    0x1
    2181:	C600      	**prefx    0xC6
    2182:	079C      	bsr        +0xC607 <___libgatt_lib_db_4323:0xE789[p]>
    2183:	0800      	**prefx    0x8
    2184:	AE14      	ld         al, #+0x7AE
    2185:	0100      	**prefx    0x1
    2186:	C600      	**prefx    0xC6
    2187:	059C      	bsr        +0xC605 <___libgatt_lib_db_4322:0xE78C[p]>
    2188:	0800      	**prefx    0x8
    2189:	9B14      	ld         al, #+0x79B
    218A:	0100      	**prefx    0x1
    218B:	C600      	**prefx    0xC6
    218C:	039C      	bsr        +0xC603 <___libgatt_lib_db_4324:0xE78F[p]>
    218D:	2200      	**prefx    0x22
    218E:	A614      	ld         al, #+0x21A6
    218F:	0100      	**prefx    0x1
    2190:	C800      	**prefx    0xC8
    2191:	E59C      	bsr        +0xC7E5 <___libgatt_lib_db_4366:0xE976[p]>
    2192:	0100      	**prefx    0x1
    2193:	D700      	**prefx    0xD7
    2194:	FF9C      	bsr        +0xD6FF <IdGetRomBuild:0xF893[p]>
    2195:	0200      	**prefx    0x2
    2196:	FB84      	cmp        al, #+0x1FB
    2197:	05F4      	beq        +0x5 <ram_app_init+0x27:0x219C[p]>
    2198:	1D14      	ld         al, #+0x1D
    2199:	0100      	**prefx    0x1
    219A:	C700      	**prefx    0xC7
    219B:	7F9C      	bsr        +0xC77F <fault:0xE91A[p]>
    219C:	4B00      	**prefx    0x4B
    219D:	8115      	ld         al, @0x4A81 <ram_build_identifier_integer>
    219E:	0100      	**prefx    0x1
    219F:	D700      	**prefx    0xD7
    21A0:	F09C      	bsr        +0xD6F0 <___libgatt_lib_db_4492:0xF890[p]>
    21A1:	0D00      	**prefx    0xD
    21A2:	9014      	ld         al, #+0xC90
    21A3:	7300      	**prefx    0x73
    21A4:	169C      	bsr        +0x7316 <installAppProcessLmEvent:0x94BA[p]>
    21A5:	020F      	leave      #+0x2

0x000021A6 <___libgatt_lib_db_4364>:
    21A6:	1114      	ld         al, #+0x11
    21A7:	F700      	**prefx    0xF7
    21A8:	F525      	st         al, @0xF6F5 <___libgatt_lib_db_1861>
    21A9:	5200      	**prefx    0x52
    21AA:	D714      	ld         al, #+0x51D7
    21AB:	F600      	**prefx    0xF6
    21AC:	3525      	st         al, @0xF635 <___libgatt_lib_db_1862>
    21AD:	00E2      	bra        0x0, x

0x000021AE <PioCtrlrStart>:
    21AE:	0114      	ld         al, #+0x1
    21AF:	F600      	**prefx    0xF6
    21B0:	7F25      	st         al, @0xF67F <PioSetAnaMonClk>
    21B1:	00E2      	bra        0x0, x

0x000021B2 <PioCtrlrStop>:
    21B2:	0014      	ld         al, #+0x0
    21B3:	F600      	**prefx    0xF6
    21B4:	7F25      	st         al, @0xF67F <PioSetAnaMonClk>
    21B5:	00E2      	bra        0x0, x

0x000021B6 <PioCtrlrClock>:
    21B6:	E199      	tst        @0xFFE1 <register al>
    21B7:	05F4      	beq        +0x5 <PioCtrlrClock+0x6:0x21BC[p]>
    21B8:	FB00      	**prefx    0xFB
    21B9:	8E15      	ld         al, @0xFA8E <___libgatt_lib_db_2428>
    21BA:	08B4      	or         al, #+0x8
    21BB:	04E0      	bra        +0x4 <L0+0x1:0x21BF[p]>
    21BC:	FB00      	**prefx    0xFB
    21BD:	8E15      	ld         al, @0xFA8E <___libgatt_lib_db_2428>
    21BE:	F7C4      	and        al, #0xFFF7
    21BF:	FB00      	**prefx    0xFB
    21C0:	8E25      	st         al, @0xFA8E <___libgatt_lib_db_2428>
    21C1:	00E2      	bra        0x0, x

0x000021C2 <___libgatt_lib_db_4368>:
    21C2:	040B      	enter      #+0x4
    21C3:	E415      	ld         al, @0xFFE4 <register uy>
    21C4:	6B00      	**prefx    0x6B
    21C5:	659C      	bsr        +0x6B65 <TimeGet48:0x8D2A[p]>
    21C6:	0227      	st         al, @(+0x2, y)
    21C7:	0123      	st         ah, @(+0x1, y)
    21C8:	FB00      	**prefx    0xFB
    21C9:	8E15      	ld         al, @0xFA8E <___libgatt_lib_db_2428>
    21CA:	08C4      	and        al, #0x8
    21CB:	33F0      	bne        +0x33 <___libgatt_lib_db_4368+0x3C:0x21FE[p]>
    21CC:	0013      	ld         ah, @(0x0, y)
    21CD:	FA21      	st         ah, @0xFFFA <(scratchpad)>
    21CE:	4B00      	**prefx    0x4B
    21CF:	5419      	ld         x, @0x4B54 <patch_pending_mode+0x3>
    21D0:	E381      	cmp        ah, @0xFFE3 <register uxl>
    21D1:	0CF0      	bne        +0xC <___libgatt_lib_db_4368+0x1B:0x21DD[p]>
    21D2:	0217      	ld         al, @(+0x2, y)
    21D3:	0113      	ld         ah, @(+0x1, y)
    21D4:	4B00      	**prefx    0x4B
    21D5:	5655      	sub        al, @0x4B56 <patch_pending_mode+0x5>
    21D6:	4B00      	**prefx    0x4B
    21D7:	5561      	subc       ah, @0x4B55 <patch_pending_mode+0x4>
    21D8:	E099      	tst        @0xFFE0 <register ah>
    21D9:	04F0      	bne        +0x4 <___libgatt_lib_db_4368+0x1B:0x21DD[p]>
    21DA:	0100      	**prefx    0x1
    21DB:	BC84      	cmp        al, #+0xBC
    21DC:	28FC      	bcs        +0x28 <___libgatt_lib_db_4368+0x42:0x2204[p]>
    21DD:	0138      	add        x, #+0x1
    21DE:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    21DF:	E385      	cmp        al, @0xFFE3 <register uxl>
    21E0:	15F0      	bne        +0x15 <___libgatt_lib_db_4368+0x33:0x21F5[p]>
    21E1:	4B00      	**prefx    0x4B
    21E2:	5519      	ld         x, @0x4B55 <patch_pending_mode+0x4>
    21E3:	FFD8      	xor        x, #0xFFFF
    21E4:	4B00      	**prefx    0x4B
    21E5:	5611      	ld         ah, @0x4B56 <patch_pending_mode+0x5>
    21E6:	FFD0      	xor        ah, #0xFFFF
    21E7:	E015      	ld         al, @0xFFE0 <register ah>
    21E8:	F925      	st         al, @0xFFF9 <(scratchpad)>
    21E9:	F829      	st         x, @0xFFF8 <(scratchpad)>
    21EA:	021B      	ld         x, @(+0x2, y)
    21EB:	E315      	ld         al, @0xFFE3 <register uxl>
    21EC:	011B      	ld         x, @(+0x1, y)
    21ED:	E311      	ld         ah, @0xFFE3 <register uxl>
    21EE:	F935      	add        al, @0xFFF9 <(scratchpad)>
    21EF:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
    21F0:	E099      	tst        @0xFFE0 <register ah>
    21F1:	04F0      	bne        +0x4 <___libgatt_lib_db_4368+0x33:0x21F5[p]>
    21F2:	0100      	**prefx    0x1
    21F3:	BC84      	cmp        al, #+0xBC
    21F4:	10FC      	bcs        +0x10 <___libgatt_lib_db_4368+0x42:0x2204[p]>
    21F5:	0213      	ld         ah, @(+0x2, y)
    21F6:	4B00      	**prefx    0x4B
    21F7:	5621      	st         ah, @0x4B56 <patch_pending_mode+0x5>
    21F8:	0117      	ld         al, @(+0x1, y)
    21F9:	4B00      	**prefx    0x4B
    21FA:	5525      	st         al, @0x4B55 <patch_pending_mode+0x4>
    21FB:	FA19      	ld         x, @0xFFFA <(scratchpad)>
    21FC:	4B00      	**prefx    0x4B
    21FD:	5429      	st         x, @0x4B54 <patch_pending_mode+0x3>
    21FE:	0314      	ld         al, #+0x3
    21FF:	E800      	**prefx    0xE8
    2200:	2010      	ld         ah, #-0x17E0
    2201:	0100      	**prefx    0x1
    2202:	D400      	**prefx    0xD4
    2203:	919C      	bsr        +0xD391 <___libgatt_lib_db_4460:0xF594[p]>
    2204:	040F      	leave      #+0x4

0x00002205 <PioCtrlrInit>:
    2205:	020B      	enter      #+0x2
    2206:	E119      	ld         x, @0xFFE1 <register al>
    2207:	F800      	**prefx    0xF8
    2208:	0C15      	ld         al, @0xF80C <___libgatt_lib_db_2427>
    2209:	0200      	**prefx    0x2
    220A:	00B4      	or         al, #+0x200
    220B:	F800      	**prefx    0xF8
    220C:	0C25      	st         al, @0xF80C <___libgatt_lib_db_2427>
    220D:	2000      	**prefx    0x20
    220E:	0038      	add        x, #+0x2000
    220F:	0012      	ld         ah, @(0x0, x)
    2210:	0009      	**unsigned
    2211:	01A4      	lsr        #0x1
    2212:	E015      	ld         al, @0xFFE0 <register ah>
    2213:	0138      	add        x, #+0x1
    2214:	E000      	**prefx    0xE0
    2215:	0010      	ld         ah, #-0x2000
    2216:	FD09      	bc2        
    2217:	F800      	**prefx    0xF8
    2218:	0C15      	ld         al, @0xF80C <___libgatt_lib_db_2427>
    2219:	04B4      	or         al, #+0x4
    221A:	F800      	**prefx    0xF8
    221B:	0C25      	st         al, @0xF80C <___libgatt_lib_db_2427>
    221C:	F600      	**prefx    0xF6
    221D:	F515      	ld         al, @0xF5F5 <___libgatt_lib_db_3538>
    221E:	10B4      	or         al, #+0x10
    221F:	F600      	**prefx    0xF6
    2220:	F525      	st         al, @0xF5F5 <___libgatt_lib_db_3538>
    2221:	2200      	**prefx    0x22
    2222:	C214      	ld         al, #+0x21C2
    2223:	0027      	st         al, @(0x0, y)
    2224:	0614      	ld         al, #+0x6
    2225:	0110      	ld         ah, #+0x1
    2226:	0100      	**prefx    0x1
    2227:	C300      	**prefx    0xC3
    2228:	969C      	bsr        +0xC296 <___libgatt_lib_db_4277:0xE4BE[p]>
    2229:	1300      	**prefx    0x13
    222A:	7B14      	ld         al, #+0x137B
    222B:	F900      	**prefx    0xF9
    222C:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    222D:	F700      	**prefx    0xF7
    222E:	C115      	ld         al, @0xF6C1 <___libgatt_lib_db_3256>
    222F:	E3C4      	and        al, #0xFFE3
    2230:	10B4      	or         al, #+0x10
    2231:	F700      	**prefx    0xF7
    2232:	C125      	st         al, @0xF6C1 <___libgatt_lib_db_3256>
    2233:	F700      	**prefx    0xF7
    2234:	CA15      	ld         al, @0xF6CA <___libgatt_lib_db_3249>
    2235:	E3C4      	and        al, #0xFFE3
    2236:	10B4      	or         al, #+0x10
    2237:	F700      	**prefx    0xF7
    2238:	CA25      	st         al, @0xF6CA <___libgatt_lib_db_3249>
    2239:	F700      	**prefx    0xF7
    223A:	2C15      	ld         al, @0xF72C <___libgatt_lib_db_3267>
    223B:	E3C4      	and        al, #0xFFE3
    223C:	10B4      	or         al, #+0x10
    223D:	F700      	**prefx    0xF7
    223E:	2C25      	st         al, @0xF72C <___libgatt_lib_db_3267>
    223F:	0014      	ld         al, #+0x0
    2240:	F900      	**prefx    0xF9
    2241:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2242:	020F      	leave      #+0x2

0x00002243 <I2cReset>:
    2243:	0114      	ld         al, #+0x1
    2244:	FE00      	**prefx    0xFE
    2245:	A325      	st         al, @0xFDA3 <___libgatt_lib_db_3057>
    2246:	0014      	ld         al, #+0x0
    2247:	FE00      	**prefx    0xFE
    2248:	A325      	st         al, @0xFDA3 <___libgatt_lib_db_3057>
    2249:	00E2      	bra        0x0, x

0x0000224A <NvmConfigureI2cEeprom>:
    224A:	010B      	enter      #+0x1
    224B:	0100      	**prefx    0x1
    224C:	CD00      	**prefx    0xCD
    224D:	779C      	bsr        +0xCD77 <NvmConfigureI2cEeprom_A05:0xEFC4[p]>
    224E:	2300      	**prefx    0x23
    224F:	B518      	ld         x, #+0x22B5
    2250:	9500      	**prefx    0x95
    2251:	FB29      	st         x, @0x94FB <storage_disable>
    2252:	2200      	**prefx    0x22
    2253:	4A18      	ld         x, #+0x224A
    2254:	9500      	**prefx    0x95
    2255:	FC29      	st         x, @0x94FC <storage_enable>
    2256:	2300      	**prefx    0x23
    2257:	9F18      	ld         x, #+0x229F
    2258:	9500      	**prefx    0x95
    2259:	F829      	st         x, @0x94F8 <storage_read>
    225A:	2200      	**prefx    0x22
    225B:	6318      	ld         x, #+0x2263
    225C:	9500      	**prefx    0x95
    225D:	F929      	st         x, @0x94F9 <storage_write>
    225E:	2200      	**prefx    0x22
    225F:	7918      	ld         x, #+0x2279
    2260:	9500      	**prefx    0x95
    2261:	FA29      	st         x, @0x94FA <storage_erase>
    2262:	010F      	leave      #+0x1

0x00002263 <.LFB5>:
    2263:	040B      	enter      #+0x4
    2264:	F925      	st         al, @0xFFF9 <(scratchpad)>
    2265:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    2266:	0417      	ld         al, @(+0x4, y)
    2267:	01A0      	asl        #0x1
    2268:	E119      	ld         x, @0xFFE1 <register al>
    2269:	A000      	**prefx    0xA0
    226A:	B839      	add        x, @0x9FB8 <___libgatt_lib_db_4269+0x34>
    226B:	0114      	ld         al, #+0x1
    226C:	0027      	st         al, @(0x0, y)
    226D:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    226E:	01A0      	asl        #0x1
    226F:	0127      	st         al, @(+0x1, y)
    2270:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    2271:	0227      	st         al, @(+0x2, y)
    2272:	8D00      	**prefx    0x8D
    2273:	A015      	ld         al, @0x8CA0 <___libgatt_lib_db_4670+0x1>
    2274:	E311      	ld         ah, @0xFFE3 <register uxl>
    2275:	0100      	**prefx    0x1
    2276:	C900      	**prefx    0xC9
    2277:	B39C      	bsr        +0xC8B3 <I2cEepromWrite:0xEB2A[p]>
    2278:	040F      	leave      #+0x4

0x00002279 <.LFB7>:
    2279:	050B      	enter      #+0x5
    227A:	A000      	**prefx    0xA0
    227B:	B915      	ld         al, @0x9FB9 <___libgatt_lib_db_4269+0x35>
    227C:	0327      	st         al, @(+0x3, y)
    227D:	1018      	ld         x, #+0x10
    227E:	002B      	st         x, @(0x0, y)
    227F:	4B00      	**prefx    0x4B
    2280:	5714      	ld         al, #+0x4B57
    2281:	FF10      	ld         ah, #-0x1
    2282:	6B00      	**prefx    0x6B
    2283:	8A9C      	bsr        +0x6A8A <MemSet:0x8D0D[p]>
    2284:	0014      	ld         al, #+0x0
    2285:	1018      	ld         x, #+0x10
    2286:	022B      	st         x, @(+0x2, y)
    2287:	0127      	st         al, @(+0x1, y)
    2288:	12E0      	bra        +0x12 <.LFB7+0x21:0x229A[p]>
    2289:	0217      	ld         al, @(+0x2, y)
    228A:	0387      	cmp        al, @(+0x3, y)
    228B:	032C      	bcz        +0x3 <.LFB7+0x15:0x228E[p]>
    228C:	031B      	ld         x, @(+0x3, y)
    228D:	022B      	st         x, @(+0x2, y)
    228E:	0117      	ld         al, @(+0x1, y)
    228F:	0027      	st         al, @(0x0, y)
    2290:	4B00      	**prefx    0x4B
    2291:	5714      	ld         al, #+0x4B57
    2292:	0213      	ld         ah, @(+0x2, y)
    2293:	D09C      	bsr        -0x30 <.LFB5:0x2263[p]>
    2294:	031B      	ld         x, @(+0x3, y)
    2295:	025B      	sub        x, @(+0x2, y)
    2296:	032B      	st         x, @(+0x3, y)
    2297:	011B      	ld         x, @(+0x1, y)
    2298:	023B      	add        x, @(+0x2, y)
    2299:	012B      	st         x, @(+0x1, y)
    229A:	039B      	tst        @(+0x3, y)
    229B:	03F4      	beq        +0x3 <.LFB7+0x25:0x229E[p]>
    229C:	E199      	tst        @0xFFE1 <register al>
    229D:	ECF4      	beq        -0x14 <.LFB7+0x10:0x2289[p]>
    229E:	050F      	leave      #+0x5

0x0000229F <.LFB6>:
    229F:	040B      	enter      #+0x4
    22A0:	F925      	st         al, @0xFFF9 <(scratchpad)>
    22A1:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    22A2:	0417      	ld         al, @(+0x4, y)
    22A3:	01A0      	asl        #0x1
    22A4:	E119      	ld         x, @0xFFE1 <register al>
    22A5:	A000      	**prefx    0xA0
    22A6:	B839      	add        x, @0x9FB8 <___libgatt_lib_db_4269+0x34>
    22A7:	0114      	ld         al, #+0x1
    22A8:	0027      	st         al, @(0x0, y)
    22A9:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    22AA:	01A0      	asl        #0x1
    22AB:	0127      	st         al, @(+0x1, y)
    22AC:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    22AD:	0227      	st         al, @(+0x2, y)
    22AE:	8D00      	**prefx    0x8D
    22AF:	A015      	ld         al, @0x8CA0 <___libgatt_lib_db_4670+0x1>
    22B0:	E311      	ld         ah, @0xFFE3 <register uxl>
    22B1:	0100      	**prefx    0x1
    22B2:	C800      	**prefx    0xC8
    22B3:	239C      	bsr        +0xC823 <I2cEepromRead:0xEAD6[p]>
    22B4:	040F      	leave      #+0x4

0x000022B5 <.LFB4>:
    22B5:	010B      	enter      #+0x1
    22B6:	0014      	ld         al, #+0x0
    22B7:	0100      	**prefx    0x1
    22B8:	C700      	**prefx    0xC7
    22B9:	419C      	bsr        +0xC741 <I2cEnable:0xE9FA[p]>
    22BA:	A000      	**prefx    0xA0
    22BB:	C315      	ld         al, @0x9FC3 <___libgatt_lib_db_4269+0x3F>
    22BC:	0100      	**prefx    0x1
    22BD:	D500      	**prefx    0xD5
    22BE:	559C      	bsr        +0xD555 <PioSetI2CPullMode:0xF813[p]>
    22BF:	010F      	leave      #+0x1

0x000022C0 <AioRead>:
    22C0:	070B      	enter      #+0x7
    22C1:	0327      	st         al, @(+0x3, y)
    22C2:	F900      	**prefx    0xF9
    22C3:	4211      	ld         ah, @0xF942 <___libgatt_lib_db_2749>
    22C4:	0223      	st         ah, @(+0x2, y)
    22C5:	1300      	**prefx    0x13
    22C6:	7B14      	ld         al, #+0x137B
    22C7:	F900      	**prefx    0xF9
    22C8:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    22C9:	4B00      	**prefx    0x4B
    22CA:	6719      	ld         x, @0x4B67 <patch_pending_mode+0x16>
    22CB:	F800      	**prefx    0xF8
    22CC:	8C38      	add        x, #-0x874
    22CD:	0317      	ld         al, @(+0x3, y)
    22CE:	0010      	ld         ah, #+0x0
    22CF:	FF2B      	st         x, @(-0x1, y)
    22D0:	FF9F      	bsr        @(-0x1, y)
    22D1:	0317      	ld         al, @(+0x3, y)
    22D2:	0534      	add        al, #+0x5
    22D3:	5F9C      	bsr        +0x5F <___libgatt_lib_db_4711:0x2332[p]>
    22D4:	9900      	**prefx    0x99
    22D5:	4819      	ld         x, @0x9948 <cached_vbg>
    22D6:	0009      	**unsigned
    22D7:	0300      	**prefx    0x3
    22D8:	BC90      	umult      #0x2BC
    22D9:	F925      	st         al, @0xFFF9 <(scratchpad)>
    22DA:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    22DB:	E311      	ld         ah, @0xFFE3 <register uxl>
    22DC:	0009      	**unsigned
    22DD:	01A4      	lsr        #0x1
    22DE:	0523      	st         ah, @(+0x5, y)
    22DF:	0010      	ld         ah, #+0x0
    22E0:	0423      	st         ah, @(+0x4, y)
    22E1:	F915      	ld         al, @0xFFF9 <(scratchpad)>
    22E2:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    22E3:	0537      	add        al, @(+0x5, y)
    22E4:	0443      	addc       ah, @(+0x4, y)
    22E5:	0127      	st         al, @(+0x1, y)
    22E6:	0023      	st         ah, @(0x0, y)
    22E7:	0014      	ld         al, #+0x0
    22E8:	E311      	ld         ah, @0xFFE3 <register uxl>
    22E9:	6B00      	**prefx    0x6B
    22EA:	889C      	bsr        +0x6A88 <___libgatt_lib_db_3943:0x8D72[p]>
    22EB:	F825      	st         al, @0xFFF8 <(scratchpad)>
    22EC:	FB00      	**prefx    0xFB
    22ED:	9519      	ld         x, @0xFA95 <___libgatt_lib_db_730>
    22EE:	0114      	ld         al, #+0x1
    22EF:	03A3      	asl        @(+0x3, y)
    22F0:	FFD4      	xor        al, #0xFFFF
    22F1:	E1C9      	and        x, @0xFFE1 <register al>
    22F2:	FB00      	**prefx    0xFB
    22F3:	9529      	st         x, @0xFA95 <___libgatt_lib_db_730>
    22F4:	0217      	ld         al, @(+0x2, y)
    22F5:	F900      	**prefx    0xF9
    22F6:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    22F7:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    22F8:	070F      	leave      #+0x7

0x000022F9 <PioConfigPWM>:
    22F9:	0B0B      	enter      #+0xB
    22FA:	0827      	st         al, @(+0x8, y)
    22FB:	0923      	st         ah, @(+0x9, y)
    22FC:	F700      	**prefx    0xF7
    22FD:	E415      	ld         al, @0xF6E4 <___libgatt_lib_db_2963>
    22FE:	0727      	st         al, @(+0x7, y)
    22FF:	0B17      	ld         al, @(+0xB, y)
    2300:	0027      	st         al, @(0x0, y)
    2301:	0C17      	ld         al, @(+0xC, y)
    2302:	0127      	st         al, @(+0x1, y)
    2303:	0D17      	ld         al, @(+0xD, y)
    2304:	0227      	st         al, @(+0x2, y)
    2305:	0E17      	ld         al, @(+0xE, y)
    2306:	0327      	st         al, @(+0x3, y)
    2307:	0F17      	ld         al, @(+0xF, y)
    2308:	0427      	st         al, @(+0x4, y)
    2309:	1017      	ld         al, @(+0x10, y)
    230A:	0527      	st         al, @(+0x5, y)
    230B:	1117      	ld         al, @(+0x11, y)
    230C:	0627      	st         al, @(+0x6, y)
    230D:	0817      	ld         al, @(+0x8, y)
    230E:	0100      	**prefx    0x1
    230F:	D300      	**prefx    0xD3
    2310:	7B9C      	bsr        +0xD37B <PioConfigPWM_A05:0xF68B[p]>
    2311:	E199      	tst        @0xFFE1 <register al>
    2312:	11F4      	beq        +0x11 <PioConfigPWM+0x2A:0x2323[p]>
    2313:	0817      	ld         al, @(+0x8, y)
    2314:	01A0      	asl        #0x1
    2315:	E119      	ld         x, @0xFFE1 <register al>
    2316:	0314      	ld         al, #+0x3
    2317:	E3A1      	asl        @0xFFE3 <register uxl>
    2318:	FFD4      	xor        al, #0xFFFF
    2319:	F825      	st         al, @0xFFF8 <(scratchpad)>
    231A:	0717      	ld         al, @(+0x7, y)
    231B:	F8C5      	and        al, @0xFFF8 <(scratchpad)>
    231C:	F825      	st         al, @0xFFF8 <(scratchpad)>
    231D:	0917      	ld         al, @(+0x9, y)
    231E:	E3A1      	asl        @0xFFE3 <register uxl>
    231F:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
    2320:	F700      	**prefx    0xF7
    2321:	E425      	st         al, @0xF6E4 <___libgatt_lib_db_2963>
    2322:	0114      	ld         al, #+0x1
    2323:	0B0F      	leave      #+0xB

0x00002324 <PioSetMode>:
    2324:	0880      	cmp        ah, #+0x8
    2325:	04F4      	beq        +0x4 <PioSetMode+0x5:0x2329[p]>
    2326:	0980      	cmp        ah, #+0x9
    2327:	05F0      	bne        +0x5 <PioSetMode+0x8:0x232C[p]>
    2328:	03E0      	bra        +0x3 <PioSetMode+0x7:0x232B[p]>
    2329:	0910      	ld         ah, #+0x9
    232A:	02E0      	bra        +0x2 <PioSetMode+0x8:0x232C[p]>
    232B:	0B10      	ld         ah, #+0xB
    232C:	0100      	**prefx    0x1
    232D:	D300      	**prefx    0xD3
    232E:	1FE0      	bra        +0xD31F <PioSetMode_A05:0xF64D[p]>

0x0000232F <IdGetLlVerBtle>:
    232F:	A000      	**prefx    0xA0
    2330:	CE15      	ld         al, @0x9FCE <___libgatt_lib_db_4269+0x4A>
    2331:	00E2      	bra        0x0, x

0x00002332 <___libgatt_lib_db_4711>:
    2332:	060B      	enter      #+0x6
    2333:	0427      	st         al, @(+0x4, y)
    2334:	0100      	**prefx    0x1
    2335:	D800      	**prefx    0xD8
    2336:	249C      	bsr        +0xD824 <___libgatt_lib_db_4519:0xFB5A[p]>
    2337:	0127      	st         al, @(+0x1, y)
    2338:	0327      	st         al, @(+0x3, y)
    2339:	0227      	st         al, @(+0x2, y)
    233A:	0514      	ld         al, #+0x5
    233B:	0027      	st         al, @(0x0, y)
    233C:	10E0      	bra        +0x10 <___libgatt_lib_db_4711+0x1A:0x234C[p]>
    233D:	0417      	ld         al, @(+0x4, y)
    233E:	0100      	**prefx    0x1
    233F:	D800      	**prefx    0xD8
    2340:	1A9C      	bsr        +0xD81A <___libgatt_lib_db_4519:0xFB5A[p]>
    2341:	011B      	ld         x, @(+0x1, y)
    2342:	E139      	add        x, @0xFFE1 <register al>
    2343:	012B      	st         x, @(+0x1, y)
    2344:	021B      	ld         x, @(+0x2, y)
    2345:	E189      	cmp        x, @0xFFE1 <register al>
    2346:	02F8      	bcc        +0x2 <___libgatt_lib_db_4711+0x16:0x2348[p]>
    2347:	0227      	st         al, @(+0x2, y)
    2348:	031B      	ld         x, @(+0x3, y)
    2349:	E189      	cmp        x, @0xFFE1 <register al>
    234A:	022C      	bcz        +0x2 <___libgatt_lib_db_4711+0x1A:0x234C[p]>
    234B:	0327      	st         al, @(+0x3, y)
    234C:	0017      	ld         al, @(0x0, y)
    234D:	FF34      	add        al, #-0x1
    234E:	0027      	st         al, @(0x0, y)
    234F:	FF84      	cmp        al, #-0x1
    2350:	EDF0      	bne        -0x13 <___libgatt_lib_db_4711+0xB:0x233D[p]>
    2351:	011B      	ld         x, @(+0x1, y)
    2352:	035B      	sub        x, @(+0x3, y)
    2353:	025B      	sub        x, @(+0x2, y)
    2354:	E311      	ld         ah, @0xFFE3 <register uxl>
    2355:	0009      	**unsigned
    2356:	02A4      	lsr        #0x2
    2357:	E015      	ld         al, @0xFFE0 <register ah>
    2358:	060F      	leave      #+0x6

0x00002359 <___libgatt_lib_db_4569>:
    2359:	010B      	enter      #+0x1
    235A:	9300      	**prefx    0x93
    235B:	6515      	ld         al, @0x9365 <___libgatt_lib_db_18>
    235C:	0384      	cmp        al, #+0x3
    235D:	0BF0      	bne        +0xB <___libgatt_lib_db_4569+0xF:0x2368[p]>
    235E:	4B00      	**prefx    0x4B
    235F:	6815      	ld         al, @0x4B68 <patch_pending_mode+0x17>
    2360:	CD00      	**prefx    0xCD
    2361:	6734      	add        al, #-0x3299
    2362:	FF27      	st         al, @(-0x1, y)
    2363:	FF9F      	bsr        @(-0x1, y)
    2364:	E199      	tst        @0xFFE1 <register al>
    2365:	03F4      	beq        +0x3 <___libgatt_lib_db_4569+0xF:0x2368[p]>
    2366:	0C14      	ld         al, #+0xC
    2367:	080F      	leave      #+0x8
    2368:	010F      	leave      #+0x1

0x00002369 <___libgatt_lib_db_4570>:
    2369:	010B      	enter      #+0x1
    236A:	0A17      	ld         al, @(+0xA, y)
    236B:	0FC4      	and        al, #0xF
    236C:	0584      	cmp        al, #+0x5
    236D:	09F0      	bne        +0x9 <L0+0xC:0x2376[p]>
    236E:	C19C      	bsr        -0x3F <IdGetLlVerBtle:0x232F[p]>
    236F:	0684      	cmp        al, #+0x6
    2370:	032C      	bcz        +0x3 <L0+0x9:0x2373[p]>
    2371:	0114      	ld         al, #+0x1
    2372:	05E0      	bra        +0x5 <L0+0xD:0x2377[p]>
    2373:	1114      	ld         al, #+0x11
    2374:	0C0F      	leave      #+0xC
    2375:	04E0      	bra        +0x4 <L0+0xF:0x2379[p]>
    2376:	0014      	ld         al, #+0x0
    2377:	8C00      	**prefx    0x8C
    2378:	9525      	st         al, @0x8B95 <enable_lowduty_directed_adv>
    2379:	010F      	leave      #+0x1

0x0000237A <___libgatt_lib_db_4577>:
    237A:	0017      	ld         al, @(0x0, y)
    237B:	0E84      	cmp        al, #+0xE
    237C:	04F4      	beq        +0x4 <___libgatt_lib_db_4577+0x6:0x2380[p]>
    237D:	1884      	cmp        al, #+0x18
    237E:	09F0      	bne        +0x9 <___libgatt_lib_db_4577+0xD:0x2387[p]>
    237F:	05E0      	bra        +0x5 <___libgatt_lib_db_4577+0xA:0x2384[p]>
    2380:	2500      	**prefx    0x25
    2381:	8114      	ld         al, #+0x2481
    2382:	0127      	st         al, @(+0x1, y)
    2383:	00E2      	bra        0x0, x
    2384:	2400      	**prefx    0x24
    2385:	8814      	ld         al, #+0x2388
    2386:	0127      	st         al, @(+0x1, y)
    2387:	00E2      	bra        0x0, x

0x00002388 <.LFB4>:
    2388:	0F0B      	enter      #+0xF
    2389:	0C27      	st         al, @(+0xC, y)
    238A:	0D23      	st         ah, @(+0xD, y)
    238B:	0014      	ld         al, #+0x0
    238C:	0427      	st         al, @(+0x4, y)
    238D:	FF18      	ld         x, #-0x1
    238E:	052B      	st         x, @(+0x5, y)
    238F:	E099      	tst        @0xFFE0 <register ah>
    2390:	07F4      	beq        +0x7 <.LFB4+0xF:0x2397[p]>
    2391:	0C1B      	ld         x, @(+0xC, y)
    2392:	0100      	**prefx    0x1
    2393:	9616      	ld         al, @(+0x96, x)
    2394:	0134      	add        al, #+0x1
    2395:	0100      	**prefx    0x1
    2396:	9726      	st         al, @(+0x97, x)
    2397:	0C17      	ld         al, @(+0xC, y)
    2398:	0100      	**prefx    0x1
    2399:	9734      	add        al, #+0x97
    239A:	6A00      	**prefx    0x6A
    239B:	0C9C      	bsr        +0x6A0C <BufReadUint8:0x8DA7[p]>
    239C:	E199      	tst        @0xFFE1 <register al>
    239D:	05F4      	beq        +0x5 <.LFB4+0x1A:0x23A2[p]>
    239E:	0184      	cmp        al, #+0x1
    239F:	0100      	**prefx    0x1
    23A0:	DDF0      	bne        +0xDD <L0+0x5A:0x247D[p]>
    23A1:	05E0      	bra        +0x5 <.LFB4+0x1E:0x23A6[p]>
    23A2:	0014      	ld         al, #+0x0
    23A3:	0727      	st         al, @(+0x7, y)
    23A4:	0100      	**prefx    0x1
    23A5:	C0E0      	bra        +0xC0 <L0+0x42:0x2465[p]>
    23A6:	0D9B      	tst        @(+0xD, y)
    23A7:	09F4      	beq        +0x9 <.LFB4+0x28:0x23B0[p]>
    23A8:	0D1B      	ld         x, @(+0xD, y)
    23A9:	041A      	ld         x, @(+0x4, x)
    23AA:	072B      	st         x, @(+0x7, y)
    23AB:	05F4      	beq        +0x5 <.LFB4+0x28:0x23B0[p]>
    23AC:	0A00      	**prefx    0xA
    23AD:	4388      	cmp        x, #+0xA43
    23AE:	0100      	**prefx    0x1
    23AF:	C4F0      	bne        +0xC4 <L0+0x50:0x2473[p]>
    23B0:	0C17      	ld         al, @(+0xC, y)
    23B1:	0434      	add        al, #+0x4
    23B2:	0627      	st         al, @(+0x6, y)
    23B3:	0927      	st         al, @(+0x9, y)
    23B4:	0018      	ld         x, #+0x0
    23B5:	072B      	st         x, @(+0x7, y)
    23B6:	082B      	st         x, @(+0x8, y)
    23B7:	61E0      	bra        +0x61 <.LFB4+0x90:0x2418[p]>
    23B8:	091B      	ld         x, @(+0x9, y)
    23B9:	0016      	ld         al, @(0x0, x)
    23BA:	0587      	cmp        al, @(+0x5, y)
    23BB:	03FC      	bcs        +0x3 <.LFB4+0x36:0x23BE[p]>
    23BC:	049B      	tst        @(+0x4, y)
    23BD:	07F0      	bne        +0x7 <.LFB4+0x3C:0x23C4[p]>
    23BE:	E411      	ld         ah, @0xFFE4 <register uy>
    23BF:	0530      	add        ah, #+0x5
    23C0:	0100      	**prefx    0x1
    23C1:	8900      	**prefx    0x89
    23C2:	719C      	bsr        +0x8971 <___libgatt_lib_db_273:0xAD33[p]>
    23C3:	0427      	st         al, @(+0x4, y)
    23C4:	0917      	ld         al, @(+0x9, y)
    23C5:	0334      	add        al, #+0x3
    23C6:	0B27      	st         al, @(+0xB, y)
    23C7:	40E0      	bra        +0x40 <.LFB4+0x7F:0x2407[p]>
    23C8:	E181      	cmp        ah, @0xFFE1 <register al>
    23C9:	37F0      	bne        +0x37 <.LFB4+0x78:0x2400[p]>
    23CA:	0D9B      	tst        @(+0xD, y)
    23CB:	27F0      	bne        +0x27 <.LFB4+0x6A:0x23F2[p]>
    23CC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    23CD:	0012      	ld         ah, @(0x0, x)
    23CE:	0009      	**unsigned
    23CF:	08A4      	lsr        #0x8
    23D0:	04C0      	and        ah, #0x4
    23D1:	2FF4      	beq        +0x2F <.LFB4+0x78:0x2400[p]>
    23D2:	091B      	ld         x, @(+0x9, y)
    23D3:	0216      	ld         al, @(+0x2, x)
    23D4:	0DF4      	beq        +0xD <.LFB4+0x59:0x23E1[p]>
    23D5:	0027      	st         al, @(0x0, y)
    23D6:	091B      	ld         x, @(+0x9, y)
    23D7:	011A      	ld         x, @(+0x1, x)
    23D8:	012B      	st         x, @(+0x1, y)
    23D9:	9700      	**prefx    0x97
    23DA:	C014      	ld         al, #-0x6940
    23DB:	0B13      	ld         ah, @(+0xB, y)
    23DC:	0100      	**prefx    0x1
    23DD:	8700      	**prefx    0x87
    23DE:	AD9C      	bsr        +0x86AD <___libgatt_lib_db_288:0xAA8B[p]>
    23DF:	9700      	**prefx    0x97
    23E0:	C014      	ld         al, #-0x6940
    23E1:	0218      	ld         x, #+0x2
    23E2:	002B      	st         x, @(0x0, y)
    23E3:	091B      	ld         x, @(+0x9, y)
    23E4:	011A      	ld         x, @(+0x1, x)
    23E5:	012B      	st         x, @(+0x1, y)
    23E6:	091B      	ld         x, @(+0x9, y)
    23E7:	021A      	ld         x, @(+0x2, x)
    23E8:	022B      	st         x, @(+0x2, y)
    23E9:	0327      	st         al, @(+0x3, y)
    23EA:	0C1B      	ld         x, @(+0xC, y)
    23EB:	0016      	ld         al, @(0x0, x)
    23EC:	0513      	ld         ah, @(+0x5, y)
    23ED:	7F00      	**prefx    0x7F
    23EE:	DA9C      	bsr        +0x7EDA <___libgatt_lib_db_226:0xA2C8[p]>
    23EF:	0114      	ld         al, #+0x1
    23F0:	0827      	st         al, @(+0x8, y)
    23F1:	0FE0      	bra        +0xF <.LFB4+0x78:0x2400[p]>
    23F2:	0D1B      	ld         x, @(+0xD, y)
    23F3:	041A      	ld         x, @(+0x4, x)
    23F4:	072B      	st         x, @(+0x7, y)
    23F5:	0A00      	**prefx    0xA
    23F6:	4388      	cmp        x, #+0xA43
    23F7:	09F0      	bne        +0x9 <.LFB4+0x78:0x2400[p]>
    23F8:	E415      	ld         al, @0xFFE4 <register uy>
    23F9:	0434      	add        al, #+0x4
    23FA:	0913      	ld         ah, @(+0x9, y)
    23FB:	0100      	**prefx    0x1
    23FC:	8800      	**prefx    0x88
    23FD:	E99C      	bsr        +0x87E9 <___libgatt_lib_db_271:0xABE6[p]>
    23FE:	0727      	st         al, @(+0x7, y)
    23FF:	13F0      	bne        +0x13 <.LFB4+0x8A:0x2412[p]>
    2400:	0417      	ld         al, @(+0x4, y)
    2401:	E411      	ld         ah, @0xFFE4 <register uy>
    2402:	0530      	add        ah, #+0x5
    2403:	0100      	**prefx    0x1
    2404:	8800      	**prefx    0x88
    2405:	6B9C      	bsr        +0x886B <___libgatt_lib_db_279:0xAC70[p]>
    2406:	0427      	st         al, @(+0x4, y)
    2407:	0417      	ld         al, @(+0x4, y)
    2408:	F825      	st         al, @0xFFF8 <(scratchpad)>
    2409:	09F4      	beq        +0x9 <.LFB4+0x8A:0x2412[p]>
    240A:	0513      	ld         ah, @(+0x5, y)
    240B:	091B      	ld         x, @(+0x9, y)
    240C:	0016      	ld         al, @(0x0, x)
    240D:	E181      	cmp        ah, @0xFFE1 <register al>
    240E:	022C      	bcz        +0x2 <.LFB4+0x88:0x2410[p]>
    240F:	03E0      	bra        +0x3 <.LFB4+0x8A:0x2412[p]>
    2410:	079B      	tst        @(+0x7, y)
    2411:	B7F4      	beq        -0x49 <.LFB4+0x40:0x23C8[p]>
    2412:	0C17      	ld         al, @(+0xC, y)
    2413:	0913      	ld         ah, @(+0x9, y)
    2414:	0100      	**prefx    0x1
    2415:	8700      	**prefx    0x87
    2416:	199C      	bsr        +0x8719 <___libgatt_lib_db_291:0xAB2F[p]>
    2417:	0927      	st         al, @(+0x9, y)
    2418:	099B      	tst        @(+0x9, y)
    2419:	03F4      	beq        +0x3 <.LFB4+0x94:0x241C[p]>
    241A:	079B      	tst        @(+0x7, y)
    241B:	9DF4      	beq        -0x63 <.LFB4+0x30:0x23B8[p]>
    241C:	089B      	tst        @(+0x8, y)
    241D:	0FF4      	beq        +0xF <L0+0x9:0x242C[p]>
    241E:	4000      	**prefx    0x40
    241F:	0014      	ld         al, #+0x4000
    2420:	0027      	st         al, @(0x0, y)
    2421:	0018      	ld         x, #+0x0
    2422:	012B      	st         x, @(+0x1, y)
    2423:	022B      	st         x, @(+0x2, y)
    2424:	032B      	st         x, @(+0x3, y)
    2425:	0C1B      	ld         x, @(+0xC, y)
    2426:	0016      	ld         al, @(0x0, x)
    2427:	0010      	ld         ah, #+0x0
    2428:	7F00      	**prefx    0x7F
    2429:	9F9C      	bsr        +0x7E9F <___libgatt_lib_db_226:0xA2C8[p]>
    242A:	0014      	ld         al, #+0x0
    242B:	51E0      	bra        +0x51 <L0+0x59:0x247C[p]>
    242C:	0D9B      	tst        @(+0xD, y)
    242D:	38F0      	bne        +0x38 <L0+0x42:0x2465[p]>
    242E:	FF14      	ld         al, #-0x1
    242F:	0527      	st         al, @(+0x5, y)
    2430:	0018      	ld         x, #+0x0
    2431:	042B      	st         x, @(+0x4, y)
    2432:	2FE0      	bra        +0x2F <L0+0x3E:0x2461[p]>
    2433:	061B      	ld         x, @(+0x6, y)
    2434:	0016      	ld         al, @(0x0, x)
    2435:	0587      	cmp        al, @(+0x5, y)
    2436:	03FC      	bcs        +0x3 <L0+0x16:0x2439[p]>
    2437:	049B      	tst        @(+0x4, y)
    2438:	18F0      	bne        +0x18 <L0+0x2D:0x2450[p]>
    2439:	E411      	ld         ah, @0xFFE4 <register uy>
    243A:	0530      	add        ah, #+0x5
    243B:	0100      	**prefx    0x1
    243C:	8900      	**prefx    0x89
    243D:	F69C      	bsr        +0x88F6 <___libgatt_lib_db_273:0xAD33[p]>
    243E:	11E0      	bra        +0x11 <L0+0x2C:0x244F[p]>
    243F:	E181      	cmp        ah, @0xFFE1 <register al>
    2440:	09F0      	bne        +0x9 <L0+0x26:0x2449[p]>
    2441:	E415      	ld         al, @0xFFE4 <register uy>
    2442:	0434      	add        al, #+0x4
    2443:	0613      	ld         ah, @(+0x6, y)
    2444:	0100      	**prefx    0x1
    2445:	8800      	**prefx    0x88
    2446:	A09C      	bsr        +0x87A0 <___libgatt_lib_db_271:0xABE6[p]>
    2447:	0A27      	st         al, @(+0xA, y)
    2448:	11F0      	bne        +0x11 <L0+0x36:0x2459[p]>
    2449:	0417      	ld         al, @(+0x4, y)
    244A:	E411      	ld         ah, @0xFFE4 <register uy>
    244B:	0530      	add        ah, #+0x5
    244C:	0100      	**prefx    0x1
    244D:	8800      	**prefx    0x88
    244E:	229C      	bsr        +0x8822 <___libgatt_lib_db_279:0xAC70[p]>
    244F:	0427      	st         al, @(+0x4, y)
    2450:	049B      	tst        @(+0x4, y)
    2451:	06F4      	beq        +0x6 <L0+0x34:0x2457[p]>
    2452:	0513      	ld         ah, @(+0x5, y)
    2453:	061B      	ld         x, @(+0x6, y)
    2454:	0016      	ld         al, @(0x0, x)
    2455:	E181      	cmp        ah, @0xFFE1 <register al>
    2456:	E92C      	bcz        -0x17 <L0+0x1C:0x243F[p]>
    2457:	0014      	ld         al, #+0x0
    2458:	0A27      	st         al, @(+0xA, y)
    2459:	0C17      	ld         al, @(+0xC, y)
    245A:	0613      	ld         ah, @(+0x6, y)
    245B:	0100      	**prefx    0x1
    245C:	8700      	**prefx    0x87
    245D:	D29C      	bsr        +0x86D2 <___libgatt_lib_db_291:0xAB2F[p]>
    245E:	0627      	st         al, @(+0x6, y)
    245F:	0A1B      	ld         x, @(+0xA, y)
    2460:	072B      	st         x, @(+0x7, y)
    2461:	069B      	tst        @(+0x6, y)
    2462:	03F4      	beq        +0x3 <L0+0x42:0x2465[p]>
    2463:	079B      	tst        @(+0x7, y)
    2464:	CFF4      	beq        -0x31 <L0+0x10:0x2433[p]>
    2465:	0C17      	ld         al, @(+0xC, y)
    2466:	0100      	**prefx    0x1
    2467:	8700      	**prefx    0x87
    2468:	C19C      	bsr        +0x86C1 <___libgatt_lib_db_290:0xAB29[p]>
    2469:	079B      	tst        @(+0x7, y)
    246A:	09F0      	bne        +0x9 <L0+0x50:0x2473[p]>
    246B:	0C17      	ld         al, @(+0xC, y)
    246C:	1910      	ld         ah, #+0x19
    246D:	7800      	**prefx    0x78
    246E:	9E9C      	bsr        +0x779E <___libgatt_lib_db_164:0x9C0C[p]>
    246F:	0C17      	ld         al, @(+0xC, y)
    2470:	7700      	**prefx    0x77
    2471:	569C      	bsr        +0x7756 <___libgatt_lib_db_165:0x9BC7[p]>
    2472:	09E0      	bra        +0x9 <L0+0x58:0x247B[p]>
    2473:	0517      	ld         al, @(+0x5, y)
    2474:	0027      	st         al, @(0x0, y)
    2475:	071B      	ld         x, @(+0x7, y)
    2476:	012B      	st         x, @(+0x1, y)
    2477:	0C17      	ld         al, @(+0xC, y)
    2478:	1810      	ld         ah, #+0x18
    2479:	7400      	**prefx    0x74
    247A:	119C      	bsr        +0x7411 <___libgatt_lib_db_143:0x988B[p]>
    247B:	0114      	ld         al, #+0x1
    247C:	0F0F      	leave      #+0xF
    247D:	0A00      	**prefx    0xA
    247E:	0414      	ld         al, #+0xA04
    247F:	0727      	st         al, @(+0x7, y)
    2480:	F3E0      	bra        -0xD <L0+0x50:0x2473[p]>

0x00002481 <.LFB3>:
    2481:	0E0B      	enter      #+0xE
    2482:	0B27      	st         al, @(+0xB, y)
    2483:	0C23      	st         ah, @(+0xC, y)
    2484:	FF14      	ld         al, #-0x1
    2485:	0427      	st         al, @(+0x4, y)
    2486:	0B1B      	ld         x, @(+0xB, y)
    2487:	0100      	**prefx    0x1
    2488:	9616      	ld         al, @(+0x96, x)
    2489:	0100      	**prefx    0x1
    248A:	9756      	sub        al, @(+0x97, x)
    248B:	0100      	**prefx    0x1
    248C:	9836      	add        al, @(+0x98, x)
    248D:	0727      	st         al, @(+0x7, y)
    248E:	01C4      	and        al, #0x1
    248F:	06F4      	beq        +0x6 <.LFB3+0x14:0x2495[p]>
    2490:	0018      	ld         x, #+0x0
    2491:	002B      	st         x, @(0x0, y)
    2492:	0A00      	**prefx    0xA
    2493:	0414      	ld         al, #+0xA04
    2494:	4AE0      	bra        +0x4A <.LFB3+0x5D:0x24DE[p]>
    2495:	0B17      	ld         al, @(+0xB, y)
    2496:	0F10      	ld         ah, #+0xF
    2497:	7700      	**prefx    0x77
    2498:	749C      	bsr        +0x7774 <___libgatt_lib_db_164:0x9C0C[p]>
    2499:	0627      	st         al, @(+0x6, y)
    249A:	0C9B      	tst        @(+0xC, y)
    249B:	0100      	**prefx    0x1
    249C:	87F4      	beq        +0x87 <.LFB3+0xA2:0x2523[p]>
    249D:	0C1B      	ld         x, @(+0xC, y)
    249E:	0416      	ld         al, @(+0x4, x)
    249F:	0BF0      	bne        +0xB <.LFB3+0x29:0x24AA[p]>
    24A0:	0612      	ld         ah, @(+0x6, x)
    24A1:	0516      	ld         al, @(+0x5, x)
    24A2:	0027      	st         al, @(0x0, y)
    24A3:	0B17      	ld         al, @(+0xB, y)
    24A4:	7700      	**prefx    0x77
    24A5:	499C      	bsr        +0x7749 <___libgatt_lib_db_166:0x9BEE[p]>
    24A6:	0627      	st         al, @(+0x6, y)
    24A7:	0018      	ld         x, #+0x0
    24A8:	0C2B      	st         x, @(+0xC, y)
    24A9:	7AE0      	bra        +0x7A <.LFB3+0xA2:0x2523[p]>
    24AA:	0A00      	**prefx    0xA
    24AB:	4384      	cmp        al, #+0xA43
    24AC:	0BF0      	bne        +0xB <.LFB3+0x36:0x24B7[p]>
    24AD:	0B1B      	ld         x, @(+0xB, y)
    24AE:	0100      	**prefx    0x1
    24AF:	9716      	ld         al, @(+0x97, x)
    24B0:	FE34      	add        al, #-0x2
    24B1:	0100      	**prefx    0x1
    24B2:	9726      	st         al, @(+0x97, x)
    24B3:	0717      	ld         al, @(+0x7, y)
    24B4:	0234      	add        al, #+0x2
    24B5:	0727      	st         al, @(+0x7, y)
    24B6:	6DE0      	bra        +0x6D <.LFB3+0xA2:0x2523[p]>
    24B7:	0C1B      	ld         x, @(+0xC, y)
    24B8:	031A      	ld         x, @(+0x3, x)
    24B9:	24E0      	bra        +0x24 <.LFB3+0x5C:0x24DD[p]>
    24BA:	0A17      	ld         al, @(+0xA, y)
    24BB:	6900      	**prefx    0x69
    24BC:	F79C      	bsr        +0x68F7 <BufReadUint16:0x8DB3[p]>
    24BD:	0827      	st         al, @(+0x8, y)
    24BE:	0487      	cmp        al, @(+0x4, y)
    24BF:	03FC      	bcs        +0x3 <.LFB3+0x41:0x24C2[p]>
    24C0:	059B      	tst        @(+0x5, y)
    24C1:	4BF0      	bne        +0x4B <.LFB3+0x8B:0x250C[p]>
    24C2:	0817      	ld         al, @(+0x8, y)
    24C3:	E411      	ld         ah, @0xFFE4 <register uy>
    24C4:	0430      	add        ah, #+0x4
    24C5:	0100      	**prefx    0x1
    24C6:	8800      	**prefx    0x88
    24C7:	6C9C      	bsr        +0x886C <___libgatt_lib_db_273:0xAD33[p]>
    24C8:	43E0      	bra        +0x43 <.LFB3+0x8A:0x250B[p]>
    24C9:	0887      	cmp        al, @(+0x8, y)
    24CA:	3BF0      	bne        +0x3B <.LFB3+0x84:0x2505[p]>
    24CB:	0517      	ld         al, @(+0x5, y)
    24CC:	0100      	**prefx    0x1
    24CD:	8800      	**prefx    0x88
    24CE:	0D9C      	bsr        +0x880D <___libgatt_lib_db_280:0xACDB[p]>
    24CF:	02C4      	and        al, #0x2
    24D0:	04F0      	bne        +0x4 <.LFB3+0x53:0x24D4[p]>
    24D1:	0A00      	**prefx    0xA
    24D2:	0214      	ld         al, #+0xA02
    24D3:	09E0      	bra        +0x9 <.LFB3+0x5B:0x24DC[p]>
    24D4:	0214      	ld         al, #+0x2
    24D5:	0027      	st         al, @(0x0, y)
    24D6:	0B17      	ld         al, @(+0xB, y)
    24D7:	0513      	ld         ah, @(+0x5, y)
    24D8:	7E00      	**prefx    0x7E
    24D9:	C79C      	bsr        +0x7DC7 <___libgatt_lib_db_222:0xA2A0[p]>
    24DA:	E199      	tst        @0xFFE1 <register al>
    24DB:	05F4      	beq        +0x5 <.LFB3+0x5F:0x24E0[p]>
    24DC:	081B      	ld         x, @(+0x8, y)
    24DD:	002B      	st         x, @(0x0, y)
    24DE:	0127      	st         al, @(+0x1, y)
    24DF:	3FE0      	bra        +0x3F <.LFB3+0x9D:0x251E[p]>
    24E0:	0C9B      	tst        @(+0xC, y)
    24E1:	15F0      	bne        +0x15 <.LFB3+0x75:0x24F6[p]>
    24E2:	051B      	ld         x, @(+0x5, y)
    24E3:	0012      	ld         ah, @(0x0, x)
    24E4:	0009      	**unsigned
    24E5:	08A4      	lsr        #0x8
    24E6:	04C0      	and        ah, #0x4
    24E7:	0FF4      	beq        +0xF <.LFB3+0x75:0x24F6[p]>
    24E8:	8000      	**prefx    0x80
    24E9:	0114      	ld         al, #-0x7FFF
    24EA:	0027      	st         al, @(0x0, y)
    24EB:	0018      	ld         x, #+0x0
    24EC:	012B      	st         x, @(+0x1, y)
    24ED:	022B      	st         x, @(+0x2, y)
    24EE:	032B      	st         x, @(+0x3, y)
    24EF:	0B1B      	ld         x, @(+0xB, y)
    24F0:	0016      	ld         al, @(0x0, x)
    24F1:	0813      	ld         ah, @(+0x8, y)
    24F2:	7E00      	**prefx    0x7E
    24F3:	D59C      	bsr        +0x7DD5 <___libgatt_lib_db_226:0xA2C8[p]>
    24F4:	0014      	ld         al, #+0x0
    24F5:	40E0      	bra        +0x40 <.LFB3+0xB4:0x2535[p]>
    24F6:	0014      	ld         al, #+0x0
    24F7:	0027      	st         al, @(0x0, y)
    24F8:	061B      	ld         x, @(+0x6, y)
    24F9:	012B      	st         x, @(+0x1, y)
    24FA:	0917      	ld         al, @(+0x9, y)
    24FB:	0513      	ld         ah, @(+0x5, y)
    24FC:	0100      	**prefx    0x1
    24FD:	8700      	**prefx    0x87
    24FE:	409C      	bsr        +0x8740 <___libgatt_lib_db_282:0xAC3E[p]>
    24FF:	061B      	ld         x, @(+0x6, y)
    2500:	E159      	sub        x, @0xFFE1 <register al>
    2501:	062B      	st         x, @(+0x6, y)
    2502:	0014      	ld         al, #+0x0
    2503:	0C27      	st         al, @(+0xC, y)
    2504:	0DE0      	bra        +0xD <.LFB3+0x90:0x2511[p]>
    2505:	0517      	ld         al, @(+0x5, y)
    2506:	E411      	ld         ah, @0xFFE4 <register uy>
    2507:	0430      	add        ah, #+0x4
    2508:	0100      	**prefx    0x1
    2509:	8700      	**prefx    0x87
    250A:	669C      	bsr        +0x8766 <___libgatt_lib_db_279:0xAC70[p]>
    250B:	0527      	st         al, @(+0x5, y)
    250C:	059B      	tst        @(+0x5, y)
    250D:	0CF4      	beq        +0xC <.LFB3+0x98:0x2519[p]>
    250E:	0417      	ld         al, @(+0x4, y)
    250F:	0887      	cmp        al, @(+0x8, y)
    2510:	B92C      	bcz        -0x47 <.LFB3+0x48:0x24C9[p]>
    2511:	0417      	ld         al, @(+0x4, y)
    2512:	0887      	cmp        al, @(+0x8, y)
    2513:	022C      	bcz        +0x2 <.LFB3+0x94:0x2515[p]>
    2514:	05E0      	bra        +0x5 <.LFB3+0x98:0x2519[p]>
    2515:	071B      	ld         x, @(+0x7, y)
    2516:	FE38      	add        x, #-0x2
    2517:	072B      	st         x, @(+0x7, y)
    2518:	15E0      	bra        +0x15 <.LFB3+0xAC:0x252D[p]>
    2519:	0817      	ld         al, @(+0x8, y)
    251A:	0027      	st         al, @(0x0, y)
    251B:	0A00      	**prefx    0xA
    251C:	0118      	ld         x, #+0xA01
    251D:	012B      	st         x, @(+0x1, y)
    251E:	0B17      	ld         al, @(+0xB, y)
    251F:	0E10      	ld         ah, #+0xE
    2520:	7300      	**prefx    0x73
    2521:	6A9C      	bsr        +0x736A <___libgatt_lib_db_143:0x988B[p]>
    2522:	12E0      	bra        +0x12 <.LFB3+0xB3:0x2534[p]>
    2523:	0B17      	ld         al, @(+0xB, y)
    2524:	0100      	**prefx    0x1
    2525:	9734      	add        al, #+0x97
    2526:	0A27      	st         al, @(+0xA, y)
    2527:	0B1B      	ld         x, @(+0xB, y)
    2528:	0100      	**prefx    0x1
    2529:	9A38      	add        x, #+0x9A
    252A:	092B      	st         x, @(+0x9, y)
    252B:	0014      	ld         al, #+0x0
    252C:	0527      	st         al, @(+0x5, y)
    252D:	079B      	tst        @(+0x7, y)
    252E:	03F4      	beq        +0x3 <.LFB3+0xB0:0x2531[p]>
    252F:	069B      	tst        @(+0x6, y)
    2530:	8AF0      	bne        -0x76 <.LFB3+0x39:0x24BA[p]>
    2531:	0B17      	ld         al, @(+0xB, y)
    2532:	7700      	**prefx    0x77
    2533:	949C      	bsr        +0x7694 <___libgatt_lib_db_165:0x9BC7[p]>
    2534:	0114      	ld         al, #+0x1
    2535:	0E0F      	leave      #+0xE

0x00002536 <___libgatt_lib_db_4579>:
    2536:	010B      	enter      #+0x1
    2537:	0217      	ld         al, @(+0x2, y)
    2538:	E419      	ld         x, @0xFFE4 <register uy>
    2539:	0638      	add        x, #+0x6
    253A:	F929      	st         x, @0xFFF9 <(scratchpad)>
    253B:	061B      	ld         x, @(+0x6, y)
    253C:	FA29      	st         x, @0xFFFA <(scratchpad)>
    253D:	E119      	ld         x, @0xFFE1 <register al>
    253E:	0016      	ld         al, @(0x0, x)
    253F:	FA19      	ld         x, @0xFFFA <(scratchpad)>
    2540:	0A00      	**prefx    0xA
    2541:	0588      	cmp        x, #+0xA05
    2542:	12F0      	bne        +0x12 <___libgatt_lib_db_4579+0x1E:0x2554[p]>
    2543:	0010      	ld         ah, #+0x0
    2544:	0009      	**unsigned
    2545:	0394      	udiv       #0x3
    2546:	F825      	st         al, @0xFFF8 <(scratchpad)>
    2547:	1690      	smult      #+0x16
    2548:	E119      	ld         x, @0xFFE1 <register al>
    2549:	9500      	**prefx    0x95
    254A:	3B9A      	tst        @(-0x6AC5, x)
    254B:	09F0      	bne        +0x9 <___libgatt_lib_db_4579+0x1E:0x2554[p]>
    254C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    254D:	8C00      	**prefx    0x8C
    254E:	999A      	tst        @(-0x7467, x)
    254F:	05F4      	beq        +0x5 <___libgatt_lib_db_4579+0x1E:0x2554[p]>
    2550:	0A00      	**prefx    0xA
    2551:	0F14      	ld         al, #+0xA0F
    2552:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    2553:	0026      	st         al, @(0x0, x)
    2554:	FA15      	ld         al, @0xFFFA <(scratchpad)>
    2555:	F600      	**prefx    0xF6
    2556:	FF34      	add        al, #-0xA01
    2557:	1084      	cmp        al, #+0x10
    2558:	0D2C      	bcz        +0xD <___libgatt_lib_db_4579+0x2F:0x2565[p]>
    2559:	8134      	add        al, #-0x7F
    255A:	1F84      	cmp        al, #+0x1F
    255B:	0A2C      	bcz        +0xA <___libgatt_lib_db_4579+0x2F:0x2565[p]>
    255C:	FA19      	ld         x, @0xFFFA <(scratchpad)>
    255D:	F500      	**prefx    0xF5
    255E:	0338      	add        x, #-0xAFD
    255F:	0288      	cmp        x, #+0x2
    2560:	052C      	bcz        +0x5 <___libgatt_lib_db_4579+0x2F:0x2565[p]>
    2561:	0A00      	**prefx    0xA
    2562:	0E14      	ld         al, #+0xA0E
    2563:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    2564:	0026      	st         al, @(0x0, x)
    2565:	010F      	leave      #+0x1

0x00002566 <___libgatt_lib_db_4635>:
    2566:	0C0B      	enter      #+0xC
    2567:	8C00      	**prefx    0x8C
    2568:	9599      	tst        @0x8B95 <enable_lowduty_directed_adv>
    2569:	56F4      	beq        +0x56 <___libgatt_lib_db_4635+0x59:0x25BF[p]>
    256A:	0214      	ld         al, #+0x2
    256B:	0100      	**prefx    0x1
    256C:	9300      	**prefx    0x93
    256D:	569C      	bsr        +0x9356 <___libgatt_lib_db_4015:0xB8C3[p]>
    256E:	0284      	cmp        al, #+0x2
    256F:	06F4      	beq        +0x6 <___libgatt_lib_db_4635+0xF:0x2575[p]>
    2570:	CF00      	**prefx    0xCF
    2571:	E314      	ld         al, #-0x311D
    2572:	0B27      	st         al, @(+0xB, y)
    2573:	0C14      	ld         al, #+0xC
    2574:	4BE0      	bra        +0x4B <___libgatt_lib_db_4635+0x59:0x25BF[p]>
    2575:	1A1B      	ld         x, @(+0x1A, y)
    2576:	092B      	st         x, @(+0x9, y)
    2577:	1D17      	ld         al, @(+0x1D, y)
    2578:	0827      	st         al, @(+0x8, y)
    2579:	1E1B      	ld         x, @(+0x1E, y)
    257A:	072B      	st         x, @(+0x7, y)
    257B:	1F17      	ld         al, @(+0x1F, y)
    257C:	0A27      	st         al, @(+0xA, y)
    257D:	4118      	ld         x, #+0x41
    257E:	9700      	**prefx    0x97
    257F:	5F29      	st         x, @0x975F <le_device+0xA>
    2580:	0817      	ld         al, @(+0x8, y)
    2581:	9700      	**prefx    0x97
    2582:	6325      	st         al, @0x9763 <le_device+0xE>
    2583:	E415      	ld         al, @0xFFE4 <register uy>
    2584:	0134      	add        al, #+0x1
    2585:	0100      	**prefx    0x1
    2586:	9000      	**prefx    0x90
    2587:	109C      	bsr        +0x9010 <___libgatt_lib_db_3944:0xB597[p]>
    2588:	A200      	**prefx    0xA2
    2589:	B715      	ld         al, @0xA1B7 <___libgatt_lib_db_4169>
    258A:	0100      	**prefx    0x1
    258B:	9000      	**prefx    0x90
    258C:	2D9C      	bsr        +0x902D <___libgatt_lib_db_3947:0xB5B9[p]>
    258D:	0627      	st         al, @(+0x6, y)
    258E:	071B      	ld         x, @(+0x7, y)
    258F:	9700      	**prefx    0x97
    2590:	6229      	st         x, @0x9762 <le_device+0xD>
    2591:	0414      	ld         al, #+0x4
    2592:	9700      	**prefx    0x97
    2593:	6410      	ld         ah, #-0x689C
    2594:	0A1B      	ld         x, @(+0xA, y)
    2595:	FD09      	bc2        
    2596:	0A17      	ld         al, @(+0xA, y)
    2597:	E411      	ld         ah, @0xFFE4 <register uy>
    2598:	0330      	add        ah, #+0x3
    2599:	0100      	**prefx    0x1
    259A:	9300      	**prefx    0x93
    259B:	7C9C      	bsr        +0x937C <___libgatt_lib_db_4023:0xB917[p]>
    259C:	0617      	ld         al, @(+0x6, y)
    259D:	0834      	add        al, #+0x8
    259E:	0618      	ld         x, #+0x6
    259F:	002B      	st         x, @(0x0, y)
    25A0:	E411      	ld         ah, @0xFFE4 <register uy>
    25A1:	0330      	add        ah, #+0x3
    25A2:	6700      	**prefx    0x67
    25A3:	3D9C      	bsr        +0x673D <MemCopyUnPack:0x8CE0[p]>
    25A4:	0C14      	ld         al, #+0xC
    25A5:	061B      	ld         x, @(+0x6, y)
    25A6:	0126      	st         al, @(+0x1, x)
    25A7:	0817      	ld         al, @(+0x8, y)
    25A8:	06A0      	asl        #0x6
    25A9:	F825      	st         al, @0xFFF8 <(scratchpad)>
    25AA:	0717      	ld         al, @(+0x7, y)
    25AB:	07A0      	asl        #0x7
    25AC:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
    25AD:	01B4      	or         al, #+0x1
    25AE:	0026      	st         al, @(0x0, x)
    25AF:	E415      	ld         al, @0xFFE4 <register uy>
    25B0:	0134      	add        al, #+0x1
    25B1:	0100      	**prefx    0x1
    25B2:	9000      	**prefx    0x90
    25B3:	ED9C      	bsr        +0x8FED <___libgatt_lib_db_3945:0xB5A0[p]>
    25B4:	091B      	ld         x, @(+0x9, y)
    25B5:	F600      	**prefx    0xF6
    25B6:	F229      	st         x, @0xF5F2 <___libgatt_lib_db_1825>
    25B7:	F700      	**prefx    0xF7
    25B8:	B715      	ld         al, @0xF6B7 <___libgatt_lib_db_1826>
    25B9:	FDC4      	and        al, #0xFFFD
    25BA:	F700      	**prefx    0xF7
    25BB:	B725      	st         al, @0xF6B7 <___libgatt_lib_db_1826>
    25BC:	CF00      	**prefx    0xCF
    25BD:	DA14      	ld         al, #-0x3126
    25BE:	0B27      	st         al, @(+0xB, y)
    25BF:	0C0F      	leave      #+0xC

0x000025C0 <___libgatt_lib_db_4636>:
    25C0:	020B      	enter      #+0x2
    25C1:	0014      	ld         al, #+0x0
    25C2:	0027      	st         al, @(0x0, y)
    25C3:	0917      	ld         al, @(+0x9, y)
    25C4:	9000      	**prefx    0x90
    25C5:	9184      	cmp        al, #-0x706F
    25C6:	14F0      	bne        +0x14 <___libgatt_lib_db_4636+0x1A:0x25DA[p]>
    25C7:	0100      	**prefx    0x1
    25C8:	A800      	**prefx    0xA8
    25C9:	A19C      	bsr        +0xA7A1 <___libgatt_lib_db_4084:0xCD6A[p]>
    25CA:	0027      	st         al, @(0x0, y)
    25CB:	0017      	ld         al, @(0x0, y)
    25CC:	0CF0      	bne        +0xC <___libgatt_lib_db_4636+0x18:0x25D8[p]>
    25CD:	9300      	**prefx    0x93
    25CE:	6815      	ld         al, @0x9368 <___libgatt_lib_db_73>
    25CF:	0284      	cmp        al, #+0x2
    25D0:	08F0      	bne        +0x8 <___libgatt_lib_db_4636+0x18:0x25D8[p]>
    25D1:	9300      	**prefx    0x93
    25D2:	6915      	ld         al, @0x9369 <___libgatt_lib_db_73+0x1>
    25D3:	0284      	cmp        al, #+0x2
    25D4:	04F0      	bne        +0x4 <___libgatt_lib_db_4636+0x18:0x25D8[p]>
    25D5:	9000      	**prefx    0x90
    25D6:	A514      	ld         al, #-0x705B
    25D7:	0927      	st         al, @(+0x9, y)
    25D8:	0017      	ld         al, @(0x0, y)
    25D9:	0A0F      	leave      #+0xA
    25DA:	020F      	leave      #+0x2

0x000025DB <___libgatt_lib_db_4206>:
    25DB:	4B00      	**prefx    0x4B
    25DC:	6C99      	tst        @0x4B6C <enable_lo_offset_adc_update>
    25DD:	0AF4      	beq        +0xA <L0+0x2:0x25E7[p]>
    25DE:	F000      	**prefx    0xF0
    25DF:	2A15      	ld         al, @0xF02A <___libgatt_lib_db_918>
    25E0:	FF00      	**prefx    0xFF
    25E1:	00C4      	and        al, #0xFF00
    25E2:	0100      	**prefx    0x1
    25E3:	BFB4      	or         al, #+0xBF
    25E4:	F000      	**prefx    0xF0
    25E5:	2A25      	st         al, @0xF02A <___libgatt_lib_db_918>
    25E6:	08E0      	bra        +0x8 <L0+0x9:0x25EE[p]>
    25E7:	0014      	ld         al, #+0x0
    25E8:	F700      	**prefx    0xF7
    25E9:	8925      	st         al, @0xF689 <___libgatt_lib_db_1907>
    25EA:	0400      	**prefx    0x4
    25EB:	FF14      	ld         al, #+0x3FF
    25EC:	F700      	**prefx    0xF7
    25ED:	8A25      	st         al, @0xF68A <___libgatt_lib_db_1906>
    25EE:	0200      	**prefx    0x2
    25EF:	0014      	ld         al, #+0x200
    25F0:	9C00      	**prefx    0x9C
    25F1:	8625      	st         al, @0x9B86 <DATA_RCLUTS_START+0x6>
    25F2:	9C00      	**prefx    0x9C
    25F3:	A625      	st         al, @0x9BA6 <DATA_RCLUTS_START+0x26>
    25F4:	0014      	ld         al, #+0x0
    25F5:	F200      	**prefx    0xF2
    25F6:	2425      	st         al, @0xF224 <___libgatt_lib_db_1596>
    25F7:	00E2      	bra        0x0, x

0x000025F8 <___libgatt_lib_db_4208>:
    25F8:	0117      	ld         al, @(+0x1, y)
    25F9:	D700      	**prefx    0xD7
    25FA:	E784      	cmp        al, #-0x2919
    25FB:	0DF0      	bne        +0xD <___libgatt_lib_db_4208+0x10:0x2608[p]>
    25FC:	0200      	**prefx    0x2
    25FD:	4814      	ld         al, #+0x248
    25FE:	F000      	**prefx    0xF0
    25FF:	0F25      	st         al, @0xF00F <___libgatt_lib_db_1018>
    2600:	0100      	**prefx    0x1
    2601:	6814      	ld         al, #+0x168
    2602:	F700      	**prefx    0xF7
    2603:	8925      	st         al, @0xF689 <___libgatt_lib_db_1907>
    2604:	0300      	**prefx    0x3
    2605:	B014      	ld         al, #+0x2B0
    2606:	F700      	**prefx    0xF7
    2607:	8A25      	st         al, @0xF68A <___libgatt_lib_db_1906>
    2608:	00E2      	bra        0x0, x

0x00002609 <___libgatt_lib_db_4209>:
    2609:	020B      	enter      #+0x2
    260A:	0217      	ld         al, @(+0x2, y)
    260B:	DA00      	**prefx    0xDA
    260C:	AD84      	cmp        al, #-0x2653
    260D:	40F0      	bne        +0x40 <___libgatt_lib_db_4209+0x44:0x264D[p]>
    260E:	3317      	ld         al, @(+0x33, y)
    260F:	48F0      	bne        +0x48 <L0+0x4:0x2657[p]>
    2610:	4B00      	**prefx    0x4B
    2611:	6915      	ld         al, @0x4B69 <patch_pending_mode+0x18>
    2612:	F300      	**prefx    0xF3
    2613:	F234      	add        al, #-0xD0E
    2614:	FF27      	st         al, @(-0x1, y)
    2615:	FF9F      	bsr        @(-0x1, y)
    2616:	E111      	ld         ah, @0xFFE1 <register al>
    2617:	3517      	ld         al, @(+0x35, y)
    2618:	1AF0      	bne        +0x1A <___libgatt_lib_db_4209+0x29:0x2632[p]>
    2619:	F000      	**prefx    0xF0
    261A:	1D15      	ld         al, @0xF01D <___libgatt_lib_db_1003>
    261B:	F100      	**prefx    0xF1
    261C:	FFC4      	and        al, #0xF0FF
    261D:	0500      	**prefx    0x5
    261E:	00B4      	or         al, #+0x500
    261F:	F000      	**prefx    0xF0
    2620:	1D25      	st         al, @0xF01D <___libgatt_lib_db_1003>
    2621:	0200      	**prefx    0x2
    2622:	1D80      	cmp        ah, #+0x21D
    2623:	04F8      	bcc        +0x4 <___libgatt_lib_db_4209+0x1E:0x2627[p]>
    2624:	0200      	**prefx    0x2
    2625:	ED14      	ld         al, #+0x1ED
    2626:	03E0      	bra        +0x3 <___libgatt_lib_db_4209+0x20:0x2629[p]>
    2627:	0200      	**prefx    0x2
    2628:	FF14      	ld         al, #+0x1FF
    2629:	0027      	st         al, @(0x0, y)
    262A:	4B00      	**prefx    0x4B
    262B:	6911      	ld         ah, @0x4B69 <patch_pending_mode+0x18>
    262C:	FB00      	**prefx    0xFB
    262D:	0230      	add        ah, #-0x4FE
    262E:	0314      	ld         al, #+0x3
    262F:	FF23      	st         ah, @(-0x1, y)
    2630:	FF9F      	bsr        @(-0x1, y)
    2631:	12E0      	bra        +0x12 <___libgatt_lib_db_4209+0x3A:0x2643[p]>
    2632:	F000      	**prefx    0xF0
    2633:	1D15      	ld         al, @0xF01D <___libgatt_lib_db_1003>
    2634:	F100      	**prefx    0xF1
    2635:	FFC4      	and        al, #0xF0FF
    2636:	0600      	**prefx    0x6
    2637:	00B4      	or         al, #+0x600
    2638:	F000      	**prefx    0xF0
    2639:	1D25      	st         al, @0xF01D <___libgatt_lib_db_1003>
    263A:	0200      	**prefx    0x2
    263B:	1D80      	cmp        ah, #+0x21D
    263C:	04F8      	bcc        +0x4 <___libgatt_lib_db_4209+0x37:0x2640[p]>
    263D:	0200      	**prefx    0x2
    263E:	1214      	ld         al, #+0x212
    263F:	03E0      	bra        +0x3 <___libgatt_lib_db_4209+0x39:0x2642[p]>
    2640:	0200      	**prefx    0x2
    2641:	2714      	ld         al, #+0x227
    2642:	0027      	st         al, @(0x0, y)
    2643:	0017      	ld         al, @(0x0, y)
    2644:	3427      	st         al, @(+0x34, y)
    2645:	4B00      	**prefx    0x4B
    2646:	6911      	ld         ah, @0x4B69 <patch_pending_mode+0x18>
    2647:	B300      	**prefx    0xB3
    2648:	5C30      	add        ah, #-0x4CA4
    2649:	1414      	ld         al, #+0x14
    264A:	FF23      	st         ah, @(-0x1, y)
    264B:	FF9F      	bsr        @(-0x1, y)
    264C:	0BE0      	bra        +0xB <L0+0x4:0x2657[p]>
    264D:	D600      	**prefx    0xD6
    264E:	7284      	cmp        al, #-0x298E
    264F:	08F0      	bne        +0x8 <L0+0x4:0x2657[p]>
    2650:	0014      	ld         al, #+0x0
    2651:	F000      	**prefx    0xF0
    2652:	5325      	st         al, @0xF053 <___libgatt_lib_db_4430>
    2653:	0527      	st         al, @(+0x5, y)
    2654:	D700      	**prefx    0xD7
    2655:	8414      	ld         al, #-0x297C
    2656:	0227      	st         al, @(+0x2, y)
    2657:	020F      	leave      #+0x2

0x00002658 <.LFB10>:
    2658:	010B      	enter      #+0x1
    2659:	1384      	cmp        al, #+0x13
    265A:	0428      	ble        +0x4 <.LFB10+0x6:0x265E[p]>
    265B:	0014      	ld         al, #+0x0
    265C:	F925      	st         al, @0xFFF9 <(scratchpad)>
    265D:	0FE0      	bra        +0xF <.LFB10+0x14:0x266C[p]>
    265E:	1418      	ld         x, #+0x14
    265F:	E159      	sub        x, @0xFFE1 <register al>
    2660:	E311      	ld         ah, @0xFFE3 <register uxl>
    2661:	0730      	add        ah, #+0x7
    2662:	10A4      	asr        #0x10
    2663:	0F94      	sdiv       #+0xF
    2664:	F925      	st         al, @0xFFF9 <(scratchpad)>
    2665:	E315      	ld         al, @0xFFE3 <register uxl>
    2666:	0A90      	smult      #+0xA
    2667:	E119      	ld         x, @0xFFE1 <register al>
    2668:	0D38      	add        x, #+0xD
    2669:	E311      	ld         ah, @0xFFE3 <register uxl>
    266A:	10A4      	asr        #0x10
    266B:	1A94      	sdiv       #+0x1A
    266C:	F100      	**prefx    0xF1
    266D:	0619      	ld         x, @0xF106 <___libgatt_lib_db_2240>
    266E:	F000      	**prefx    0xF0
    266F:	00C8      	and        x, #0xF000
    2670:	E1B9      	or         x, @0xFFE1 <register al>
    2671:	06A0      	asl        #0x6
    2672:	E1B9      	or         x, @0xFFE1 <register al>
    2673:	F100      	**prefx    0xF1
    2674:	0629      	st         x, @0xF106 <___libgatt_lib_db_2240>
    2675:	4B00      	**prefx    0x4B
    2676:	6A19      	ld         x, @0x4B6A <patch_pending_mode+0x19>
    2677:	F829      	st         x, @0xFFF8 <(scratchpad)>
    2678:	0016      	ld         al, @(0x0, x)
    2679:	F955      	sub        al, @0xFFF9 <(scratchpad)>
    267A:	F000      	**prefx    0xF0
    267B:	0025      	st         al, @0xF000 <PERSIST_MEM_END>
    267C:	02A0      	asl        #0x2
    267D:	E111      	ld         ah, @0xFFE1 <register al>
    267E:	10A4      	asr        #0x10
    267F:	2694      	sdiv       #+0x26
    2680:	1334      	add        al, #+0x13
    2681:	F700      	**prefx    0xF7
    2682:	B025      	st         al, @0xF6B0 <___libgatt_lib_db_2014>
    2683:	0316      	ld         al, @(+0x3, x)
    2684:	04A0      	asl        #0x4
    2685:	9C00      	**prefx    0x9C
    2686:	8211      	ld         ah, @0x9B82 <DATA_RCLUTS_START+0x2>
    2687:	8FC0      	and        ah, #0xFF8F
    2688:	E0B5      	or         al, @0xFFE0 <register ah>
    2689:	9C00      	**prefx    0x9C
    268A:	8225      	st         al, @0x9B82 <DATA_RCLUTS_START+0x2>
    268B:	0216      	ld         al, @(+0x2, x)
    268C:	04A0      	asl        #0x4
    268D:	9C00      	**prefx    0x9C
    268E:	8111      	ld         ah, @0x9B81 <DATA_RCLUTS_START+0x1>
    268F:	FF00      	**prefx    0xFF
    2690:	0FC0      	and        ah, #0xFF0F
    2691:	E0B5      	or         al, @0xFFE0 <register ah>
    2692:	9C00      	**prefx    0x9C
    2693:	8125      	st         al, @0x9B81 <DATA_RCLUTS_START+0x1>
    2694:	F000      	**prefx    0xF0
    2695:	0C15      	ld         al, @0xF00C <___libgatt_lib_db_1004>
    2696:	F925      	st         al, @0xFFF9 <(scratchpad)>
    2697:	0316      	ld         al, @(+0x3, x)
    2698:	04A0      	asl        #0x4
    2699:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    269A:	8FC8      	and        x, #0xFF8F
    269B:	E3B5      	or         al, @0xFFE3 <register uxl>
    269C:	F000      	**prefx    0xF0
    269D:	0C25      	st         al, @0xF00C <___libgatt_lib_db_1004>
    269E:	F000      	**prefx    0xF0
    269F:	0B15      	ld         al, @0xF00B <___libgatt_lib_db_1387>
    26A0:	F925      	st         al, @0xFFF9 <(scratchpad)>
    26A1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    26A2:	0216      	ld         al, @(+0x2, x)
    26A3:	04A0      	asl        #0x4
    26A4:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    26A5:	FF00      	**prefx    0xFF
    26A6:	0FC8      	and        x, #0xFF0F
    26A7:	E3B5      	or         al, @0xFFE3 <register uxl>
    26A8:	F000      	**prefx    0xF0
    26A9:	0B25      	st         al, @0xF00B <___libgatt_lib_db_1387>
    26AA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
    26AB:	0116      	ld         al, @(+0x1, x)
    26AC:	F000      	**prefx    0xF0
    26AD:	0125      	st         al, @0xF001 <___libgatt_lib_db_1388>
    26AE:	5414      	ld         al, #+0x54
    26AF:	F000      	**prefx    0xF0
    26B0:	5325      	st         al, @0xF053 <___libgatt_lib_db_4430>
    26B1:	010F      	leave      #+0x1

0x000026B2 <___libgatt_lib_db_4660>:
    26B2:	010B      	enter      #+0x1
    26B3:	0590      	smult      #+0x5
    26B4:	4B00      	**prefx    0x4B
    26B5:	A134      	add        al, #+0x4AA1
    26B6:	4B00      	**prefx    0x4B
    26B7:	6A25      	st         al, @0x4B6A <patch_pending_mode+0x19>
    26B8:	4B00      	**prefx    0x4B
    26B9:	6915      	ld         al, @0x4B69 <patch_pending_mode+0x18>
    26BA:	F900      	**prefx    0xF9
    26BB:	3B34      	add        al, #-0x6C5
    26BC:	FF27      	st         al, @(-0x1, y)
    26BD:	FF9F      	bsr        @(-0x1, y)
    26BE:	001B      	ld         x, @(0x0, y)
    26BF:	013C      	add        y, #+0x1
    26C0:	98E0      	bra        -0x68 <.LFB10:0x2658[p]>

0x000026C1 <___libgatt_lib_db_4658>:
    26C1:	010B      	enter      #+0x1
    26C2:	4B00      	**prefx    0x4B
    26C3:	6A99      	tst        @0x4B6A <patch_pending_mode+0x19>
    26C4:	04F0      	bne        +0x4 <___libgatt_lib_db_4658+0x7:0x26C8[p]>
    26C5:	A000      	**prefx    0xA0
    26C6:	9615      	ld         al, @0x9F96 <___libgatt_lib_db_4269+0x12>
    26C7:	EB9C      	bsr        -0x15 <___libgatt_lib_db_4660:0x26B2[p]>
    26C8:	2217      	ld         al, @(+0x22, y)
    26C9:	8F9C      	bsr        -0x71 <.LFB10:0x2658[p]>
    26CA:	010F      	leave      #+0x1

0x000026CB <___libgatt_lib_db_4205>:
    26CB:	1D00      	**prefx    0x1D
    26CC:	D014      	ld         al, #+0x1CD0
    26CD:	F200      	**prefx    0xF2
    26CE:	2725      	st         al, @0xF227 <___libgatt_lib_db_1528>
    26CF:	3C00      	**prefx    0x3C
    26D0:	0A14      	ld         al, #+0x3C0A
    26D1:	F200      	**prefx    0xF2
    26D2:	2825      	st         al, @0xF228 <___libgatt_lib_db_1529>
    26D3:	00E2      	bra        0x0, x

0x000026D4 <___libgatt_lib_db_4666>:
    26D4:	050B      	enter      #+0x5
    26D5:	0100      	**prefx    0x1
    26D6:	CC00      	**prefx    0xCC
    26D7:	E89C      	bsr        +0xCBE8 <___libgatt_lib_db_4439:0xF2BF[p]>
    26D8:	0327      	st         al, @(+0x3, y)
    26D9:	F600      	**prefx    0xF6
    26DA:	1915      	ld         al, @0xF619 <___libgatt_lib_db_1964>
    26DB:	7F00      	**prefx    0x7F
    26DC:	00C4      	and        al, #0x7F00
    26DD:	2AB4      	or         al, #+0x2A
    26DE:	F600      	**prefx    0xF6
    26DF:	1925      	st         al, @0xF619 <___libgatt_lib_db_1964>
    26E0:	4100      	**prefx    0x41
    26E1:	2914      	ld         al, #+0x4129
    26E2:	F600      	**prefx    0xF6
    26E3:	1B25      	st         al, @0xF61B <___libgatt_lib_db_1956>
    26E4:	7100      	**prefx    0x71
    26E5:	7614      	ld         al, #+0x7176
    26E6:	F600      	**prefx    0xF6
    26E7:	1A25      	st         al, @0xF61A <___libgatt_lib_db_1955>
    26E8:	5500      	**prefx    0x55
    26E9:	5514      	ld         al, #+0x5555
    26EA:	F600      	**prefx    0xF6
    26EB:	2125      	st         al, @0xF621 <___libgatt_lib_db_1966>
    26EC:	5514      	ld         al, #+0x55
    26ED:	F600      	**prefx    0xF6
    26EE:	2025      	st         al, @0xF620 <___libgatt_lib_db_1965>
    26EF:	E415      	ld         al, @0xFFE4 <register uy>
    26F0:	6410      	ld         ah, #+0x64
    26F1:	6600      	**prefx    0x66
    26F2:	459C      	bsr        +0x6645 <TimeGet48WithOffset:0x8D37[p]>
    26F3:	F600      	**prefx    0xF6
    26F4:	2618      	ld         x, #-0x9DA
    26F5:	0017      	ld         al, @(0x0, y)
    26F6:	0026      	st         al, @(0x0, x)
    26F7:	0117      	ld         al, @(+0x1, y)
    26F8:	FF26      	st         al, @(-0x1, x)
    26F9:	0217      	ld         al, @(+0x2, y)
    26FA:	F600      	**prefx    0xF6
    26FB:	2425      	st         al, @0xF624 <___libgatt_lib_db_1984>
    26FC:	6414      	ld         al, #+0x64
    26FD:	F700      	**prefx    0xF7
    26FE:	8625      	st         al, @0xF686 <___libgatt_lib_db_1982>
    26FF:	0014      	ld         al, #+0x0
    2700:	F700      	**prefx    0xF7
    2701:	8525      	st         al, @0xF685 <___libgatt_lib_db_1981>
    2702:	0114      	ld         al, #+0x1
    2703:	F600      	**prefx    0xF6
    2704:	2225      	st         al, @0xF622 <___libgatt_lib_db_1971>
    2705:	0100      	**prefx    0x1
    2706:	9614      	ld         al, #+0x96
    2707:	0100      	**prefx    0x1
    2708:	8C00      	**prefx    0x8C
    2709:	539C      	bsr        +0x8C53 <TimeDelayUSec:0xB35C[p]>
    270A:	0314      	ld         al, #+0x3
    270B:	F600      	**prefx    0xF6
    270C:	5C25      	st         al, @0xF65C <___libgatt_lib_db_1425>
    270D:	0214      	ld         al, #+0x2
    270E:	F600      	**prefx    0xF6
    270F:	5C25      	st         al, @0xF65C <___libgatt_lib_db_1425>
    2710:	0014      	ld         al, #+0x0
    2711:	F600      	**prefx    0xF6
    2712:	5C25      	st         al, @0xF65C <___libgatt_lib_db_1425>
    2713:	3214      	ld         al, #+0x32
    2714:	0100      	**prefx    0x1
    2715:	8C00      	**prefx    0x8C
    2716:	469C      	bsr        +0x8C46 <TimeDelayUSec:0xB35C[p]>
    2717:	0214      	ld         al, #+0x2
    2718:	F600      	**prefx    0xF6
    2719:	2225      	st         al, @0xF622 <___libgatt_lib_db_1971>
    271A:	0317      	ld         al, @(+0x3, y)
    271B:	0100      	**prefx    0x1
    271C:	CC00      	**prefx    0xCC
    271D:	659C      	bsr        +0xCC65 <___libgatt_lib_db_4443:0xF382[p]>
    271E:	FD00      	**prefx    0xFD
    271F:	0014      	ld         al, #-0x300
    2720:	F600      	**prefx    0xF6
    2721:	4625      	st         al, @0xF646 <___libgatt_lib_db_1882>
    2722:	9114      	ld         al, #-0x6F
    2723:	F600      	**prefx    0xF6
    2724:	4725      	st         al, @0xF647 <___libgatt_lib_db_1884>
    2725:	050F      	leave      #+0x5

0x00002726 <___libgatt_lib_db_4671>:
    2726:	010B      	enter      #+0x1
    2727:	E315      	ld         al, @0xFFE3 <register uxl>
    2728:	E300      	**prefx    0xE3
    2729:	DD84      	cmp        al, #-0x1D23
    272A:	07F0      	bne        +0x7 <___libgatt_lib_db_4671+0xB:0x2731[p]>
    272B:	4D15      	ld         al, @0x4D <___libgatt_lib_db_2571>
    272C:	07C4      	and        al, #0x7
    272D:	1DF4      	beq        +0x1D <___libgatt_lib_db_4671+0x24:0x274A[p]>
    272E:	0014      	ld         al, #+0x0
    272F:	0327      	st         al, @(+0x3, y)
    2730:	1AE0      	bra        +0x1A <___libgatt_lib_db_4671+0x24:0x274A[p]>
    2731:	E315      	ld         al, @0xFFE3 <register uxl>
    2732:	E300      	**prefx    0xE3
    2733:	3A84      	cmp        al, #-0x1CC6
    2734:	0FF0      	bne        +0xF <___libgatt_lib_db_4671+0x1D:0x2743[p]>
    2735:	0100      	**prefx    0x1
    2736:	BD00      	**prefx    0xBD
    2737:	709C      	bsr        +0xBD70 <___libgatt_lib_db_4276:0xE4A7[p]>
    2738:	5115      	ld         al, @0x51 <___libgatt_lib_db_2885>
    2739:	5019      	ld         x, @0x50 <___libgatt_lib_db_2559>
    273A:	E311      	ld         ah, @0xFFE3 <register uxl>
    273B:	0600      	**prefx    0x6
    273C:	00B4      	or         al, #+0x600
    273D:	5125      	st         al, @0x51 <___libgatt_lib_db_2885>
    273E:	5021      	st         ah, @0x50 <___libgatt_lib_db_2559>
    273F:	0100      	**prefx    0x1
    2740:	BD00      	**prefx    0xBD
    2741:	6F9C      	bsr        +0xBD6F <___libgatt_lib_db_4283:0xE4B0[p]>
    2742:	08E0      	bra        +0x8 <___libgatt_lib_db_4671+0x24:0x274A[p]>
    2743:	E315      	ld         al, @0xFFE3 <register uxl>
    2744:	E400      	**prefx    0xE4
    2745:	8184      	cmp        al, #-0x1C7F
    2746:	04F0      	bne        +0x4 <___libgatt_lib_db_4671+0x24:0x274A[p]>
    2747:	0100      	**prefx    0x1
    2748:	CB00      	**prefx    0xCB
    2749:	799C      	bsr        +0xCB79 <___libgatt_lib_db_4459:0xF2C2[p]>
    274A:	010F      	leave      #+0x1

0x0000274B <___libgatt_lib_db_4207>:
    274B:	1300      	**prefx    0x13
    274C:	7B14      	ld         al, #+0x137B
    274D:	F900      	**prefx    0xF9
    274E:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    274F:	F700      	**prefx    0xF7
    2750:	2B15      	ld         al, @0xF72B <___libgatt_lib_db_3266>
    2751:	04B4      	or         al, #+0x4
    2752:	F700      	**prefx    0xF7
    2753:	2B25      	st         al, @0xF72B <___libgatt_lib_db_3266>
    2754:	0014      	ld         al, #+0x0
    2755:	F900      	**prefx    0xF9
    2756:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2757:	00E2      	bra        0x0, x

0x00002758 <___libgatt_lib_db_4673>:
    2758:	010B      	enter      #+0x1
    2759:	A000      	**prefx    0xA0
    275A:	C315      	ld         al, @0x9FC3 <___libgatt_lib_db_4269+0x3F>
    275B:	FE00      	**prefx    0xFE
    275C:	A125      	st         al, @0xFDA1 <___libgatt_lib_db_3063>
    275D:	0018      	ld         x, #+0x0
    275E:	9C00      	**prefx    0x9C
    275F:	C012      	ld         ah, @(-0x6440, x)
    2760:	E015      	ld         al, @0xFFE0 <register ah>
    2761:	0434      	add        al, #+0x4
    2762:	3FC4      	and        al, #0x3F
    2763:	0984      	cmp        al, #+0x9
    2764:	04F8      	bcc        +0x4 <___libgatt_lib_db_4673+0x10:0x2768[p]>
    2765:	E600      	**prefx    0xE6
    2766:	0030      	add        ah, #-0x1A00
    2767:	03E0      	bra        +0x3 <___libgatt_lib_db_4673+0x12:0x276A[p]>
    2768:	F000      	**prefx    0xF0
    2769:	0030      	add        ah, #-0x1000
    276A:	9C00      	**prefx    0x9C
    276B:	C022      	st         ah, @(-0x6440, x)
    276C:	0138      	add        x, #+0x1
    276D:	2788      	cmp        x, #+0x27
    276E:	F0F0      	bne        -0x10 <___libgatt_lib_db_4673+0x6:0x275E[p]>
    276F:	9C00      	**prefx    0x9C
    2770:	E715      	ld         al, @0x9BE7 <___libgatt_lib_db_165+0x20>
    2771:	1000      	**prefx    0x10
    2772:	0034      	add        al, #+0x1000
    2773:	9C00      	**prefx    0x9C
    2774:	E725      	st         al, @0x9BE7 <___libgatt_lib_db_165+0x20>
    2775:	0614      	ld         al, #+0x6
    2776:	9C00      	**prefx    0x9C
    2777:	8A25      	st         al, @0x9B8A <DATA_RCLUTS_START+0xA>
    2778:	9C00      	**prefx    0x9C
    2779:	AA25      	st         al, @0x9BAA <DATA_RCLUTS_START+0x2A>
    277A:	0100      	**prefx    0x1
    277B:	6814      	ld         al, #+0x168
    277C:	F700      	**prefx    0xF7
    277D:	8925      	st         al, @0xF689 <___libgatt_lib_db_1907>
    277E:	0300      	**prefx    0x3
    277F:	B014      	ld         al, #+0x2B0
    2780:	F700      	**prefx    0xF7
    2781:	8A25      	st         al, @0xF68A <___libgatt_lib_db_1906>
    2782:	0100      	**prefx    0x1
    2783:	C014      	ld         al, #+0xC0
    2784:	9C00      	**prefx    0x9C
    2785:	9125      	st         al, @0x9B91 <DATA_RCLUTS_START+0x11>
    2786:	9C00      	**prefx    0x9C
    2787:	B125      	st         al, @0x9BB1 <DATA_RCLUTS_START+0x31>
    2788:	0700      	**prefx    0x7
    2789:	0E14      	ld         al, #+0x70E
    278A:	9C00      	**prefx    0x9C
    278B:	8E25      	st         al, @0x9B8E <DATA_RCLUTS_START+0xE>
    278C:	9C00      	**prefx    0x9C
    278D:	AE25      	st         al, @0x9BAE <DATA_RCLUTS_START+0x2E>
    278E:	0C00      	**prefx    0xC
    278F:	1214      	ld         al, #+0xC12
    2790:	9C00      	**prefx    0x9C
    2791:	8F25      	st         al, @0x9B8F <DATA_RCLUTS_START+0xF>
    2792:	9C00      	**prefx    0x9C
    2793:	AF25      	st         al, @0x9BAF <DATA_RCLUTS_START+0x2F>
    2794:	4014      	ld         al, #+0x40
    2795:	9C00      	**prefx    0x9C
    2796:	9725      	st         al, @0x9B97 <DATA_RCLUTS_START+0x17>
    2797:	9C00      	**prefx    0x9C
    2798:	B725      	st         al, @0x9BB7 <DATA_RCLUTS_START+0x37>
    2799:	9B00      	**prefx    0x9B
    279A:	7718      	ld         x, #-0x6489
    279B:	0016      	ld         al, @(0x0, x)
    279C:	0426      	st         al, @(+0x4, x)
    279D:	FF38      	add        x, #-0x1
    279E:	9B00      	**prefx    0x9B
    279F:	4388      	cmp        x, #-0x64BD
    27A0:	FBF0      	bne        -0x5 <___libgatt_lib_db_4673+0x43:0x279B[p]>
    27A1:	EC00      	**prefx    0xEC
    27A2:	3F14      	ld         al, #-0x13C1
    27A3:	FE26      	st         al, @(-0x2, x)
    27A4:	0200      	**prefx    0x2
    27A5:	3D14      	ld         al, #+0x23D
    27A6:	0126      	st         al, @(+0x1, x)
    27A7:	EC00      	**prefx    0xEC
    27A8:	3B14      	ld         al, #-0x13C5
    27A9:	2226      	st         al, @(+0x22, x)
    27AA:	0200      	**prefx    0x2
    27AB:	3D14      	ld         al, #+0x23D
    27AC:	2526      	st         al, @(+0x25, x)
    27AD:	0400      	**prefx    0x4
    27AE:	0714      	ld         al, #+0x407
    27AF:	9B00      	**prefx    0x9B
    27B0:	2025      	st         al, @0x9B20 <DATA_TIMERSTRUCT_START>
    27B1:	0D00      	**prefx    0xD
    27B2:	0814      	ld         al, #+0xD08
    27B3:	9B00      	**prefx    0x9B
    27B4:	2225      	st         al, @0x9B22 <DATA_TIMERSTRUCT_START+0x2>
    27B5:	0500      	**prefx    0x5
    27B6:	2F14      	ld         al, #+0x52F
    27B7:	9B00      	**prefx    0x9B
    27B8:	2425      	st         al, @0x9B24 <DATA_TIMERSTRUCT_START+0x4>
    27B9:	0E00      	**prefx    0xE
    27BA:	1014      	ld         al, #+0xE10
    27BB:	9B00      	**prefx    0x9B
    27BC:	2625      	st         al, @0x9B26 <DATA_TIMERSTRUCT_START+0x6>
    27BD:	2134      	add        al, #+0x21
    27BE:	9B00      	**prefx    0x9B
    27BF:	2725      	st         al, @0x9B27 <DATA_TIMERSTRUCT_START+0x7>
    27C0:	010F      	leave      #+0x1

0x000027C1 <___libgatt_lib_db_4676>:
    27C1:	010B      	enter      #+0x1
    27C2:	0100      	**prefx    0x1
    27C3:	D100      	**prefx    0xD1
    27C4:	749C      	bsr        +0xD174 <___libgatt_lib_db_4505:0xF938[p]>
    27C5:	E199      	tst        @0xFFE1 <register al>
    27C6:	06F0      	bne        +0x6 <___libgatt_lib_db_4676+0xB:0x27CC[p]>
    27C7:	0100      	**prefx    0x1
    27C8:	9100      	**prefx    0x91
    27C9:	309C      	bsr        +0x9130 <___libgatt_lib_db_4006:0xB8F9[p]>
    27CA:	E199      	tst        @0xFFE1 <register al>
    27CB:	04F4      	beq        +0x4 <___libgatt_lib_db_4676+0xE:0x27CF[p]>
    27CC:	E800      	**prefx    0xE8
    27CD:	8214      	ld         al, #-0x187E
    27CE:	0027      	st         al, @(0x0, y)
    27CF:	010F      	leave      #+0x1

0x000027D0 <___libgatt_lib_db_4678>:
    27D0:	1117      	ld         al, @(+0x11, y)
    27D1:	0A84      	cmp        al, #+0xA
    27D2:	02F0      	bne        +0x2 <___libgatt_lib_db_4678+0x4:0x27D4[p]>
    27D3:	130F      	leave      #+0x13
    27D4:	00E2      	bra        0x0, x

0x000027D5 <___libgatt_lib_db_4697>:
    27D5:	020B      	enter      #+0x2
    27D6:	F900      	**prefx    0xF9
    27D7:	4215      	ld         al, @0xF942 <___libgatt_lib_db_2749>
    27D8:	0027      	st         al, @(0x0, y)
    27D9:	1300      	**prefx    0x13
    27DA:	7B14      	ld         al, #+0x137B
    27DB:	F900      	**prefx    0xF9
    27DC:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    27DD:	F700      	**prefx    0xF7
    27DE:	2815      	ld         al, @0xF728 <___libgatt_lib_db_3263>
    27DF:	F200      	**prefx    0xF2
    27E0:	FFC4      	and        al, #0xF1FF
    27E1:	F700      	**prefx    0xF7
    27E2:	2825      	st         al, @0xF728 <___libgatt_lib_db_3263>
    27E3:	F700      	**prefx    0xF7
    27E4:	2C15      	ld         al, @0xF72C <___libgatt_lib_db_3267>
    27E5:	FD00      	**prefx    0xFD
    27E6:	FFC4      	and        al, #0xFCFF
    27E7:	F700      	**prefx    0xF7
    27E8:	2C25      	st         al, @0xF72C <___libgatt_lib_db_3267>
    27E9:	4B00      	**prefx    0x4B
    27EA:	6B15      	ld         al, @0x4B6B <patch_pending_mode+0x1A>
    27EB:	F900      	**prefx    0xF9
    27EC:	3B34      	add        al, #-0x6C5
    27ED:	FF27      	st         al, @(-0x1, y)
    27EE:	FF9F      	bsr        @(-0x1, y)
    27EF:	9500      	**prefx    0x95
    27F0:	2225      	st         al, @0x9522 <___libgatt_lib_db_95+0x9>
    27F1:	2784      	cmp        al, #+0x27
    27F2:	0328      	ble        +0x3 <___libgatt_lib_db_4697+0x20:0x27F5[p]>
    27F3:	0014      	ld         al, #+0x0
    27F4:	02E0      	bra        +0x2 <___libgatt_lib_db_4697+0x21:0x27F6[p]>
    27F5:	0214      	ld         al, #+0x2
    27F6:	F400      	**prefx    0xF4
    27F7:	9D19      	ld         x, @0xF39D <___libgatt_lib_db_3238>
    27F8:	09A0      	asl        #0x9
    27F9:	F200      	**prefx    0xF2
    27FA:	FFC8      	and        x, #0xF1FF
    27FB:	E1B9      	or         x, @0xFFE1 <register al>
    27FC:	F400      	**prefx    0xF4
    27FD:	9D29      	st         x, @0xF39D <___libgatt_lib_db_3238>
    27FE:	9500      	**prefx    0x95
    27FF:	1611      	ld         ah, @0x9516 <___libgatt_lib_db_91+0x1>
    2800:	F200      	**prefx    0xF2
    2801:	FFC0      	and        ah, #0xF1FF
    2802:	E1B1      	or         ah, @0xFFE1 <register al>
    2803:	9500      	**prefx    0x95
    2804:	1621      	st         ah, @0x9516 <___libgatt_lib_db_91+0x1>
    2805:	9500      	**prefx    0x95
    2806:	1C11      	ld         ah, @0x951C <___libgatt_lib_db_95+0x3>
    2807:	F200      	**prefx    0xF2
    2808:	FFC0      	and        ah, #0xF1FF
    2809:	E0B5      	or         al, @0xFFE0 <register ah>
    280A:	9500      	**prefx    0x95
    280B:	1C25      	st         al, @0x951C <___libgatt_lib_db_95+0x3>
    280C:	0017      	ld         al, @(0x0, y)
    280D:	F900      	**prefx    0xF9
    280E:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    280F:	020F      	leave      #+0x2

0x00002810 <___libgatt_lib_db_4696>:
    2810:	010B      	enter      #+0x1
    2811:	0017      	ld         al, @(0x0, y)
    2812:	F400      	**prefx    0xF4
    2813:	EA84      	cmp        al, #-0xC16
    2814:	05F4      	beq        +0x5 <___libgatt_lib_db_4696+0x9:0x2819[p]>
    2815:	F400      	**prefx    0xF4
    2816:	0784      	cmp        al, #-0xBF9
    2817:	11F0      	bne        +0x11 <___libgatt_lib_db_4696+0x18:0x2828[p]>
    2818:	0FE0      	bra        +0xF <___libgatt_lib_db_4696+0x17:0x2827[p]>
    2819:	F400      	**prefx    0xF4
    281A:	FE14      	ld         al, #-0xC02
    281B:	0027      	st         al, @(0x0, y)
    281C:	4B00      	**prefx    0x4B
    281D:	6B19      	ld         x, @0x4B6B <patch_pending_mode+0x1A>
    281E:	F900      	**prefx    0xF9
    281F:	3E38      	add        x, #-0x6C2
    2820:	9500      	**prefx    0x95
    2821:	2215      	ld         al, @0x9522 <___libgatt_lib_db_95+0x9>
    2822:	0410      	ld         ah, #+0x4
    2823:	FF2B      	st         x, @(-0x1, y)
    2824:	FF9F      	bsr        @(-0x1, y)
    2825:	E199      	tst        @0xFFE1 <register al>
    2826:	02F4      	beq        +0x2 <___libgatt_lib_db_4696+0x18:0x2828[p]>
    2827:	AE9C      	bsr        -0x52 <___libgatt_lib_db_4697:0x27D5[p]>
    2828:	010F      	leave      #+0x1

0x00002829 <___libgatt_lib_db_4694>:
    2829:	020B      	enter      #+0x2
    282A:	F900      	**prefx    0xF9
    282B:	4215      	ld         al, @0xF942 <___libgatt_lib_db_2749>
    282C:	0027      	st         al, @(0x0, y)
    282D:	1300      	**prefx    0x13
    282E:	7B14      	ld         al, #+0x137B
    282F:	F900      	**prefx    0xF9
    2830:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2831:	FA00      	**prefx    0xFA
    2832:	9215      	ld         al, @0xF992 <___libgatt_lib_db_738>
    2833:	02B4      	or         al, #+0x2
    2834:	FA00      	**prefx    0xFA
    2835:	9225      	st         al, @0xF992 <___libgatt_lib_db_738>
    2836:	0114      	ld         al, #+0x1
    2837:	FB00      	**prefx    0xFB
    2838:	FA9C      	bsr        -0x506 <___libgatt_lib_db_4711:0x2332[p]>
    2839:	9900      	**prefx    0x99
    283A:	4825      	st         al, @0x9948 <cached_vbg>
    283B:	FA00      	**prefx    0xFA
    283C:	9215      	ld         al, @0xF992 <___libgatt_lib_db_738>
    283D:	FDC4      	and        al, #0xFFFD
    283E:	FA00      	**prefx    0xFA
    283F:	9225      	st         al, @0xF992 <___libgatt_lib_db_738>
    2840:	0017      	ld         al, @(0x0, y)
    2841:	F900      	**prefx    0xF9
    2842:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2843:	F300      	**prefx    0xF3
    2844:	2E14      	ld         al, #-0xCD2
    2845:	0127      	st         al, @(+0x1, y)
    2846:	020F      	leave      #+0x2

0x00002847 <___libgatt_lib_db_4695>:
    2847:	010B      	enter      #+0x1
    2848:	0117      	ld         al, @(+0x1, y)
    2849:	F825      	st         al, @0xFFF8 <(scratchpad)>
    284A:	08F0      	bne        +0x8 <___libgatt_lib_db_4695+0xB:0x2852[p]>
    284B:	A000      	**prefx    0xA0
    284C:	9D15      	ld         al, @0x9F9D <___libgatt_lib_db_4269+0x19>
    284D:	0284      	cmp        al, #+0x2
    284E:	04F0      	bne        +0x4 <___libgatt_lib_db_4695+0xB:0x2852[p]>
    284F:	9500      	**prefx    0x95
    2850:	1C18      	ld         x, #-0x6AE4
    2851:	03E0      	bra        +0x3 <___libgatt_lib_db_4695+0xD:0x2854[p]>
    2852:	9500      	**prefx    0x95
    2853:	1618      	ld         x, #-0x6AEA
    2854:	1300      	**prefx    0x13
    2855:	7B14      	ld         al, #+0x137B
    2856:	F900      	**prefx    0xF9
    2857:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2858:	0614      	ld         al, #+0x6
    2859:	F400      	**prefx    0xF4
    285A:	9D10      	ld         ah, #-0xC63
    285B:	FD09      	bc2        
    285C:	F899      	tst        @0xFFF8 <(scratchpad)>
    285D:	05F4      	beq        +0x5 <___libgatt_lib_db_4695+0x1B:0x2862[p]>
    285E:	F000      	**prefx    0xF0
    285F:	3515      	ld         al, @0xF035 <___libgatt_lib_db_1169>
    2860:	FDC4      	and        al, #0xFFFD
    2861:	0AE0      	bra        +0xA <___libgatt_lib_db_4695+0x24:0x286B[p]>
    2862:	2014      	ld         al, #+0x20
    2863:	F000      	**prefx    0xF0
    2864:	0A10      	ld         ah, #-0xFF6
    2865:	9C00      	**prefx    0x9C
    2866:	A018      	ld         x, #-0x6460
    2867:	FD09      	bc2        
    2868:	F000      	**prefx    0xF0
    2869:	3515      	ld         al, @0xF035 <___libgatt_lib_db_1169>
    286A:	02B4      	or         al, #+0x2
    286B:	F000      	**prefx    0xF0
    286C:	3525      	st         al, @0xF035 <___libgatt_lib_db_1169>
    286D:	0014      	ld         al, #+0x0
    286E:	F900      	**prefx    0xF9
    286F:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2870:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    2871:	9500      	**prefx    0x95
    2872:	1525      	st         al, @0x9515 <___libgatt_lib_db_91>
    2873:	030F      	leave      #+0x3
    2874:	010F      	leave      #+0x1

0x00002875 <___libgatt_lib_db_4214>:
    2875:	070B      	enter      #+0x7
    2876:	F900      	**prefx    0xF9
    2877:	4211      	ld         ah, @0xF942 <___libgatt_lib_db_2749>
    2878:	0323      	st         ah, @(+0x3, y)
    2879:	1300      	**prefx    0x13
    287A:	7B14      	ld         al, #+0x137B
    287B:	F900      	**prefx    0xF9
    287C:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    287D:	FA00      	**prefx    0xFA
    287E:	9215      	ld         al, @0xF992 <___libgatt_lib_db_738>
    287F:	01B4      	or         al, #+0x1
    2880:	FA00      	**prefx    0xFA
    2881:	9225      	st         al, @0xF992 <___libgatt_lib_db_738>
    2882:	4B00      	**prefx    0x4B
    2883:	6D11      	ld         ah, @0x4B6D <enable_lo_offset_adc_update+0x1>
    2884:	FB00      	**prefx    0xFB
    2885:	5330      	add        ah, #-0x4AD
    2886:	0214      	ld         al, #+0x2
    2887:	FF23      	st         ah, @(-0x1, y)
    2888:	FF9F      	bsr        @(-0x1, y)
    2889:	0010      	ld         ah, #+0x0
    288A:	0523      	st         ah, @(+0x5, y)
    288B:	0423      	st         ah, @(+0x4, y)
    288C:	4B00      	**prefx    0x4B
    288D:	6D11      	ld         ah, @0x4B6D <enable_lo_offset_adc_update+0x1>
    288E:	FB00      	**prefx    0xFB
    288F:	5A30      	add        ah, #-0x4A6
    2890:	0214      	ld         al, #+0x2
    2891:	FF23      	st         ah, @(-0x1, y)
    2892:	FF9F      	bsr        @(-0x1, y)
    2893:	0537      	add        al, @(+0x5, y)
    2894:	0527      	st         al, @(+0x5, y)
    2895:	0413      	ld         ah, @(+0x4, y)
    2896:	0130      	add        ah, #+0x1
    2897:	0423      	st         ah, @(+0x4, y)
    2898:	0480      	cmp        ah, #+0x4
    2899:	F3F0      	bne        -0xD <___libgatt_lib_db_4214+0x17:0x288C[p]>
    289A:	FA00      	**prefx    0xFA
    289B:	9215      	ld         al, @0xF992 <___libgatt_lib_db_738>
    289C:	FEC4      	and        al, #0xFFFE
    289D:	FA00      	**prefx    0xFA
    289E:	9225      	st         al, @0xF992 <___libgatt_lib_db_738>
    289F:	4B00      	**prefx    0x4B
    28A0:	6D15      	ld         al, @0x4B6D <enable_lo_offset_adc_update+0x1>
    28A1:	FB00      	**prefx    0xFB
    28A2:	9734      	add        al, #-0x569
    28A3:	FF27      	st         al, @(-0x1, y)
    28A4:	FF9F      	bsr        @(-0x1, y)
    28A5:	0313      	ld         ah, @(+0x3, y)
    28A6:	F900      	**prefx    0xF9
    28A7:	4221      	st         ah, @0xF942 <___libgatt_lib_db_2749>
    28A8:	A000      	**prefx    0xA0
    28A9:	BE15      	ld         al, @0x9FBE <___libgatt_lib_db_4269+0x3A>
    28AA:	9400      	**prefx    0x94
    28AB:	4525      	st         al, @0x9445 <build_identifier_integer+0x1>
    28AC:	F984      	cmp        al, #-0x7
    28AD:	0524      	bge        +0x5 <___libgatt_lib_db_4214+0x3D:0x28B2[p]>
    28AE:	F914      	ld         al, #-0x7
    28AF:	9400      	**prefx    0x94
    28B0:	4525      	st         al, @0x9445 <build_identifier_integer+0x1>
    28B1:	06E0      	bra        +0x6 <___libgatt_lib_db_4214+0x42:0x28B7[p]>
    28B2:	0784      	cmp        al, #+0x7
    28B3:	0428      	ble        +0x4 <___libgatt_lib_db_4214+0x42:0x28B7[p]>
    28B4:	0718      	ld         x, #+0x7
    28B5:	9400      	**prefx    0x94
    28B6:	4529      	st         x, @0x9445 <build_identifier_integer+0x1>
    28B7:	9400      	**prefx    0x94
    28B8:	4511      	ld         ah, @0x9445 <build_identifier_integer+0x1>
    28B9:	0223      	st         ah, @(+0x2, y)
    28BA:	0F17      	ld         al, @(+0xF, y)
    28BB:	FF27      	st         al, @(-0x1, y)
    28BC:	0F1B      	ld         x, @(+0xF, y)
    28BD:	0513      	ld         ah, @(+0x5, y)
    28BE:	0009      	**unsigned
    28BF:	02A4      	lsr        #0x2
    28C0:	E015      	ld         al, @0xFFE0 <register ah>
    28C1:	0009      	**unsigned
    28C2:	0200      	**prefx    0x2
    28C3:	BE90      	umult      #0x1BE
    28C4:	FB25      	st         al, @0xFFFB <(scratchpad)>
    28C5:	FA21      	st         ah, @0xFFFA <(scratchpad)>
    28C6:	E311      	ld         ah, @0xFFE3 <register uxl>
    28C7:	0009      	**unsigned
    28C8:	01A4      	lsr        #0x1
    28C9:	F921      	st         ah, @0xFFF9 <(scratchpad)>
    28CA:	0018      	ld         x, #+0x0
    28CB:	F829      	st         x, @0xFFF8 <(scratchpad)>
    28CC:	FB15      	ld         al, @0xFFFB <(scratchpad)>
    28CD:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    28CE:	F935      	add        al, @0xFFF9 <(scratchpad)>
    28CF:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
    28D0:	0127      	st         al, @(+0x1, y)
    28D1:	0023      	st         ah, @(0x0, y)
    28D2:	0014      	ld         al, #+0x0
    28D3:	FF13      	ld         ah, @(-0x1, y)
    28D4:	6500      	**prefx    0x65
    28D5:	9D9C      	bsr        +0x649D <___libgatt_lib_db_3943:0x8D72[p]>
    28D6:	0213      	ld         ah, @(+0x2, y)
    28D7:	0200      	**prefx    0x2
    28D8:	F030      	add        ah, #+0x1F0
    28D9:	E151      	sub        ah, @0xFFE1 <register al>
    28DA:	9400      	**prefx    0x94
    28DB:	4521      	st         ah, @0x9445 <build_identifier_integer+0x1>
    28DC:	D880      	cmp        ah, #-0x28
    28DD:	0524      	bge        +0x5 <___libgatt_lib_db_4214+0x6D:0x28E2[p]>
    28DE:	D810      	ld         ah, #-0x28
    28DF:	9400      	**prefx    0x94
    28E0:	4521      	st         ah, @0x9445 <build_identifier_integer+0x1>
    28E1:	08E0      	bra        +0x8 <___libgatt_lib_db_4214+0x74:0x28E9[p]>
    28E2:	0100      	**prefx    0x1
    28E3:	8280      	cmp        ah, #+0x82
    28E4:	0528      	ble        +0x5 <___libgatt_lib_db_4214+0x74:0x28E9[p]>
    28E5:	0100      	**prefx    0x1
    28E6:	8214      	ld         al, #+0x82
    28E7:	9400      	**prefx    0x94
    28E8:	4525      	st         al, @0x9445 <build_identifier_integer+0x1>
    28E9:	8D00      	**prefx    0x8D
    28EA:	EB15      	ld         al, @0x8CEB <MemCopyUnPack+0xB>
    28EB:	9C84      	cmp        al, #-0x64
    28EC:	05F0      	bne        +0x5 <___libgatt_lib_db_4214+0x7C:0x28F1[p]>
    28ED:	9400      	**prefx    0x94
    28EE:	4519      	ld         x, @0x9445 <build_identifier_integer+0x1>
    28EF:	8D00      	**prefx    0x8D
    28F0:	EB29      	st         x, @0x8CEB <MemCopyUnPack+0xB>
    28F1:	F000      	**prefx    0xF0
    28F2:	3515      	ld         al, @0xF035 <___libgatt_lib_db_1169>
    28F3:	02C4      	and        al, #0x2
    28F4:	2FF0      	bne        +0x2F <L0+0x19:0x2923[p]>
    28F5:	9400      	**prefx    0x94
    28F6:	4519      	ld         x, @0x9445 <build_identifier_integer+0x1>
    28F7:	8D00      	**prefx    0x8D
    28F8:	EB11      	ld         ah, @0x8CEB <MemCopyUnPack+0xB>
    28F9:	E015      	ld         al, @0xFFE0 <register ah>
    28FA:	FD34      	add        al, #-0x3
    28FB:	E189      	cmp        x, @0xFFE1 <register al>
    28FC:	04E4      	blt        +0x4 <___libgatt_lib_db_4214+0x8B:0x2900[p]>
    28FD:	0330      	add        ah, #+0x3
    28FE:	E089      	cmp        x, @0xFFE0 <register ah>
    28FF:	2428      	ble        +0x24 <L0+0x19:0x2923[p]>
    2900:	0100      	**prefx    0x1
    2901:	6810      	ld         ah, #+0x168
    2902:	F700      	**prefx    0xF7
    2903:	8921      	st         ah, @0xF689 <___libgatt_lib_db_1907>
    2904:	0300      	**prefx    0x3
    2905:	B014      	ld         al, #+0x2B0
    2906:	F700      	**prefx    0xF7
    2907:	8A25      	st         al, @0xF68A <___libgatt_lib_db_1906>
    2908:	F000      	**prefx    0xF0
    2909:	2A15      	ld         al, @0xF02A <___libgatt_lib_db_918>
    290A:	FF00      	**prefx    0xFF
    290B:	00C4      	and        al, #0xFF00
    290C:	0100      	**prefx    0x1
    290D:	BFB4      	or         al, #+0xBF
    290E:	F000      	**prefx    0xF0
    290F:	2A25      	st         al, @0xF02A <___libgatt_lib_db_918>
    2910:	9400      	**prefx    0x94
    2911:	4511      	ld         ah, @0x9445 <build_identifier_integer+0x1>
    2912:	8D00      	**prefx    0x8D
    2913:	EB21      	st         ah, @0x8CEB <MemCopyUnPack+0xB>
    2914:	0118      	ld         x, #+0x1
    2915:	4B00      	**prefx    0x4B
    2916:	6C29      	st         x, @0x4B6C <enable_lo_offset_adc_update>
    2917:	E230      	add        ah, #-0x1E
    2918:	10A4      	asr        #0x10
    2919:	0394      	sdiv       #+0x3
    291A:	C084      	cmp        al, #-0x40
    291B:	0224      	bge        +0x2 <L0+0x13:0x291D[p]>
    291C:	C014      	ld         al, #-0x40
    291D:	3F84      	cmp        al, #+0x3F
    291E:	0228      	ble        +0x2 <L0+0x16:0x2920[p]>
    291F:	3F14      	ld         al, #+0x3F
    2920:	F700      	**prefx    0xF7
    2921:	8D25      	st         al, @0xF68D <___libgatt_lib_db_1875>
    2922:	11E0      	bra        +0x11 <L0+0x29:0x2933[p]>
    2923:	F000      	**prefx    0xF0
    2924:	2A15      	ld         al, @0xF02A <___libgatt_lib_db_918>
    2925:	FF00      	**prefx    0xFF
    2926:	00C4      	and        al, #0xFF00
    2927:	37B4      	or         al, #+0x37
    2928:	F000      	**prefx    0xF0
    2929:	2A25      	st         al, @0xF02A <___libgatt_lib_db_918>
    292A:	0010      	ld         ah, #+0x0
    292B:	4B00      	**prefx    0x4B
    292C:	6C21      	st         ah, @0x4B6C <enable_lo_offset_adc_update>
    292D:	F700      	**prefx    0xF7
    292E:	8921      	st         ah, @0xF689 <___libgatt_lib_db_1907>
    292F:	0400      	**prefx    0x4
    2930:	FF14      	ld         al, #+0x3FF
    2931:	F700      	**prefx    0xF7
    2932:	8A25      	st         al, @0xF68A <___libgatt_lib_db_1906>
    2933:	9400      	**prefx    0x94
    2934:	4515      	ld         al, @0x9445 <build_identifier_integer+0x1>
    2935:	3284      	cmp        al, #+0x32
    2936:	1A28      	ble        +0x1A <L0+0x46:0x2950[p]>
    2937:	F600      	**prefx    0xF6
    2938:	3D15      	ld         al, @0xF63D <___libgatt_lib_db_1819>
    2939:	17EC      	bmi        +0x17 <L0+0x46:0x2950[p]>
    293A:	9C00      	**prefx    0x9C
    293B:	9919      	ld         x, @0x9B99 <DATA_RCLUTS_START+0x19>
    293C:	FE00      	**prefx    0xFE
    293D:	FFC8      	and        x, #0xFDFF
    293E:	9C00      	**prefx    0x9C
    293F:	9929      	st         x, @0x9B99 <DATA_RCLUTS_START+0x19>
    2940:	FF00      	**prefx    0xFF
    2941:	4B10      	ld         ah, #-0xB5
    2942:	F600      	**prefx    0xF6
    2943:	5021      	st         ah, @0xF650 <___libgatt_lib_db_1806>
    2944:	F600      	**prefx    0xF6
    2945:	3D15      	ld         al, @0xF63D <___libgatt_lib_db_1819>
    2946:	8000      	**prefx    0x80
    2947:	00B4      	or         al, #-0x8000
    2948:	F600      	**prefx    0xF6
    2949:	3D25      	st         al, @0xF63D <___libgatt_lib_db_1819>
    294A:	F600      	**prefx    0xF6
    294B:	3E15      	ld         al, @0xF63E <___libgatt_lib_db_1820>
    294C:	8000      	**prefx    0x80
    294D:	00B4      	or         al, #-0x8000
    294E:	F600      	**prefx    0xF6
    294F:	3E25      	st         al, @0xF63E <___libgatt_lib_db_1820>
    2950:	9400      	**prefx    0x94
    2951:	4515      	ld         al, @0x9445 <build_identifier_integer+0x1>
    2952:	2C84      	cmp        al, #+0x2C
    2953:	1620      	bgt        +0x16 <L0+0x5F:0x2969[p]>
    2954:	F600      	**prefx    0xF6
    2955:	3D15      	ld         al, @0xF63D <___libgatt_lib_db_1819>
    2956:	13E8      	bpl        +0x13 <L0+0x5F:0x2969[p]>
    2957:	F600      	**prefx    0xF6
    2958:	3D15      	ld         al, @0xF63D <___libgatt_lib_db_1819>
    2959:	8000      	**prefx    0x80
    295A:	FFC4      	and        al, #0x7FFF
    295B:	F600      	**prefx    0xF6
    295C:	3D25      	st         al, @0xF63D <___libgatt_lib_db_1819>
    295D:	F600      	**prefx    0xF6
    295E:	3E15      	ld         al, @0xF63E <___libgatt_lib_db_1820>
    295F:	8000      	**prefx    0x80
    2960:	FFC4      	and        al, #0x7FFF
    2961:	F600      	**prefx    0xF6
    2962:	3E25      	st         al, @0xF63E <___libgatt_lib_db_1820>
    2963:	9C00      	**prefx    0x9C
    2964:	9915      	ld         al, @0x9B99 <DATA_RCLUTS_START+0x19>
    2965:	0200      	**prefx    0x2
    2966:	00B4      	or         al, #+0x200
    2967:	9C00      	**prefx    0x9C
    2968:	9925      	st         al, @0x9B99 <DATA_RCLUTS_START+0x19>
    2969:	9400      	**prefx    0x94
    296A:	4515      	ld         al, @0x9445 <build_identifier_integer+0x1>
    296B:	8D00      	**prefx    0x8D
    296C:	EC55      	sub        al, @0x8CEC <MemCopyUnPack+0xC>
    296D:	E199      	tst        @0xFFE1 <register al>
    296E:	02E8      	bpl        +0x2 <L0+0x66:0x2970[p]>
    296F:	0074      	nadd       al, #+0x0
    2970:	0584      	cmp        al, #+0x5
    2971:	572C      	bcz        +0x57 <L0+0xBE:0x29C8[p]>
    2972:	9400      	**prefx    0x94
    2973:	4519      	ld         x, @0x9445 <build_identifier_integer+0x1>
    2974:	FA29      	st         x, @0xFFFA <(scratchpad)>
    2975:	8D00      	**prefx    0x8D
    2976:	EC29      	st         x, @0x8CEC <MemCopyUnPack+0xC>
    2977:	A000      	**prefx    0xA0
    2978:	8811      	ld         ah, @0x9F88 <___libgatt_lib_db_4269+0x4>
    2979:	FB21      	st         ah, @0xFFFB <(scratchpad)>
    297A:	A000      	**prefx    0xA0
    297B:	C415      	ld         al, @0x9FC4 <___libgatt_lib_db_4269+0x40>
    297C:	04F0      	bne        +0x4 <L0+0x76:0x2980[p]>
    297D:	A000      	**prefx    0xA0
    297E:	C599      	tst        @0x9FC5 <___libgatt_lib_db_4269+0x41>
    297F:	42F4      	beq        +0x42 <L0+0xB7:0x29C1[p]>
    2980:	FA19      	ld         x, @0xFFFA <(scratchpad)>
    2981:	E189      	cmp        x, @0xFFE1 <register al>
    2982:	0424      	bge        +0x4 <L0+0x7C:0x2986[p]>
    2983:	A000      	**prefx    0xA0
    2984:	C515      	ld         al, @0x9FC5 <___libgatt_lib_db_4269+0x41>
    2985:	34E0      	bra        +0x34 <L0+0xAF:0x29B9[p]>
    2986:	0010      	ld         ah, #+0x0
    2987:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    2988:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    2989:	2034      	add        al, #+0x20
    298A:	01A0      	asl        #0x1
    298B:	A000      	**prefx    0xA0
    298C:	8434      	add        al, #-0x607C
    298D:	F925      	st         al, @0xFFF9 <(scratchpad)>
    298E:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    298F:	01A0      	asl        #0x1
    2990:	E119      	ld         x, @0xFFE1 <register al>
    2991:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    2992:	A000      	**prefx    0xA0
    2993:	C482      	cmp        ah, @(-0x603C, x)
    2994:	04E4      	blt        +0x4 <L0+0x8E:0x2998[p]>
    2995:	A000      	**prefx    0xA0
    2996:	C682      	cmp        ah, @(-0x603A, x)
    2997:	0EE4      	blt        +0xE <L0+0x9B:0x29A5[p]>
    2998:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    2999:	0134      	add        al, #+0x1
    299A:	F825      	st         al, @0xFFF8 <(scratchpad)>
    299B:	2034      	add        al, #+0x20
    299C:	01A0      	asl        #0x1
    299D:	E119      	ld         x, @0xFFE1 <register al>
    299E:	A000      	**prefx    0xA0
    299F:	8438      	add        x, #-0x607C
    29A0:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
    29A1:	0580      	cmp        ah, #+0x5
    29A2:	E6F0      	bne        -0x1A <L0+0x7E:0x2988[p]>
    29A3:	FF16      	ld         al, @(-0x1, x)
    29A4:	15E0      	bra        +0x15 <L0+0xAF:0x29B9[p]>
    29A5:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    29A6:	001A      	ld         x, @(0x0, x)
    29A7:	FF2B      	st         x, @(-0x1, y)
    29A8:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    29A9:	011A      	ld         x, @(+0x1, x)
    29AA:	F829      	st         x, @0xFFF8 <(scratchpad)>
    29AB:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
    29AC:	FF53      	sub        ah, @(-0x1, y)
    29AD:	FA21      	st         ah, @0xFFFA <(scratchpad)>
    29AE:	F919      	ld         x, @0xFFF9 <(scratchpad)>
    29AF:	0316      	ld         al, @(+0x3, x)
    29B0:	F855      	sub        al, @0xFFF8 <(scratchpad)>
    29B1:	FA91      	smult      @0xFFFA <(scratchpad)>
    29B2:	0212      	ld         ah, @(+0x2, x)
    29B3:	FF53      	sub        ah, @(-0x1, y)
    29B4:	F921      	st         ah, @0xFFF9 <(scratchpad)>
    29B5:	E111      	ld         ah, @0xFFE1 <register al>
    29B6:	10A4      	asr        #0x10
    29B7:	F995      	sdiv       @0xFFF9 <(scratchpad)>
    29B8:	F835      	add        al, @0xFFF8 <(scratchpad)>
    29B9:	FB35      	add        al, @0xFFFB <(scratchpad)>
    29BA:	3F84      	cmp        al, #+0x3F
    29BB:	0228      	ble        +0x2 <L0+0xB3:0x29BD[p]>
    29BC:	3F14      	ld         al, #+0x3F
    29BD:	FB25      	st         al, @0xFFFB <(scratchpad)>
    29BE:	03E8      	bpl        +0x3 <L0+0xB7:0x29C1[p]>
    29BF:	0014      	ld         al, #+0x0
    29C0:	FB25      	st         al, @0xFFFB <(scratchpad)>
    29C1:	4B00      	**prefx    0x4B
    29C2:	6D11      	ld         ah, @0x4B6D <enable_lo_offset_adc_update+0x1>
    29C3:	F900      	**prefx    0xF9
    29C4:	9630      	add        ah, #-0x76A
    29C5:	FB15      	ld         al, @0xFFFB <(scratchpad)>
    29C6:	FF23      	st         ah, @(-0x1, y)
    29C7:	FF9F      	bsr        @(-0x1, y)
    29C8:	1017      	ld         al, @(+0x10, y)
    29C9:	F500      	**prefx    0xF5
    29CA:	A384      	cmp        al, #-0xB5D
    29CB:	06F0      	bne        +0x6 <L0+0xC7:0x29D1[p]>
    29CC:	FE00      	**prefx    0xFE
    29CD:	089C      	bsr        -0x1F8 <___libgatt_lib_db_4697:0x27D5[p]>
    29CE:	F500      	**prefx    0xF5
    29CF:	A510      	ld         ah, #-0xB5B
    29D0:	1023      	st         ah, @(+0x10, y)
    29D1:	110F      	leave      #+0x11
    29D2:	070F      	leave      #+0x7

0x000029D3 <___libgatt_lib_db_4709>:
    29D3:	070B      	enter      #+0x7
    29D4:	0B17      	ld         al, @(+0xB, y)
    29D5:	04F4      	beq        +0x4 <___libgatt_lib_db_4709+0x6:0x29D9[p]>
    29D6:	0014      	ld         al, #+0x0
    29D7:	0100      	**prefx    0x1
    29D8:	81E0      	bra        +0x81 <L0+0x2D:0x2A59[p]>
    29D9:	0E17      	ld         al, @(+0xE, y)
    29DA:	7CF4      	beq        +0x7C <L0+0x2A:0x2A56[p]>
    29DB:	4B00      	**prefx    0x4B
    29DC:	6E15      	ld         al, @0x4B6E <enable_lo_offset_adc_update+0x2>
    29DD:	F300      	**prefx    0xF3
    29DE:	F234      	add        al, #-0xD0E
    29DF:	FF27      	st         al, @(-0x1, y)
    29E0:	FF9F      	bsr        @(-0x1, y)
    29E1:	0527      	st         al, @(+0x5, y)
    29E2:	4B00      	**prefx    0x4B
    29E3:	6E11      	ld         ah, @0x4B6E <enable_lo_offset_adc_update+0x2>
    29E4:	F900      	**prefx    0xF9
    29E5:	4D30      	add        ah, #-0x6B3
    29E6:	FF23      	st         ah, @(-0x1, y)
    29E7:	FF9F      	bsr        @(-0x1, y)
    29E8:	1300      	**prefx    0x13
    29E9:	7B10      	ld         ah, #+0x137B
    29EA:	F900      	**prefx    0xF9
    29EB:	4221      	st         ah, @0xF942 <___libgatt_lib_db_2749>
    29EC:	F400      	**prefx    0xF4
    29ED:	9E15      	ld         al, @0xF39E <___libgatt_lib_db_3239>
    29EE:	01B4      	or         al, #+0x1
    29EF:	F400      	**prefx    0xF4
    29F0:	9E25      	st         al, @0xF39E <___libgatt_lib_db_3239>
    29F1:	F400      	**prefx    0xF4
    29F2:	A215      	ld         al, @0xF3A2 <___libgatt_lib_db_3243>
    29F3:	F3C4      	and        al, #0xFFF3
    29F4:	F400      	**prefx    0xF4
    29F5:	A225      	st         al, @0xF3A2 <___libgatt_lib_db_3243>
    29F6:	F400      	**prefx    0xF4
    29F7:	9C15      	ld         al, @0xF39C <___libgatt_lib_db_3237>
    29F8:	E0C4      	and        al, #0xFFE0
    29F9:	08B4      	or         al, #+0x8
    29FA:	F400      	**prefx    0xF4
    29FB:	9C25      	st         al, @0xF39C <___libgatt_lib_db_3237>
    29FC:	F400      	**prefx    0xF4
    29FD:	9C15      	ld         al, @0xF39C <___libgatt_lib_db_3237>
    29FE:	FC00      	**prefx    0xFC
    29FF:	1FC4      	and        al, #0xFC1F
    2A00:	F400      	**prefx    0xF4
    2A01:	9C25      	st         al, @0xF39C <___libgatt_lib_db_3237>
    2A02:	0714      	ld         al, #+0x7
    2A03:	F900      	**prefx    0xF9
    2A04:	2E9C      	bsr        -0x6D2 <___libgatt_lib_db_4711:0x2332[p]>
    2A05:	F825      	st         al, @0xFFF8 <(scratchpad)>
    2A06:	F400      	**prefx    0xF4
    2A07:	9C15      	ld         al, @0xF39C <___libgatt_lib_db_3237>
    2A08:	E0C4      	and        al, #0xFFE0
    2A09:	F400      	**prefx    0xF4
    2A0A:	9C25      	st         al, @0xF39C <___libgatt_lib_db_3237>
    2A0B:	F400      	**prefx    0xF4
    2A0C:	A215      	ld         al, @0xF3A2 <___libgatt_lib_db_3243>
    2A0D:	F3C4      	and        al, #0xFFF3
    2A0E:	F400      	**prefx    0xF4
    2A0F:	A225      	st         al, @0xF3A2 <___libgatt_lib_db_3243>
    2A10:	F400      	**prefx    0xF4
    2A11:	9E15      	ld         al, @0xF39E <___libgatt_lib_db_3239>
    2A12:	FEC4      	and        al, #0xFFFE
    2A13:	F400      	**prefx    0xF4
    2A14:	9E25      	st         al, @0xF39E <___libgatt_lib_db_3239>
    2A15:	0014      	ld         al, #+0x0
    2A16:	F900      	**prefx    0xF9
    2A17:	4225      	st         al, @0xF942 <___libgatt_lib_db_2749>
    2A18:	0513      	ld         ah, @(+0x5, y)
    2A19:	0009      	**unsigned
    2A1A:	01A4      	lsr        #0x1
    2A1B:	E019      	ld         x, @0xFFE0 <register ah>
    2A1C:	F815      	ld         al, @0xFFF8 <(scratchpad)>
    2A1D:	0009      	**unsigned
    2A1E:	0C00      	**prefx    0xC
    2A1F:	B890      	umult      #0xBB8
    2A20:	F925      	st         al, @0xFFF9 <(scratchpad)>
    2A21:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    2A22:	0010      	ld         ah, #+0x0
    2A23:	E315      	ld         al, @0xFFE3 <register uxl>
    2A24:	F935      	add        al, @0xFFF9 <(scratchpad)>
    2A25:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
    2A26:	0127      	st         al, @(+0x1, y)
    2A27:	0023      	st         ah, @(0x0, y)
    2A28:	0014      	ld         al, #+0x0
    2A29:	0513      	ld         ah, @(+0x5, y)
    2A2A:	6300      	**prefx    0x63
    2A2B:	479C      	bsr        +0x6347 <___libgatt_lib_db_3943:0x8D72[p]>
    2A2C:	9500      	**prefx    0x95
    2A2D:	2625      	st         al, @0x9526 <___libgatt_lib_db_95+0xD>
    2A2E:	A000      	**prefx    0xA0
    2A2F:	B711      	ld         ah, @0x9FB7 <___libgatt_lib_db_4269+0x33>
    2A30:	E085      	cmp        al, @0xFFE0 <register ah>
    2A31:	04F8      	bcc        +0x4 <L0+0x9:0x2A35[p]>
    2A32:	9500      	**prefx    0x95
    2A33:	2581      	cmp        ah, @0x9525 <___libgatt_lib_db_95+0xC>
    2A34:	08FC      	bcs        +0x8 <L0+0x10:0x2A3C[p]>
    2A35:	9500      	**prefx    0x95
    2A36:	2515      	ld         al, @0x9525 <___libgatt_lib_db_95+0xC>
    2A37:	E085      	cmp        al, @0xFFE0 <register ah>
    2A38:	1DF8      	bcc        +0x1D <L0+0x29:0x2A55[p]>
    2A39:	9500      	**prefx    0x95
    2A3A:	2681      	cmp        ah, @0x9526 <___libgatt_lib_db_95+0xD>
    2A3B:	1AF8      	bcc        +0x1A <L0+0x29:0x2A55[p]>
    2A3C:	9500      	**prefx    0x95
    2A3D:	2615      	ld         al, @0x9526 <___libgatt_lib_db_95+0xD>
    2A3E:	0018      	ld         x, #+0x0
    2A3F:	022B      	st         x, @(+0x2, y)
    2A40:	E085      	cmp        al, @0xFFE0 <register ah>
    2A41:	03F8      	bcc        +0x3 <L0+0x18:0x2A44[p]>
    2A42:	0114      	ld         al, #+0x1
    2A43:	0227      	st         al, @(+0x2, y)
    2A44:	0423      	st         ah, @(+0x4, y)
    2A45:	9500      	**prefx    0x95
    2A46:	2619      	ld         x, @0x9526 <___libgatt_lib_db_95+0xD>
    2A47:	032B      	st         x, @(+0x3, y)
    2A48:	4B00      	**prefx    0x4B
    2A49:	6E19      	ld         x, @0x4B6E <enable_lo_offset_adc_update+0x2>
    2A4A:	F600      	**prefx    0xF6
    2A4B:	9438      	add        x, #-0xA6C
    2A4C:	0114      	ld         al, #+0x1
    2A4D:	E411      	ld         ah, @0xFFE4 <register uy>
    2A4E:	0230      	add        ah, #+0x2
    2A4F:	FF2B      	st         x, @(-0x1, y)
    2A50:	FF9F      	bsr        @(-0x1, y)
    2A51:	9500      	**prefx    0x95
    2A52:	2611      	ld         ah, @0x9526 <___libgatt_lib_db_95+0xD>
    2A53:	9500      	**prefx    0x95
    2A54:	2521      	st         ah, @0x9525 <___libgatt_lib_db_95+0xC>
    2A55:	0114      	ld         al, #+0x1
    2A56:	FA00      	**prefx    0xFA
    2A57:	0A18      	ld         x, #-0x5F6
    2A58:	062B      	st         x, @(+0x6, y)
    2A59:	070F      	leave      #+0x7
