/******************************************************************************
 *  FILE
 *      vf_pwm.h
 *
 *  DESCRIPTION
 *      This file provides the interface to the Very Fast PWM library.
 *      The PWM output has a frequency of 15686 Hz, and the pulse widths 
 *      can be adjusted in 0.25 microsecond steps. Up to 4 PWM outputs
 *      are available. It's possible to have more PWM outputs (up to 8)
 *      but not implemented in this release.
 *
 *      Note that the mode of PIOs for PWM output must be set to 
 *      pio_mode_pio_controller because the PWM output are generated by
 *      the PIO Controller running at 16MHz.
 *
 *  NOTICE
 *      Use of beta release software is at your own risk.  This software is
 *      provided "as is," and CSR cautions users to determine for themselves
 *      the suitability of using the beta version of this software.  CSR
 *      makes no warranty or representation whatsoever of merchantability or
 *      fitness of the product for any particular purpose or use.  In no
 *      event shall CSR be liable for any consequential, incidental or
 *      special damages whatsoever arising out of the use of or inability to
 *      use this software, even if the user has advised CSR of the
 *      possibility of such damages.  Provision of this software does not
 *      imply that it has been given a Bluetooth Qualification listing.
 *      There is no guarantee that CSR will seek a Bluetooth Qualification
 *      listing for the software.
 *
 *****************************************************************************/

#ifndef __VF_PWM_H
#define __VF_PWM_H

/*----------------------------------------------------------------------------*
 *  NAME
 *      VFPWMConfig
 *
 *  DESCRIPTION
 *      This user application function is called to specify the PIOs to be used 
 *      for PWM output. If all four PWMs are not used, don't specify the same 
 *      PIOs on the used ones as the used ones. Note that all PIOs would be on
 *      the same bank.
 *
 *      Note that the system can only go to shallow sleep after this function is
 *      called until SleepModeChange is called with sleep_mode_deep. 
 *
 *  PARAMETERS
 *  	pio_bank [in]   0 for PIOs 0~7, 1 for PIOs 8~15, 2 for PIOs 16~23 and
 *                      3 for PIOs 24~31
 *  	pio_bit0 [in]   bit position (0~7) of PWM0
 *		pio_bit1 [in]   bit position (0~7) of PWM1
 *		pio_bit2 [in]   bit position (0~7) of PWM2
 *		pio_bit3 [in]   bit position (0~7) of PWM3
 *      invert [in]     TRUE if the output should be inverted
 *  RETURNS
 *      TRUE if successful, FALSE if failed
 *----------------------------------------------------------------------------*/

bool VFPWMConfig(uint8 pio_bank, uint8 pio_bit0, uint8 pio_bit1,bool invert);

/*----------------------------------------------------------------------------*
 *  NAME
 *      VFPWMStart
 *
 *  DESCRIPTION
 *      This user application function is called to start the PWM output with
 *      the specified widths. The Frequency of the pulses is fixed at 15686 Hz
 *      (=16MHz/(255*4)), and the unit of the width is 0.25 microsecond.
 *
 *  PARAMETERS
 *  	width0 [in]     The PWM pulse width (0~255) for each PWM 0
 *  	width1 [in]     The PWM pulse width (0~255) for each PWM 1
 *  	width2 [in]     The PWM pulse width (0~255) for each PWM 2
 *  	width3 [in]     The PWM pulse width (0~255) for each PWM 3
 *  RETURNS
 *      TRUE if successful, FALSE if failed
 *----------------------------------------------------------------------------*/

bool VFPWMStart(uint8 width0, uint8 width1);

/*----------------------------------------------------------------------------*
 *  NAME
 *      VFPWMStop
 *
 *  DESCRIPTION
 *      This user application function is called to stop the PIO Controller.
 *
 *  PARAMETERS
 *  	NONE
 *
 *  RETURNS
 *      NONE
 *----------------------------------------------------------------------------*/

void VFPWMStop(void);

#endif